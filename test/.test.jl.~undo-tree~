(undo-tree-save-format-version . 1)
"81b457c0508c05778ba30a11bf02fe2ee2ebe7bc"
[nil nil nil nil (25384 26863 622906 153000) 0 nil]
([nil nil ((nil rear-nonsticky nil 4 . 5) (nil fontified nil 1 . 5) (1 . 5) (t . -1)) nil (25384 26863 622903 360000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8 . 9) (nil fontified nil 5 . 9) (5 . 9) 4) nil (25384 26863 622900 985000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12 . 13) (nil fontified nil 9 . 13) (9 . 13) 8) nil (25384 26863 622898 121000) 0 nil])
([nil nil ((#("TESTTESTTEST" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 7 (fontified t) 7 8 (fontified t rear-nonsticky t) 8 11 (fontified t) 11 12 (fontified t rear-nonsticky t)) . 1) (undo-tree-id257 . -11) (undo-tree-id258 . -11) (undo-tree-id259 . -3) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -3) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -7) (undo-tree-id338 . -8) (undo-tree-id339 . -11) (undo-tree-id340 . -7) (undo-tree-id341 . -7) (undo-tree-id342 . -7) (undo-tree-id343 . -7) (undo-tree-id344 . -7) (undo-tree-id345 . -7) (undo-tree-id346 . -7) (undo-tree-id347 . -7) (undo-tree-id348 . -7) (undo-tree-id349 . -7) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -7) (undo-tree-id364 . -7) (undo-tree-id365 . -7) (undo-tree-id366 . -7) (undo-tree-id367 . -7) (undo-tree-id368 . -7) (undo-tree-id369 . -7) (undo-tree-id370 . -7) (undo-tree-id371 . -7) (undo-tree-id372 . -7) (undo-tree-id373 . -7) (undo-tree-id374 . -7) (undo-tree-id375 . -7) (undo-tree-id376 . -7) (undo-tree-id377 . -7) (undo-tree-id378 . -7) (undo-tree-id379 . -7) (undo-tree-id380 . -7) (undo-tree-id381 . -7) (undo-tree-id382 . -7) (undo-tree-id383 . -7) (undo-tree-id384 . -7) (undo-tree-id385 . -7) (undo-tree-id386 . -7) (undo-tree-id387 . -7) (undo-tree-id388 . -7) (undo-tree-id389 . -7) (undo-tree-id390 . -4) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -11) (undo-tree-id394 . -11) (undo-tree-id395 . -11) (undo-tree-id396 . -11) (undo-tree-id397 . -11) (undo-tree-id398 . -11) (undo-tree-id399 . -11) (undo-tree-id400 . -11) (undo-tree-id401 . -11) (undo-tree-id402 . -11) (undo-tree-id403 . -11) (undo-tree-id404 . -11) (undo-tree-id405 . -11) (undo-tree-id406 . -11) (undo-tree-id407 . -11) (undo-tree-id408 . -11) (undo-tree-id409 . -11) (undo-tree-id410 . -11) (undo-tree-id411 . -11) (undo-tree-id412 . -11) (undo-tree-id413 . -11) (undo-tree-id414 . -11) (undo-tree-id415 . -11) (undo-tree-id416 . -11) (undo-tree-id417 . -11) (undo-tree-id418 . -11) (undo-tree-id419 . -11) (undo-tree-id420 . -11) (undo-tree-id421 . -12) (undo-tree-id422 . -11) (undo-tree-id423 . -11) (undo-tree-id424 . -11) (undo-tree-id425 . -11) (undo-tree-id426 . -11) (undo-tree-id427 . -11) (undo-tree-id428 . -11) (undo-tree-id429 . -11) (undo-tree-id430 . -11) (undo-tree-id431 . -11) (undo-tree-id432 . -11) (undo-tree-id433 . -11) (undo-tree-id434 . -11) (undo-tree-id435 . -11) (undo-tree-id436 . -11) (undo-tree-id437 . -11) (undo-tree-id438 . -11) (undo-tree-id439 . -11) (undo-tree-id440 . -11) (undo-tree-id441 . -11) (undo-tree-id442 . -11) (undo-tree-id443 . -11) (undo-tree-id444 . -11) (undo-tree-id445 . -11) (undo-tree-id446 . -11) (undo-tree-id447 . -11) (undo-tree-id448 . -11) (undo-tree-id449 . -11) 12) nil (25384 26863 622886 737000) 0 nil])
([nil nil ((#("using " 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . -1) (undo-tree-id0 . -6) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . -5) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -6) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -6) (undo-tree-id255 . -6) (undo-tree-id256 . -6) 7 (1 . 7)) nil (25384 26863 622736 788000) 0 nil])
([nil nil ((1 . 10) (#("using " 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . -1) (undo-tree-id472 . -6) 7 (1 . 7) (t 25384 26863 630574 377000)) nil (25384 26940 991108 652000) 0 nil])
([nil nil ((12 . 28) (#("g" 0 1 (fontified t)) . -12) (undo-tree-id470 . -1) (#("k" 0 1 (fontified t)) . -13) (undo-tree-id471 . -1) 14 (11 . 14) (10 . 11)) nil (25384 26940 991104 880000) 0 nil])
([nil nil ((#("Pkg" 0 3 (fontified t)) . -29) (undo-tree-id462 . -3) 32 (#("." 0 1 (fontified t)) . -32) (undo-tree-id463 . -1) 33 (#("activate" 0 8 (fontified t)) . -33) (undo-tree-id464 . -8) 41 (29 . 41) (#("Pkg" 0 3 (fontified t)) . -29) (undo-tree-id465 . -3) 32 (#("." 0 1 (fontified t)) . -32) (undo-tree-id466 . -1) 33 (#("activate" 0 8 (fontified t)) . -33) (undo-tree-id467 . -8) 41 (29 . 41) (#("
" 0 1 (fontified t)) . -29) (undo-tree-id468 . -1) 30 (#(" " 0 1 (fontified nil)) . -29) (undo-tree-id469 . -1) (30 . 31) (29 . 30) (28 . 29)) nil (25384 26940 991097 757000) 0 nil])
([nil nil ((nil rear-nonsticky nil 102 . 103) (nil fontified nil 38 . 103) (38 . 103) (37 . 38) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -37) (undo-tree-id456 . -1) (#("" 0 1 (fontified t face font-lock-string-face)) . -38) (undo-tree-id457 . -1) (#("A" 0 1 (fontified t face font-lock-string-face)) . -39) (undo-tree-id458 . -1) 40 (39 . 40) (38 . 39) (#("Optimal" 0 7 (fontified t face font-lock-string-face)) . -38) (undo-tree-id459 . -7) 45 (30 . 45) (#("g" 0 1 (fontified t)) . -30) (undo-tree-id460 . -1) (#("k" 0 1 (fontified t)) . -31) (undo-tree-id461 . -1) 32 (29 . 32)) nil (25384 26940 991084 277000) 0 nil])
([nil nil ((92 . 94) (#(" " 0 1 (fontified t)) . -92) (undo-tree-id451 . -1) 93 (83 . 93) (#("/" 0 1 (fontified t face font-lock-string-face)) . -83) (undo-tree-id452 . -1) 84 (#("tre" 0 3 (fontified t face font-lock-string-face)) . -84) (undo-tree-id453 . -3) 87 (#("e" 0 1 (fontified t face font-lock-string-face)) . -87) (undo-tree-id454 . -1) 88 (#("/" 0 1 (fontified t face font-lock-string-face)) . -88) (undo-tree-id455 . -1) 89) nil (25384 26940 991057 109000) 0 nil])
([nil nil ((108 . 110)) nil (25384 26940 991049 7000) 0 nil])
([nil nil ((37 . 41)) nil (25384 26940 991047 191000) 0 nil])
([nil nil ((#("branch" 0 6 (fontified t)) . 90) (undo-tree-id450 . -5) 95) nil (25384 26940 991044 328000) 0 nil])
([nil nil ((90 . 93)) nil (25384 26940 991032 944000) 0 nil])
([nil nil ((111 . 113)) nil (25384 26940 991026 99000) 0 nil])
([nil nil ((nil rear-nonsticky nil 118 . 119) (nil fontified nil 113 . 119) (113 . 119) (t 25384 26940 990149 871000)) nil (25384 27197 835072 713000) 0 nil])
([nil nil ((#("
branch" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t rear-nonsticky t)) . 112) (undo-tree-id742 . -5) (undo-tree-id743 . -1) (undo-tree-id744 . -6) (undo-tree-id745 . -1) (undo-tree-id746 . -5) (undo-tree-id747 . -5) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -5) (undo-tree-id752 . -1) (undo-tree-id753 . -5) (undo-tree-id754 . -5) 117) nil (25384 27197 835066 497000) 0 nil])
([nil nil ((134 . 135) (113 . 134) (112 . 113)) nil (25384 27197 835043 589000) 0 nil])
([nil nil ((135 . 136)) nil (25384 27197 835039 817000) 0 nil])
([nil nil ((136 . 151)) nil (25384 27197 835036 535000) 0 nil])
([nil nil ((152 . 163) (151 . 152)) nil (25384 27197 835033 601000) 0 nil])
([nil nil ((163 . 165)) nil (25384 27197 835029 271000) 0 nil])
([nil nil ((#("ing " 0 4 (fontified t)) . -165) (undo-tree-id594 . -4) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -2) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) 169 (165 . 169)) nil (25384 27197 835012 90000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -172) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (#("
" 0 1 (fontified t)) . -173) (undo-tree-id565 . -1) (undo-tree-id566 . 1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) 174 (173 . 174) (165 . 173)) nil (25384 27197 834731 49000) 0 nil])
([nil nil ((189 . 204) (188 . 189) (#("\\pi" 0 1 (fontified t syntax-table (1)) 1 3 (fontified t)) . 188) (undo-tree-id473 . -3) 191 (186 . 191) (185 . 186) (#("\\pi" 0 1 (fontified t syntax-table (1)) 1 3 (fontified t)) . 185) (undo-tree-id474 . -3) 188 (174 . 188) (173 . 174) (#("\\theta" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 173) (undo-tree-id475 . -6) 179 (173 . 179) (#("t" 0 1 (fontified t)) . -173) (undo-tree-id476 . -1) (#(" " 0 1 (fontified t)) . -174) (undo-tree-id477 . -1) 175 (173 . 175) (#("θs " 0 3 (fontified t)) . -173) (undo-tree-id478 . -3) 176 (#("= " 0 2 (fontified t)) . -176) (undo-tree-id479 . -2) 178 (174 . 178) (#(" " 0 1 (fontified t)) . -174) (undo-tree-id480 . -1) (#("=" 0 1 (fontified t)) . -175) (undo-tree-id481 . -1) (#(" " 0 1 (fontified t)) . -176) (undo-tree-id482 . -1) 177 (174 . 177) (#("s" 0 1 (fontified t)) . -174) (undo-tree-id483 . -1) (#(" " 0 1 (fontified t)) . -175) (undo-tree-id484 . -1) 176 (174 . 176) (173 . 174) (#("\\theta" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 173) (undo-tree-id485 . -6) 179 (173 . 179) (172 . 173)) nil (25384 27197 834557 214000) 0 nil])
([nil nil ((204 . 205)) nil (25384 27197 834504 204000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . -205) (undo-tree-id780 . -1) (#(" " 0 1 (fontified t)) . -206) (undo-tree-id781 . -1) (#("=" 0 1 (fontified t)) . -207) (undo-tree-id782 . -1) 208 (205 . 208) (#("
" 0 1 (fontified t)) . -205) (undo-tree-id783 . -1) (#("
" 0 1 (fontified t)) . -206) (undo-tree-id784 . -1) 207 (205 . 207) (t 25384 27197 845407 58000)) nil (25384 27443 589165 655000) 0 nil])
([nil nil ((227 . 231) (206 . 227) (205 . 206)) nil (25384 27443 589147 426000) 0 nil])
([nil nil ((209 . 215)) nil (25384 27443 589142 677000) 0 nil])
([nil nil ((246 . 248) (245 . 246) (#("\\theta" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 245) (undo-tree-id777 . -6) (undo-tree-id778 . -6) 251 (#("a" 0 1 (fontified t)) . -251) (undo-tree-id779 . -1) 252 (237 . 252)) nil (25384 27443 589139 324000) 0 nil])
([nil nil ((206 . 210)) nil (25384 27443 589129 896000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 205)) nil (25384 27443 589126 474000) 0 nil])
([nil nil ((268 . 278) (#("[" 0 1 (fontified t)) . -268) (undo-tree-id771 . -1) (#("," 0 1 (fontified t)) . -269) (undo-tree-id772 . -1) 270 (267 . 270) (#("0" 0 1 (fontified t)) . -267) (undo-tree-id773 . -1) (#("]" 0 1 (fontified t)) . -268) (undo-tree-id774 . -1) 269 (#(" " 0 1 (fontified t)) . -269) (undo-tree-id775 . -1) 270 (263 . 270) (#(":" 0 1 (fontified t)) . -263) (undo-tree-id776 . -1) 264 (253 . 264) (251 . 253)) nil (25384 27443 589121 655000) 0 nil])
([nil nil ((#("
scatter(X[1, :], X[2, :])" 0 1 (fontified t) 1 26 (fontified t)) . 252) (undo-tree-id759 . -25) (undo-tree-id760 . -1) (undo-tree-id761 . -25) (undo-tree-id762 . -25) (undo-tree-id763 . -25) (undo-tree-id764 . -25) (undo-tree-id765 . 1) (undo-tree-id766 . -26) (undo-tree-id767 . 18) (undo-tree-id768 . -9) (undo-tree-id769 . -25) (undo-tree-id770 . -25) 277) nil (25384 27443 589106 429000) 0 nil])
([nil nil ((274 . 282) (#("n" 0 1 (fontified t)) . -274) (undo-tree-id755 . -1) 275 (274 . 275) (#("a" 0 1 (fontified t)) . -274) (undo-tree-id756 . -1) (#("s" 0 1 (fontified t)) . -275) (undo-tree-id757 . -1) (#("n" 0 1 (fontified t)) . -276) (undo-tree-id758 . -1) 277 (273 . 277) (252 . 273)) nil (25384 27443 589082 124000) 0 nil])
([nil nil ((282 . 284)) nil (25384 27443 589045 947000) 0 nil])
([nil nil ((288 . 295) (#("C" 0 1 (fontified t)) . -288) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) 289 (283 . 289) (t 25384 27443 600725 156000)) nil (25384 27447 496636 478000) 0 nil])
([nil nil ((296 . 297) (t 25384 27447 507370 385000)) nil (25384 27522 410295 137000) 0 nil])
([nil nil ((164 . 179) (163 . 164)) nil (25384 27522 410293 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 313 . 314) (#("
" 0 1 (fontified nil)) . -541) (313 . 542)) nil (25384 27522 410290 807000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 313) (undo-tree-id822 . -1)) nil (25384 27522 410288 432000) 0 nil])
([nil nil ((#("kernel_ot_quad = (X, ε; diag_inf = false, rtol = 1e-6, atol = 1e-9) -> symm(" 0 35 (fontified t) 35 40 (fontified t face font-lock-constant-face) 40 76 (fontified t)) . 313) (undo-tree-id815 . -75) (undo-tree-id816 . -75) (undo-tree-id817 . -75) (undo-tree-id818 . -75) (undo-tree-id819 . -75) (undo-tree-id820 . 1) (undo-tree-id821 . -76) 388) nil (25384 27522 410285 80000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 463) (undo-tree-id812 . -1) (undo-tree-id813 . 1) (undo-tree-id814 . -1)) nil (25384 27522 410276 70000) 0 nil])
([nil nil ((463 . 464)) nil (25384 27522 410259 308000) 0 nil])
([nil nil ((#("get_cost(X; diag_inf = diag_inf)" 0 32 (fontified t)) . 339) (undo-tree-id823 . -31) (undo-tree-id824 . -31) (undo-tree-id825 . -4) (undo-tree-id826 . -31) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (undo-tree-id843 . -2) (undo-tree-id844 . -2) (undo-tree-id845 . -2) (undo-tree-id846 . -2) (undo-tree-id847 . -2) (undo-tree-id848 . -2) (undo-tree-id849 . -2) (undo-tree-id850 . -2) (undo-tree-id851 . -2) (undo-tree-id852 . -3) (undo-tree-id853 . -3) (undo-tree-id854 . -3) (undo-tree-id855 . -3) (undo-tree-id856 . -3) (undo-tree-id857 . -3) (undo-tree-id858 . -3) (undo-tree-id859 . -3) (undo-tree-id860 . -3) (undo-tree-id861 . -3) (undo-tree-id862 . -3) (undo-tree-id863 . -3) (undo-tree-id864 . -3) (undo-tree-id865 . -3) (undo-tree-id866 . -3) (undo-tree-id867 . -3) (undo-tree-id868 . -3) (undo-tree-id869 . -3) (undo-tree-id870 . -3) (undo-tree-id871 . -3) (undo-tree-id872 . -3) (undo-tree-id873 . -3) (undo-tree-id874 . -3) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -3) (undo-tree-id878 . -3) (undo-tree-id879 . -3) (undo-tree-id880 . -3) (undo-tree-id881 . -3) (undo-tree-id882 . -3) (undo-tree-id883 . -3) (undo-tree-id884 . -3) (undo-tree-id885 . -3) (undo-tree-id886 . -3) (undo-tree-id887 . -3) (undo-tree-id888 . -3) (undo-tree-id889 . -3) (undo-tree-id890 . -3) (undo-tree-id891 . -3) (undo-tree-id892 . -3) (undo-tree-id893 . -3) (undo-tree-id894 . -3) (undo-tree-id895 . -3) (undo-tree-id896 . -3) (undo-tree-id897 . -3) (undo-tree-id898 . -3) (undo-tree-id899 . -3) (undo-tree-id900 . -3) (undo-tree-id901 . -3) (undo-tree-id902 . -7) (undo-tree-id903 . -7) (undo-tree-id904 . -7) (undo-tree-id905 . -7) (undo-tree-id906 . -7) (undo-tree-id907 . -7) (undo-tree-id908 . -7) (undo-tree-id909 . -7) (undo-tree-id910 . -7) (undo-tree-id911 . -7) (undo-tree-id912 . -7) (undo-tree-id913 . -7) (undo-tree-id914 . -7) (undo-tree-id915 . -7) (undo-tree-id916 . -7) (undo-tree-id917 . -7) (undo-tree-id918 . -7) (undo-tree-id919 . -7) (undo-tree-id920 . -7) (undo-tree-id921 . -7) (undo-tree-id922 . -7) (undo-tree-id923 . -7) (undo-tree-id924 . -7) (undo-tree-id925 . -7) (undo-tree-id926 . -7) (undo-tree-id927 . -8) (undo-tree-id928 . -8) (undo-tree-id929 . -8) (undo-tree-id930 . -8) (undo-tree-id931 . -8) (undo-tree-id932 . -8) (undo-tree-id933 . -8) (undo-tree-id934 . -8) (undo-tree-id935 . -8) (undo-tree-id936 . -8) (undo-tree-id937 . -8) (undo-tree-id938 . -8) (undo-tree-id939 . -8) (undo-tree-id940 . -8) (undo-tree-id941 . -8) (undo-tree-id942 . -8) (undo-tree-id943 . -8) (undo-tree-id944 . -8) (undo-tree-id945 . -8) (undo-tree-id946 . -8) (undo-tree-id947 . -8) (undo-tree-id948 . -8) (undo-tree-id949 . -8) (undo-tree-id950 . -8) (undo-tree-id951 . -8) (undo-tree-id952 . -8) (undo-tree-id953 . -8) (undo-tree-id954 . -8) (undo-tree-id955 . -8) (undo-tree-id956 . -8) (undo-tree-id957 . -8) (undo-tree-id958 . -8) (undo-tree-id959 . -8) (undo-tree-id960 . -8) (undo-tree-id961 . -8) (undo-tree-id962 . -8) (undo-tree-id963 . -8) (undo-tree-id964 . -8) (undo-tree-id965 . -8) (undo-tree-id966 . -8) (undo-tree-id967 . -8) (undo-tree-id968 . -8) (undo-tree-id969 . -8) (undo-tree-id970 . -8) (undo-tree-id971 . -8) (undo-tree-id972 . -8) (undo-tree-id973 . -8) (undo-tree-id974 . -8) (undo-tree-id975 . -8) (undo-tree-id976 . -8) (undo-tree-id977 . -8) (undo-tree-id978 . -8) (undo-tree-id979 . -8) (undo-tree-id980 . -8) (undo-tree-id981 . -8) (undo-tree-id982 . -8) (undo-tree-id983 . -8) (undo-tree-id984 . -8) (undo-tree-id985 . -8) (undo-tree-id986 . -8) (undo-tree-id987 . -8) (undo-tree-id988 . -8) (undo-tree-id989 . -8) (undo-tree-id990 . -8) (undo-tree-id991 . -8) (undo-tree-id992 . -8) (undo-tree-id993 . -8) (undo-tree-id994 . -8) (undo-tree-id995 . -8) (undo-tree-id996 . -8) (undo-tree-id997 . -8) (undo-tree-id998 . -8) (undo-tree-id999 . -8) (undo-tree-id1000 . -8) (undo-tree-id1001 . -8) (undo-tree-id1002 . -8) (undo-tree-id1003 . -8) (undo-tree-id1004 . -8) (undo-tree-id1005 . -8) (undo-tree-id1006 . -8) (undo-tree-id1007 . -8) (undo-tree-id1008 . -8) (undo-tree-id1009 . -8) (undo-tree-id1010 . -8) (undo-tree-id1011 . -8) (undo-tree-id1012 . -8) (undo-tree-id1013 . -8) (undo-tree-id1014 . -8) (undo-tree-id1015 . -8) (undo-tree-id1016 . -8) (undo-tree-id1017 . -8) (undo-tree-id1018 . -8) (undo-tree-id1019 . -8) (undo-tree-id1020 . -8) (undo-tree-id1021 . -8) (undo-tree-id1022 . -8) (undo-tree-id1023 . -8) (undo-tree-id1024 . -8) (undo-tree-id1025 . -8) (undo-tree-id1026 . -8) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) (undo-tree-id1061 . -4) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) (undo-tree-id1073 . -4) (undo-tree-id1074 . -4) (undo-tree-id1075 . -4) (undo-tree-id1076 . -4) (undo-tree-id1077 . -4) (undo-tree-id1078 . -4) (undo-tree-id1079 . -4) (undo-tree-id1080 . -4) (undo-tree-id1081 . -4) (undo-tree-id1082 . -4) (undo-tree-id1083 . -4) (undo-tree-id1084 . -4) (undo-tree-id1085 . -4) (undo-tree-id1086 . -4) (undo-tree-id1087 . -4) (undo-tree-id1088 . -4) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -4) (undo-tree-id1092 . -4) (undo-tree-id1093 . -4) (undo-tree-id1094 . -4) (undo-tree-id1095 . -4) (undo-tree-id1096 . -4) (undo-tree-id1097 . -4) (undo-tree-id1098 . -4) (undo-tree-id1099 . -4) (undo-tree-id1100 . -4) (undo-tree-id1101 . -4) (undo-tree-id1102 . -4) (undo-tree-id1103 . -4) (undo-tree-id1104 . -4) (undo-tree-id1105 . -4) (undo-tree-id1106 . -4) (undo-tree-id1107 . -4) (undo-tree-id1108 . -4) (undo-tree-id1109 . -4) (undo-tree-id1110 . -4) (undo-tree-id1111 . -4) (undo-tree-id1112 . -4) (undo-tree-id1113 . -4) (undo-tree-id1114 . -4) (undo-tree-id1115 . -4) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -4) (undo-tree-id1121 . -4) (undo-tree-id1122 . -4) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) (undo-tree-id1128 . -4) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4) (undo-tree-id1131 . -4) (undo-tree-id1132 . -4) (undo-tree-id1133 . -4) (undo-tree-id1134 . -4) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -4) (undo-tree-id1144 . -4) (undo-tree-id1145 . -4) (undo-tree-id1146 . -4) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) (undo-tree-id1150 . -4) (undo-tree-id1151 . -4) (undo-tree-id1152 . -3) (undo-tree-id1153 . -3) (undo-tree-id1154 . -3) (undo-tree-id1155 . -3) (undo-tree-id1156 . -3) (undo-tree-id1157 . -3) (undo-tree-id1158 . -3) (undo-tree-id1159 . -3) (undo-tree-id1160 . -3) (undo-tree-id1161 . -3) (undo-tree-id1162 . -3) (undo-tree-id1163 . -3) (undo-tree-id1164 . -3) (undo-tree-id1165 . -3) (undo-tree-id1166 . -3) (undo-tree-id1167 . -3) (undo-tree-id1168 . -3) (undo-tree-id1169 . -3) (undo-tree-id1170 . -3) (undo-tree-id1171 . -3) (undo-tree-id1172 . -3) (undo-tree-id1173 . -3) (undo-tree-id1174 . -3) (undo-tree-id1175 . -3) (undo-tree-id1176 . -3) (undo-tree-id1177 . -2) (undo-tree-id1178 . -2) (undo-tree-id1179 . -2) (undo-tree-id1180 . -2) (undo-tree-id1181 . -2) (undo-tree-id1182 . -2) (undo-tree-id1183 . -2) (undo-tree-id1184 . -2) (undo-tree-id1185 . -2) (undo-tree-id1186 . -2) (undo-tree-id1187 . -2) (undo-tree-id1188 . -2) (undo-tree-id1189 . -2) (undo-tree-id1190 . -2) (undo-tree-id1191 . -2) (undo-tree-id1192 . -2) (undo-tree-id1193 . -2) (undo-tree-id1194 . -2) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2) (undo-tree-id1197 . -2) (undo-tree-id1198 . -2) (undo-tree-id1199 . -2) (undo-tree-id1200 . -2) (undo-tree-id1201 . -2) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -32) (undo-tree-id1228 . -31) (undo-tree-id1229 . -2) (undo-tree-id1230 . -2) (undo-tree-id1231 . -2) (undo-tree-id1232 . -2) (undo-tree-id1233 . -2) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) (undo-tree-id1236 . -2) (undo-tree-id1237 . -2) (undo-tree-id1238 . -2) (undo-tree-id1239 . -2) (undo-tree-id1240 . -2) (undo-tree-id1241 . -2) (undo-tree-id1242 . -2) (undo-tree-id1243 . -2) (undo-tree-id1244 . -2) (undo-tree-id1245 . -2) (undo-tree-id1246 . -2) (undo-tree-id1247 . -2) (undo-tree-id1248 . -2) (undo-tree-id1249 . -2) (undo-tree-id1250 . -2) (undo-tree-id1251 . -2) (undo-tree-id1252 . -2) (undo-tree-id1253 . -2) (undo-tree-id1254 . -3) (undo-tree-id1255 . -3) (undo-tree-id1256 . -3) (undo-tree-id1257 . -3) (undo-tree-id1258 . -3) (undo-tree-id1259 . -3) (undo-tree-id1260 . -3) (undo-tree-id1261 . -3) (undo-tree-id1262 . -3) (undo-tree-id1263 . -3) (undo-tree-id1264 . -3) (undo-tree-id1265 . -3) (undo-tree-id1266 . -3) (undo-tree-id1267 . -3) (undo-tree-id1268 . -3) (undo-tree-id1269 . -3) (undo-tree-id1270 . -3) (undo-tree-id1271 . -3) (undo-tree-id1272 . -3) (undo-tree-id1273 . -3) (undo-tree-id1274 . -3) (undo-tree-id1275 . -3) (undo-tree-id1276 . -3) (undo-tree-id1277 . -3) (undo-tree-id1278 . -3) (undo-tree-id1279 . -7) (undo-tree-id1280 . -7) (undo-tree-id1281 . -7) (undo-tree-id1282 . -7) (undo-tree-id1283 . -7) (undo-tree-id1284 . -7) (undo-tree-id1285 . -7) (undo-tree-id1286 . -7) (undo-tree-id1287 . -7) (undo-tree-id1288 . -7) (undo-tree-id1289 . -7) (undo-tree-id1290 . -7) (undo-tree-id1291 . -7) (undo-tree-id1292 . -7) (undo-tree-id1293 . -7) (undo-tree-id1294 . -7) (undo-tree-id1295 . -7) (undo-tree-id1296 . -7) (undo-tree-id1297 . -7) (undo-tree-id1298 . -7) (undo-tree-id1299 . -7) (undo-tree-id1300 . -7) (undo-tree-id1301 . -7) (undo-tree-id1302 . -7) (undo-tree-id1303 . -7) (undo-tree-id1304 . -8) (undo-tree-id1305 . -8) (undo-tree-id1306 . -8) (undo-tree-id1307 . -8) (undo-tree-id1308 . -8) (undo-tree-id1309 . -8) (undo-tree-id1310 . -8) (undo-tree-id1311 . -8) (undo-tree-id1312 . -8) (undo-tree-id1313 . -8) (undo-tree-id1314 . -8) (undo-tree-id1315 . -8) (undo-tree-id1316 . -8) (undo-tree-id1317 . -8) (undo-tree-id1318 . -8) (undo-tree-id1319 . -8) (undo-tree-id1320 . -8) (undo-tree-id1321 . -8) (undo-tree-id1322 . -8) (undo-tree-id1323 . -8) (undo-tree-id1324 . -8) (undo-tree-id1325 . -8) (undo-tree-id1326 . -8) (undo-tree-id1327 . -8) (undo-tree-id1328 . -8) (undo-tree-id1329 . 1) (undo-tree-id1330 . -32) (undo-tree-id1331 . 24) (undo-tree-id1332 . -9) (undo-tree-id1333 . -8) (undo-tree-id1334 . -8) (undo-tree-id1335 . -8) (undo-tree-id1336 . -8) (undo-tree-id1337 . -8) (undo-tree-id1338 . -8) (undo-tree-id1339 . -8) (undo-tree-id1340 . -8) (undo-tree-id1341 . -8) (undo-tree-id1342 . -8) (undo-tree-id1343 . -8) (undo-tree-id1344 . -8) (undo-tree-id1345 . -8) (undo-tree-id1346 . -8) (undo-tree-id1347 . -8) (undo-tree-id1348 . -8) (undo-tree-id1349 . -8) (undo-tree-id1350 . -8) (undo-tree-id1351 . -8) (undo-tree-id1352 . -8) (undo-tree-id1353 . -8) (undo-tree-id1354 . -8) (undo-tree-id1355 . -8) (undo-tree-id1356 . -8) (undo-tree-id1357 . -8) (undo-tree-id1358 . -8) (undo-tree-id1359 . -31) (undo-tree-id1360 . -31) (undo-tree-id1361 . -31) (undo-tree-id1362 . -31) (undo-tree-id1363 . -31) (undo-tree-id1364 . -31) (undo-tree-id1365 . -31) (undo-tree-id1366 . -31) (undo-tree-id1367 . -31) (undo-tree-id1368 . -31) (undo-tree-id1369 . -31) (undo-tree-id1370 . -31) (undo-tree-id1371 . -31) (undo-tree-id1372 . -31) (undo-tree-id1373 . -31) (undo-tree-id1374 . -31) (undo-tree-id1375 . -31) (undo-tree-id1376 . -31) (undo-tree-id1377 . -31) (undo-tree-id1378 . -31) (undo-tree-id1379 . -31) (undo-tree-id1380 . -31) (undo-tree-id1381 . -31) (undo-tree-id1382 . -31) (undo-tree-id1383 . -31) (undo-tree-id1384 . -31) (undo-tree-id1385 . -31) (undo-tree-id1386 . -31) (undo-tree-id1387 . -31) (undo-tree-id1388 . -31) (undo-tree-id1389 . -31) (undo-tree-id1390 . -31) (undo-tree-id1391 . -31) (undo-tree-id1392 . -31) (undo-tree-id1393 . -31) (undo-tree-id1394 . -31) (undo-tree-id1395 . -31) (undo-tree-id1396 . -31) (undo-tree-id1397 . -31) (undo-tree-id1398 . -31) (undo-tree-id1399 . -31) (undo-tree-id1400 . -31) (undo-tree-id1401 . -31) (undo-tree-id1402 . -31) (undo-tree-id1403 . -31) (undo-tree-id1404 . -31) (undo-tree-id1405 . -31) (undo-tree-id1406 . -31) (undo-tree-id1407 . -31) (undo-tree-id1408 . -31) (undo-tree-id1409 . -31) 370 (t 25384 27522 413626 7000)) nil (25384 27535 551626 563000) 0 nil])
([nil nil ((339 . 340)) nil (25384 27535 550822 969000) 0 nil])
([nil nil ((405 . 406) (#("," 0 1 (fontified t)) . -405) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (#(" " 0 1 (fontified t)) . -406) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) 407 (#("atol " 0 5 (fontified t)) . -407) (undo-tree-id1447 . -5) (undo-tree-id1448 . -5) 412 (#("= " 0 2 (fontified t)) . -412) (undo-tree-id1449 . -2) (undo-tree-id1450 . -2) 414 (#("atol" 0 4 (fontified t)) . -414) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) 418 (#(", " 0 2 (fontified t)) . -418) (undo-tree-id1453 . -2) (undo-tree-id1454 . -2) 420 (#("rtol " 0 5 (fontified t)) . -420) (undo-tree-id1455 . -5) (undo-tree-id1456 . -5) 425 (#("= " 0 2 (fontified t)) . -425) (undo-tree-id1457 . -2) (undo-tree-id1458 . -2) (undo-tree-id1459 . -2) 427 (#("rtol" 0 4 (fontified t)) . -427) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) 431 (#(")" 0 1 (fontified t)) . -431) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . 1) (undo-tree-id1466 . -1) 432 (t 25384 27535 563553 848000)) nil (25384 27651 942417 673000) 0 nil])
([nil nil ((314 . 320) (313 . 314) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 313) (undo-tree-id1440 . -11) 324 (314 . 324) (#("\\" 0 1 (fontified t syntax-table (1))) . -314) (undo-tree-id1441 . -1) 315 (314 . 315) (#("vare" 0 4 (fontified t)) . -314) (undo-tree-id1442 . -4) 318 (313 . 318) (312 . 313)) nil (25384 27651 942396 302000) 0 nil])
([nil nil ((nil rear-nonsticky nil 480 . 481) (nil fontified nil 416 . 481) (416 . 481) (414 . 416)) nil (25384 27651 942390 505000) 0 nil])
([nil nil ((#("quadreg(ones(size(X, 2)), C, ε, OptimalTransport.SymmetricQuadraticOTNewton(); maxiter = 100)
" 0 94 (fontified t)) . 321) (undo-tree-id1424 . -17) (undo-tree-id1425 . -92) (undo-tree-id1426 . -17) (undo-tree-id1427 . -17) (undo-tree-id1428 . -7) (undo-tree-id1429 . -7) (undo-tree-id1430 . -26) (undo-tree-id1431 . -17) (undo-tree-id1432 . -17) (undo-tree-id1433 . -26) (undo-tree-id1434 . 77) (undo-tree-id1435 . -18) (undo-tree-id1436 . 72) (undo-tree-id1437 . -23) (undo-tree-id1438 . -17) (undo-tree-id1439 . -17) 338) nil (25384 27651 942388 60000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -369)) nil (25384 27651 942348 41000) 0 nil])
([nil nil ((321 . 322)) nil (25384 27651 942346 644000) 0 nil])
([nil nil ((322 . 337) (#("=" 0 1 (fontified t)) . -322) (undo-tree-id1421 . -1) (#(" " 0 1 (fontified t)) . -323) (undo-tree-id1422 . -1) 324 (322 . 324) (321 . 322) (#("\\mu" 0 1 (fontified t syntax-table (1)) 1 3 (fontified t)) . 321) (undo-tree-id1423 . -3) 324 (321 . 324)) nil (25384 27651 942343 781000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 338)) nil (25384 27651 942339 102000) 0 nil])
([nil nil ((338 . 339)) nil (25384 27651 942337 635000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -373) (undo-tree-id1417 . -1) (#(" " 0 1 (fontified t)) . -374) (undo-tree-id1418 . -1) 375 (#("kwargs" 0 6 (fontified t)) . -375) (undo-tree-id1419 . -6) 381 (#("..." 0 3 (fontified t)) . -381) (undo-tree-id1420 . -3) 384) nil (25384 27651 942334 282000) 0 nil])
([nil nil ((361 . 365) (#("r" 0 1 (fontified t)) . -361) (undo-tree-id1414 . -1) (#("o" 0 1 (fontified t)) . -362) (undo-tree-id1415 . -1) (#("t" 0 1 (fontified t)) . -363) (undo-tree-id1416 . -1) 364 (348 . 364)) nil (25384 27651 942326 600000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -432) (undo-tree-id1411 . -1) 433 (429 . 433) (408 . 429) (387 . 408) (#("alg" 0 3 (fontified t)) . -387) (undo-tree-id1412 . -3) (undo-tree-id1413 . -3) 390) nil (25384 27651 942321 292000) 0 nil])
([nil nil ((216 . 217) (#("250" 0 3 (fontified t)) . -216) (undo-tree-id1410 . -3) 219) nil (25384 27651 942314 657000) 0 nil])
([nil nil ((445 . 449) (432 . 445)) nil (25384 27651 942298 733000) 0 nil])
([nil nil ((464 . 465) (t 25384 27651 952915 167000)) nil (25384 27653 775055 873000) 0 nil])
([nil nil ((465 . 473) (#("z" 0 1 (fontified t)) . -465) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) 466 (465 . 466) (t 25384 27653 786238 440000)) nil (25384 27688 695365 154000) 0 nil])
([nil nil ((477 . 479) (472 . 477) (#("u" 0 1 (fontified t)) . 472) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1)) nil (25384 27688 695341 827000) 0 nil])
([nil nil ((362 . 363) (361 . 362) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 361) (undo-tree-id1809 . -11) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -2) (undo-tree-id1837 . -2) (undo-tree-id1838 . -2) (undo-tree-id1839 . -2) (undo-tree-id1840 . -2) (undo-tree-id1841 . -2) (undo-tree-id1842 . -2) (undo-tree-id1843 . -2) (undo-tree-id1844 . -2) (undo-tree-id1845 . -2) (undo-tree-id1846 . -2) (undo-tree-id1847 . -2) (undo-tree-id1848 . -2) (undo-tree-id1849 . -2) (undo-tree-id1850 . -2) (undo-tree-id1851 . -2) (undo-tree-id1852 . -2) (undo-tree-id1853 . -2) (undo-tree-id1854 . -2) (undo-tree-id1855 . -2) (undo-tree-id1856 . -2) (undo-tree-id1857 . -2) (undo-tree-id1858 . -2) (undo-tree-id1859 . -2) (undo-tree-id1860 . -2) (undo-tree-id1861 . -2) (undo-tree-id1862 . -3) (undo-tree-id1863 . -3) (undo-tree-id1864 . -3) (undo-tree-id1865 . -3) (undo-tree-id1866 . -3) (undo-tree-id1867 . -3) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) (undo-tree-id1875 . -3) (undo-tree-id1876 . -3) (undo-tree-id1877 . -3) (undo-tree-id1878 . -3) (undo-tree-id1879 . -3) (undo-tree-id1880 . -3) (undo-tree-id1881 . -3) (undo-tree-id1882 . -3) (undo-tree-id1883 . -3) (undo-tree-id1884 . -3) (undo-tree-id1885 . -3) (undo-tree-id1886 . -3) (undo-tree-id1887 . -3) (undo-tree-id1888 . -4) (undo-tree-id1889 . -4) (undo-tree-id1890 . -4) (undo-tree-id1891 . -4) (undo-tree-id1892 . -4) (undo-tree-id1893 . -4) (undo-tree-id1894 . -4) (undo-tree-id1895 . -4) (undo-tree-id1896 . -4) (undo-tree-id1897 . -4) (undo-tree-id1898 . -4) (undo-tree-id1899 . -4) (undo-tree-id1900 . -4) (undo-tree-id1901 . -4) (undo-tree-id1902 . -4) (undo-tree-id1903 . -4) (undo-tree-id1904 . -4) (undo-tree-id1905 . -4) (undo-tree-id1906 . -4) (undo-tree-id1907 . -4) (undo-tree-id1908 . -4) (undo-tree-id1909 . -4) (undo-tree-id1910 . -4) (undo-tree-id1911 . -4) (undo-tree-id1912 . -4) (undo-tree-id1913 . -4) (undo-tree-id1914 . -5) (undo-tree-id1915 . -5) (undo-tree-id1916 . -5) (undo-tree-id1917 . -5) (undo-tree-id1918 . -5) (undo-tree-id1919 . -5) (undo-tree-id1920 . -5) (undo-tree-id1921 . -5) (undo-tree-id1922 . -5) (undo-tree-id1923 . -5) (undo-tree-id1924 . -5) (undo-tree-id1925 . -5) (undo-tree-id1926 . -5) (undo-tree-id1927 . -5) (undo-tree-id1928 . -5) (undo-tree-id1929 . -5) (undo-tree-id1930 . -5) (undo-tree-id1931 . -5) (undo-tree-id1932 . -5) (undo-tree-id1933 . -5) (undo-tree-id1934 . -5) (undo-tree-id1935 . -5) (undo-tree-id1936 . -5) (undo-tree-id1937 . -5) (undo-tree-id1938 . -5) (undo-tree-id1939 . -5) (undo-tree-id1940 . -6) (undo-tree-id1941 . -6) (undo-tree-id1942 . -6) (undo-tree-id1943 . -6) (undo-tree-id1944 . -6) (undo-tree-id1945 . -6) (undo-tree-id1946 . -6) (undo-tree-id1947 . -6) (undo-tree-id1948 . -6) (undo-tree-id1949 . -6) (undo-tree-id1950 . -6) (undo-tree-id1951 . -6) (undo-tree-id1952 . -6) (undo-tree-id1953 . -6) (undo-tree-id1954 . -6) (undo-tree-id1955 . -6) (undo-tree-id1956 . -6) (undo-tree-id1957 . -6) (undo-tree-id1958 . -6) (undo-tree-id1959 . -6) (undo-tree-id1960 . -6) (undo-tree-id1961 . -6) (undo-tree-id1962 . -6) (undo-tree-id1963 . -6) (undo-tree-id1964 . -6) (undo-tree-id1965 . -6) (undo-tree-id1966 . -7) (undo-tree-id1967 . -7) (undo-tree-id1968 . -7) (undo-tree-id1969 . -7) (undo-tree-id1970 . -7) (undo-tree-id1971 . -7) (undo-tree-id1972 . -7) (undo-tree-id1973 . -7) (undo-tree-id1974 . -7) (undo-tree-id1975 . -7) (undo-tree-id1976 . -7) (undo-tree-id1977 . -7) (undo-tree-id1978 . -7) (undo-tree-id1979 . -7) (undo-tree-id1980 . -7) (undo-tree-id1981 . -7) (undo-tree-id1982 . -7) (undo-tree-id1983 . -7) (undo-tree-id1984 . -7) (undo-tree-id1985 . -7) (undo-tree-id1986 . -7) (undo-tree-id1987 . -7) (undo-tree-id1988 . -7) (undo-tree-id1989 . -7) (undo-tree-id1990 . -7) (undo-tree-id1991 . -7) (undo-tree-id1992 . -8) (undo-tree-id1993 . -8) (undo-tree-id1994 . -8) (undo-tree-id1995 . -8) (undo-tree-id1996 . -8) (undo-tree-id1997 . -8) (undo-tree-id1998 . -8) (undo-tree-id1999 . -8) (undo-tree-id2000 . -8) (undo-tree-id2001 . -8) (undo-tree-id2002 . -8) (undo-tree-id2003 . -8) (undo-tree-id2004 . -8) (undo-tree-id2005 . -8) (undo-tree-id2006 . -8) (undo-tree-id2007 . -8) (undo-tree-id2008 . -8) (undo-tree-id2009 . -8) (undo-tree-id2010 . -8) (undo-tree-id2011 . -8) (undo-tree-id2012 . -8) (undo-tree-id2013 . -8) (undo-tree-id2014 . -8) (undo-tree-id2015 . -8) (undo-tree-id2016 . -8) (undo-tree-id2017 . -8) (undo-tree-id2018 . -9) (undo-tree-id2019 . -9) (undo-tree-id2020 . -9) (undo-tree-id2021 . -9) (undo-tree-id2022 . -9) (undo-tree-id2023 . -9) (undo-tree-id2024 . -9) (undo-tree-id2025 . -9) (undo-tree-id2026 . -9) (undo-tree-id2027 . -9) (undo-tree-id2028 . -9) (undo-tree-id2029 . -9) (undo-tree-id2030 . -9) (undo-tree-id2031 . -9) (undo-tree-id2032 . -9) (undo-tree-id2033 . -9) (undo-tree-id2034 . -9) (undo-tree-id2035 . -9) (undo-tree-id2036 . -9) (undo-tree-id2037 . -9) (undo-tree-id2038 . -9) (undo-tree-id2039 . -9) (undo-tree-id2040 . -9) (undo-tree-id2041 . -9) (undo-tree-id2042 . -9) (undo-tree-id2043 . -9) (undo-tree-id2044 . -10) (undo-tree-id2045 . -10) (undo-tree-id2046 . -10) (undo-tree-id2047 . -10) (undo-tree-id2048 . -10) (undo-tree-id2049 . -10) (undo-tree-id2050 . -10) (undo-tree-id2051 . -10) (undo-tree-id2052 . -10) (undo-tree-id2053 . -10) (undo-tree-id2054 . -10) (undo-tree-id2055 . -10) (undo-tree-id2056 . -10) (undo-tree-id2057 . -10) (undo-tree-id2058 . -10) (undo-tree-id2059 . -10) (undo-tree-id2060 . -10) (undo-tree-id2061 . -10) (undo-tree-id2062 . -10) (undo-tree-id2063 . -10) (undo-tree-id2064 . -10) (undo-tree-id2065 . -10) (undo-tree-id2066 . -10) (undo-tree-id2067 . -10) (undo-tree-id2068 . -10) (undo-tree-id2069 . -10) (undo-tree-id2070 . -11) (undo-tree-id2071 . -11) (undo-tree-id2072 . -11) (undo-tree-id2073 . -11) (undo-tree-id2074 . -11) (undo-tree-id2075 . -11) (undo-tree-id2076 . -11) (undo-tree-id2077 . -11) (undo-tree-id2078 . -11) (undo-tree-id2079 . -11) (undo-tree-id2080 . -11) (undo-tree-id2081 . -11) (undo-tree-id2082 . -11) (undo-tree-id2083 . -11) (undo-tree-id2084 . -11) (undo-tree-id2085 . -11) (undo-tree-id2086 . -11) (undo-tree-id2087 . -11) (undo-tree-id2088 . -11) (undo-tree-id2089 . -11) (undo-tree-id2090 . -11) (undo-tree-id2091 . -11) (undo-tree-id2092 . -11) (undo-tree-id2093 . -11) (undo-tree-id2094 . -11) (undo-tree-id2095 . -11) 372 (351 . 372) (350 . 351) (#("(" 0 1 (fontified t)) . -350) (undo-tree-id2096 . -1) 351 (346 . 351) (#("solve" 0 5 (fontified t face font-lock-function-name-face)) . -346) (undo-tree-id2097 . -5) 351 (#("(\\" 0 1 (fontified t) 1 2 (fontified t syntax-table (1))) . -351) (undo-tree-id2098 . -2) 353 (#("vare" 0 4 (fontified t)) . -353) (undo-tree-id2099 . -4) 357 (353 . 357) (#("e" 0 1 (fontified t)) . -353) (undo-tree-id2100 . -1) 354 (346 . 354) (#("solve" 0 5 (fontified t face font-lock-function-name-face)) . -346) (undo-tree-id2101 . -5) 351 (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -351) (undo-tree-id2102 . -1) 352 (#("eps" 0 3 (fontified t face font-lock-function-name-face)) . -352) (undo-tree-id2103 . -3) 355 (#("(" 0 1 (fontified t)) . -355) (undo-tree-id2104 . -1) 356 (337 . 356) (#("function " 0 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t)) . -337) (undo-tree-id2105 . -9) 346 (337 . 346) (336 . 337)) nil (25384 27688 695266 398000) 0 nil])
([nil nil ((463 . 467) (364 . 368) 484) nil (25384 27688 695053 452000) 0 nil])
([nil nil ((#("
solver.cache.u" 0 1 (fontified t) 1 15 (fontified t)) . 499) (undo-tree-id1623 . -14) (undo-tree-id1624 . -1) (undo-tree-id1625 . -14) (undo-tree-id1626 . -14) (undo-tree-id1627 . -14) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -8) (undo-tree-id1654 . -8) (undo-tree-id1655 . -8) (undo-tree-id1656 . -8) (undo-tree-id1657 . -8) (undo-tree-id1658 . -8) (undo-tree-id1659 . -8) (undo-tree-id1660 . -8) (undo-tree-id1661 . -8) (undo-tree-id1662 . -8) (undo-tree-id1663 . -8) (undo-tree-id1664 . -8) (undo-tree-id1665 . -8) (undo-tree-id1666 . -8) (undo-tree-id1667 . -8) (undo-tree-id1668 . -8) (undo-tree-id1669 . -8) (undo-tree-id1670 . -8) (undo-tree-id1671 . -8) (undo-tree-id1672 . -8) (undo-tree-id1673 . -8) (undo-tree-id1674 . -8) (undo-tree-id1675 . -8) (undo-tree-id1676 . -8) (undo-tree-id1677 . -8) (undo-tree-id1678 . -8) (undo-tree-id1679 . -8) (undo-tree-id1680 . -8) (undo-tree-id1681 . -8) (undo-tree-id1682 . -8) (undo-tree-id1683 . -8) (undo-tree-id1684 . -8) (undo-tree-id1685 . -8) (undo-tree-id1686 . -8) (undo-tree-id1687 . -8) (undo-tree-id1688 . -8) (undo-tree-id1689 . -8) (undo-tree-id1690 . -8) (undo-tree-id1691 . -8) (undo-tree-id1692 . -8) (undo-tree-id1693 . -8) (undo-tree-id1694 . -8) (undo-tree-id1695 . -8) (undo-tree-id1696 . -8) (undo-tree-id1697 . -8) (undo-tree-id1698 . -8) (undo-tree-id1699 . -8) (undo-tree-id1700 . -8) (undo-tree-id1701 . -8) (undo-tree-id1702 . -8) (undo-tree-id1703 . -8) (undo-tree-id1704 . -8) (undo-tree-id1705 . -8) (undo-tree-id1706 . -8) (undo-tree-id1707 . -8) (undo-tree-id1708 . -8) (undo-tree-id1709 . -8) (undo-tree-id1710 . -8) (undo-tree-id1711 . -8) (undo-tree-id1712 . -8) (undo-tree-id1713 . -8) (undo-tree-id1714 . -8) (undo-tree-id1715 . -8) (undo-tree-id1716 . -8) (undo-tree-id1717 . -8) (undo-tree-id1718 . -8) (undo-tree-id1719 . -8) (undo-tree-id1720 . -8) (undo-tree-id1721 . -8) (undo-tree-id1722 . -8) (undo-tree-id1723 . -8) (undo-tree-id1724 . -8) (undo-tree-id1725 . -8) (undo-tree-id1726 . -8) (undo-tree-id1727 . -8) (undo-tree-id1728 . -8) (undo-tree-id1729 . -8) (undo-tree-id1730 . -8) (undo-tree-id1731 . -8) (undo-tree-id1732 . -8) (undo-tree-id1733 . -8) (undo-tree-id1734 . -8) (undo-tree-id1735 . -8) (undo-tree-id1736 . -8) (undo-tree-id1737 . -8) (undo-tree-id1738 . -8) (undo-tree-id1739 . -8) (undo-tree-id1740 . -8) (undo-tree-id1741 . -8) (undo-tree-id1742 . -8) (undo-tree-id1743 . -8) (undo-tree-id1744 . -8) (undo-tree-id1745 . -8) (undo-tree-id1746 . -8) (undo-tree-id1747 . -8) (undo-tree-id1748 . -8) (undo-tree-id1749 . -8) (undo-tree-id1750 . -8) (undo-tree-id1751 . -8) (undo-tree-id1752 . -8) (undo-tree-id1753 . -14) (undo-tree-id1754 . -14) (undo-tree-id1755 . -14) (undo-tree-id1756 . -14) (undo-tree-id1757 . -14) (undo-tree-id1758 . -14) (undo-tree-id1759 . -14) (undo-tree-id1760 . -14) (undo-tree-id1761 . -14) (undo-tree-id1762 . -14) (undo-tree-id1763 . -14) (undo-tree-id1764 . -14) (undo-tree-id1765 . -14) (undo-tree-id1766 . -14) (undo-tree-id1767 . -14) (undo-tree-id1768 . -14) (undo-tree-id1769 . -14) (undo-tree-id1770 . -14) (undo-tree-id1771 . -14) (undo-tree-id1772 . -14) (undo-tree-id1773 . -14) (undo-tree-id1774 . -14) (undo-tree-id1775 . -14) (undo-tree-id1776 . -14) (undo-tree-id1777 . -14) (undo-tree-id1778 . -1) (undo-tree-id1779 . -15) (undo-tree-id1780 . -1) (undo-tree-id1781 . -14) (undo-tree-id1782 . -14) (undo-tree-id1783 . -14) (undo-tree-id1784 . -14) (undo-tree-id1785 . -14) (undo-tree-id1786 . -14) (undo-tree-id1787 . -14) (undo-tree-id1788 . -14) (undo-tree-id1789 . -14) (undo-tree-id1790 . -14) (undo-tree-id1791 . -14) (undo-tree-id1792 . -14) (undo-tree-id1793 . -14) (undo-tree-id1794 . -14) (undo-tree-id1795 . -14) (undo-tree-id1796 . -14) (undo-tree-id1797 . -14) (undo-tree-id1798 . -14) (undo-tree-id1799 . -14) (undo-tree-id1800 . -14) (undo-tree-id1801 . -14) (undo-tree-id1802 . -14) (undo-tree-id1803 . -14) (undo-tree-id1804 . -14) (undo-tree-id1805 . -14) (undo-tree-id1806 . -14) (undo-tree-id1807 . -14) (undo-tree-id1808 . -14) 513) nil (25384 27688 695043 116000) 0 nil])
([nil nil ((524 . 525) (503 . 524) (498 . 503)) nil (25384 27688 694889 46000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 524) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1)) nil (25384 27688 694885 275000) 0 nil])
([nil nil ((#("return " 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t)) . 503) (undo-tree-id1493 . -5) (undo-tree-id1494 . -5) (undo-tree-id1495 . -6) (undo-tree-id1496 . -6) (undo-tree-id1497 . -6) (undo-tree-id1498 . -6) (undo-tree-id1499 . -6) (undo-tree-id1500 . -6) (undo-tree-id1501 . -6) (undo-tree-id1502 . -6) (undo-tree-id1503 . -6) (undo-tree-id1504 . -6) (undo-tree-id1505 . -6) (undo-tree-id1506 . -6) (undo-tree-id1507 . -6) (undo-tree-id1508 . -6) (undo-tree-id1509 . -6) (undo-tree-id1510 . -6) (undo-tree-id1511 . -6) (undo-tree-id1512 . -6) (undo-tree-id1513 . -6) (undo-tree-id1514 . -6) (undo-tree-id1515 . -6) (undo-tree-id1516 . -6) (undo-tree-id1517 . -6) (undo-tree-id1518 . -6) (undo-tree-id1519 . -6) (undo-tree-id1520 . -6) (undo-tree-id1521 . -7) (undo-tree-id1522 . -7) (undo-tree-id1523 . -7) (undo-tree-id1524 . -7) (undo-tree-id1525 . -7) (undo-tree-id1526 . -7) (undo-tree-id1527 . -7) (undo-tree-id1528 . -7) (undo-tree-id1529 . -7) (undo-tree-id1530 . -7) (undo-tree-id1531 . -7) (undo-tree-id1532 . -7) (undo-tree-id1533 . -7) (undo-tree-id1534 . -7) (undo-tree-id1535 . -7) (undo-tree-id1536 . -7) (undo-tree-id1537 . -7) (undo-tree-id1538 . -7) (undo-tree-id1539 . -7) (undo-tree-id1540 . -7) (undo-tree-id1541 . -7) (undo-tree-id1542 . -7) (undo-tree-id1543 . -7) (undo-tree-id1544 . -7) (undo-tree-id1545 . -7) (undo-tree-id1546 . -7) (undo-tree-id1547 . -5) (undo-tree-id1548 . -5) (undo-tree-id1549 . -5) (undo-tree-id1550 . -5) (undo-tree-id1551 . -5) (undo-tree-id1552 . -5) (undo-tree-id1553 . -5) (undo-tree-id1554 . -5) (undo-tree-id1555 . -5) (undo-tree-id1556 . -5) (undo-tree-id1557 . -5) (undo-tree-id1558 . -5) (undo-tree-id1559 . -5) (undo-tree-id1560 . -5) (undo-tree-id1561 . -5) (undo-tree-id1562 . -5) (undo-tree-id1563 . -5) (undo-tree-id1564 . -5) (undo-tree-id1565 . -5) (undo-tree-id1566 . -5) (undo-tree-id1567 . -5) (undo-tree-id1568 . -5) (undo-tree-id1569 . -5) (undo-tree-id1570 . -5) (undo-tree-id1571 . -5) (undo-tree-id1572 . -5) (undo-tree-id1573 . -5) (undo-tree-id1574 . -5) (undo-tree-id1575 . -5) (undo-tree-id1576 . -5) (undo-tree-id1577 . -5) (undo-tree-id1578 . -5) (undo-tree-id1579 . -5) (undo-tree-id1580 . -5) (undo-tree-id1581 . -5) (undo-tree-id1582 . -5) (undo-tree-id1583 . -5) (undo-tree-id1584 . -5) (undo-tree-id1585 . -5) (undo-tree-id1586 . -5) (undo-tree-id1587 . -5) (undo-tree-id1588 . -5) (undo-tree-id1589 . -5) (undo-tree-id1590 . -5) (undo-tree-id1591 . -5) (undo-tree-id1592 . -5) (undo-tree-id1593 . -5) (undo-tree-id1594 . -5) (undo-tree-id1595 . -5) (undo-tree-id1596 . -5) (undo-tree-id1597 . -5) 508) nil (25384 27688 694860 900000) 0 nil])
([nil nil ((522 . 525) (517 . 522)) nil (25384 27688 694766 265000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -518) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) (undo-tree-id1472 . -4) (undo-tree-id1473 . -4) (undo-tree-id1474 . -4) (undo-tree-id1475 . -4) (undo-tree-id1476 . -4) (undo-tree-id1477 . -4) (undo-tree-id1478 . -4) (undo-tree-id1479 . -4) (undo-tree-id1480 . -4) (undo-tree-id1481 . -4) (undo-tree-id1482 . -4) (undo-tree-id1483 . -4) (undo-tree-id1484 . -4) (undo-tree-id1485 . -4) (undo-tree-id1486 . -4) (undo-tree-id1487 . -4) (undo-tree-id1488 . -4) (undo-tree-id1489 . -4) (undo-tree-id1490 . -4) (undo-tree-id1491 . -4) (undo-tree-id1492 . -4) 524) nil (25384 27688 694762 74000) 0 nil])
([nil nil ((522 . 523)) nil (25384 27688 694726 805000) 0 nil])
([nil nil ((539 . 540) (538 . 539) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 538) (undo-tree-id2274 . -11) 549 (538 . 549) (#("v" 0 1 (fontified t)) . -538) (undo-tree-id2275 . -1) 539 (523 . 539) (t 25384 27688 702713 505000)) nil (25384 27759 976593 840000) 0 nil])
([nil nil ((340 . 343) (#("1" 0 1 (fontified t)) . -340) (undo-tree-id2252 . -1) (#("0" 0 1 (fontified t)) . -341) (undo-tree-id2253 . -1) 342 (340 . 342) (#("5" 0 1 (fontified t)) . -340) (undo-tree-id2254 . -1) (#("0" 0 1 (fontified t)) . -341) (undo-tree-id2255 . -1) 342 (340 . 342) (#("2" 0 1 (fontified t)) . -340) (undo-tree-id2256 . -1) (#("5" 0 1 (fontified t)) . -341) (undo-tree-id2257 . -1) (#("0" 0 1 (fontified t)) . -342) (undo-tree-id2258 . -1) 343 (331 . 343) (#("e" 0 1 (fontified t)) . -331) (undo-tree-id2259 . -1) (#("l" 0 1 (fontified t)) . -332) (undo-tree-id2260 . -1) 333 (329 . 333) (#(")" 0 1 (fontified t)) . -329) (undo-tree-id2261 . -1) (undo-tree-id2262 . 1) (undo-tree-id2263 . -1) 330 (325 . 330) (#("1" 0 1 (fontified t)) . -325) (undo-tree-id2264 . -1) 326 (319 . 326) (#("[" 0 1 (fontified t)) . -319) (undo-tree-id2265 . -1) 320 (312 . 320) (#(" " 0 1 (fontified t)) . -312) (undo-tree-id2266 . -1) (#("=" 0 1 (fontified t)) . -313) (undo-tree-id2267 . -1) (#(" " 0 1 (fontified t)) . -314) (undo-tree-id2268 . -1) (#("1" 0 1 (fontified t)) . -315) (undo-tree-id2269 . -1) (#("0" 0 1 (fontified t)) . -316) (undo-tree-id2270 . -1) 317 (315 . 317) (#("1" 0 1 (fontified t)) . -315) (undo-tree-id2271 . -1) (#("." 0 1 (fontified t)) . -316) (undo-tree-id2272 . -1) (#("0" 0 1 (fontified t)) . -317) (undo-tree-id2273 . -1) 318) nil (25384 27759 976583 224000) 0 nil])
([nil nil ((321 . 323) (319 . 321)) nil (25384 27759 976557 34000) 0 nil])
([nil nil ((321 . 322)) nil (25384 27759 976554 589000) 0 nil])
([nil nil ((330 . 331) (#("3" 0 1 (fontified t)) . 330)) nil (25384 27759 976551 726000) 0 nil])
([nil nil ((568 . 569) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 568) (undo-tree-id2251 . -11) 579 (568 . 579) (#("ε" 0 1 (fontified t)) . 568)) nil (25384 27759 976548 862000) 0 nil])
([nil nil ((553 . 554)) nil (25384 27759 976545 91000) 0 nil])
([nil nil ((582 . 586) (#("a" 0 1 (fontified t)) . -582) (undo-tree-id2248 . -1) 583 (582 . 583) (581 . 582) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 581) (undo-tree-id2249 . -11) 592 (591 . 592) (577 . 591) (576 . 577) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 576) (undo-tree-id2250 . -11) 587 (571 . 587)) nil (25384 27759 976542 227000) 0 nil])
([nil nil ((586 . 587)) nil (25384 27759 976535 592000) 0 nil])
([nil nil ((553 . 561)) nil (25384 27759 976533 707000) 0 nil])
([nil nil ((561 . 565) (#("[" 0 1 (fontified t)) . 561) (undo-tree-id2245 . 1) (undo-tree-id2246 . 1) (undo-tree-id2247 . -1)) nil (25384 27759 976530 843000) 0 nil])
([nil nil ((568 . 570) (#(" " 0 1 (fontified t)) . -568) (undo-tree-id2244 . -1) 569 (565 . 569)) nil (25384 27759 976525 46000) 0 nil])
([nil nil ((585 . 586) (#("ε" 0 1 (fontified t)) . 585)) nil (25384 27759 976520 716000) 0 nil])
([nil nil ((#("for ε in " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t)) . 588) (undo-tree-id2240 . -8) (undo-tree-id2241 . -8) (undo-tree-id2242 . -8) (undo-tree-id2243 . -8) 596) nil (25384 27759 976517 853000) 0 nil])
([nil nil ((587 . 589) (#(" " 0 1 (fontified t)) . -587) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) 588) nil (25384 27759 976511 707000) 0 nil])
([nil nil ((594 . 595) (#("]" 0 1 (fontified t)) . -594) (undo-tree-id2234 . -1) 595) nil (25384 27759 976504 94000) 0 nil])
([nil nil ((595 . 597)) nil (25384 27759 976487 821000) 0 nil])
([nil nil ((597 . 602) (t 25384 27759 988988 992000)) nil (25384 27991 506254 463000) 0 nil])
([nil nil ((602 . 605)) nil (25384 27991 506252 158000) 0 nil])
([nil nil ((603 . 604) (#("1" 0 1 (fontified t)) . 603)) nil (25384 27991 506249 783000) 0 nil])
([nil nil ((#("
uvals[2]" 0 1 (fontified t) 1 9 (fontified t)) . 596) (undo-tree-id2304 . -8) (undo-tree-id2305 . -1) (undo-tree-id2306 . -8) (undo-tree-id2307 . -8) (undo-tree-id2308 . -9) (undo-tree-id2309 . -8) (undo-tree-id2310 . 1) (undo-tree-id2311 . -9) (undo-tree-id2312 . 3) (undo-tree-id2313 . -7) (undo-tree-id2314 . -8) (undo-tree-id2315 . -8) 604) nil (25384 27991 506246 431000) 0 nil])
([nil nil ((612 . 613) (597 . 612) (596 . 597)) nil (25384 27991 506234 837000) 0 nil])
([nil nil ((597 . 605)) nil (25384 27991 506232 532000) 0 nil])
([nil nil ((621 . 622)) nil (25384 27991 506230 577000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -621) (undo-tree-id2302 . -1) (#(" " 0 1 (fontified t)) . -622) (undo-tree-id2303 . -1) 623 (621 . 623)) nil (25384 27991 506227 713000) 0 nil])
([nil nil ((606 . 612) (605 . 606) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 605) (undo-tree-id2301 . -11) 616 (605 . 616)) nil (25384 27991 506223 453000) 0 nil])
([nil nil ((641 . 656) (640 . 641) (#("\\varepsilon" 0 11 (fontified t face font-lock-string-face)) . 640) (undo-tree-id2296 . -11) 651 (641 . 651) (#("varepislon" 0 10 (fontified t face font-lock-string-face)) . -641) (undo-tree-id2297 . -10) 651 (#("\"" 0 1 (fontified t face font-lock-string-face)) . -651) (undo-tree-id2298 . -1) (#("," 0 1 (fontified t)) . -652) (undo-tree-id2299 . -1) (#(" " 0 1 (fontified t)) . -653) (undo-tree-id2300 . -1) 654 (651 . 654) (649 . 651) (628 . 649)) nil (25384 27991 506217 796000) 0 nil])
([nil nil ((673 . 686) (#("y" 0 1 (fontified t)) . -673) (undo-tree-id2292 . -1) 674 (656 . 674) (#(";" 0 1 (fontified t)) . -656) (undo-tree-id2293 . -1) (#(" " 0 1 (fontified t)) . -657) (undo-tree-id2294 . -1) 658 (#("ysca" 0 4 (fontified t)) . -658) (undo-tree-id2295 . -4) 662 (656 . 662)) nil (25384 27991 506206 272000) 0 nil])
([nil nil ((687 . 689)) nil (25384 27991 506199 567000) 0 nil])
([nil nil ((689 . 698) (687 . 689)) nil (25384 27991 506196 774000) 0 nil])
([nil nil ((#("uvals" 0 5 (fontified t)) . -708) (undo-tree-id2290 . -5) 713 (706 . 713) (#("(" 0 1 (fontified t)) . -706) (undo-tree-id2291 . -1) 707 (700 . 707) (699 . 700)) nil (25384 27991 506193 840000) 0 nil])
([nil nil ((596 . 613) (595 . 596)) nil (25384 27991 506188 253000) 0 nil])
([nil nil ((612 . 614)) nil (25384 27991 506185 390000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -612) (undo-tree-id2288 . -1) (#("i" 0 1 (fontified t)) . -613) (undo-tree-id2289 . -1) 614) nil (25384 27991 506183 15000) 0 nil])
([nil nil ((596 . 605)) nil (25384 27991 506178 615000) 0 nil])
([nil nil ((599 . 602) (#("n" 0 1 (fontified t)) . -599) (undo-tree-id2286 . -1) (#("a" 0 1 (fontified t)) . -600) (undo-tree-id2287 . -1) 601) nil (25384 27991 506175 263000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 602)) nil (25384 27991 506170 932000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 613)) nil (25384 27991 506168 139000) 0 nil])
([nil nil ((739 . 741) (#("n" 0 1 (fontified t)) . -739) (undo-tree-id2283 . -1) 740 (739 . 740) (#("b" 0 1 (fontified t)) . -739) (undo-tree-id2284 . -1) (#("s" 0 1 (fontified t)) . -740) (undo-tree-id2285 . -1) 741 (734 . 741)) nil (25384 27991 506165 275000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -741) (undo-tree-id2279 . -1) (#(" " 0 1 (fontified t)) . -742) (undo-tree-id2280 . -1) 743 (#("log" 0 3 (fontified t)) . -743) (undo-tree-id2281 . -3) 746 (#(".(" 0 2 (fontified t)) . -746) (undo-tree-id2282 . -2) 748 (741 . 748)) nil (25384 27991 506157 663000) 0 nil])
([nil nil ((741 . 742)) nil (25384 27991 506149 631000) 0 nil])
([nil nil ((741 . 742) (735 . 741) (734 . 735) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 734) (undo-tree-id2276 . -11) (undo-tree-id2277 . -4) 745 (735 . 745) (#("varepsil" 0 8 (fontified t)) . -735) (undo-tree-id2278 . -8) 743 (729 . 743)) nil (25384 27991 506143 275000) 0 nil])
([nil nil ((729 . 737) (t 25384 27991 517718 491000)) nil (25384 28040 252539 585000) 0 nil])
([nil nil ((748 . 755)) nil (25384 28040 276788 619000) 0 nil])
([nil nil ((333 . 335) (#("1" 0 1 (fontified t)) . 333)) nil (25384 28286 690731 203000) 0 nil] [nil nil ((726 . 732)) ((#("plot!(" 0 6 (fontified t)) . 726)) (25384 28040 252634 220000) 0 nil])
([nil nil ((492 . 507)) nil (25384 28286 690728 828000) 0 nil])
([nil nil ((776 . 777)) ((#(")" 0 1 (fontified t)) . 776)) (25384 28040 252527 782000) 0 nil])
([nil nil ((334 . 335) (#("1" 0 1 (fontified t)) . 334)) nil (25384 28286 690726 384000) 0 nil])
nil
([nil nil ((346 . 348) (#("2" 0 1 (fontified t)) . -346) (undo-tree-id2392 . -1) (#("5" 0 1 (fontified t)) . -347) (undo-tree-id2393 . -1) 348) nil (25384 28286 690723 939000) 0 nil])
([nil nil ((498 . 499) (#("5" 0 1 (fontified t)) . -498) (undo-tree-id2389 . -1) 499 (495 . 499) (#("0" 0 1 (fontified t)) . -495) (undo-tree-id2390 . -1) 496 (492 . 496) (491 . 492) (#("\\delta" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 491) (undo-tree-id2391 . -6) 497 (491 . 497)) nil (25384 28286 690717 723000) 0 nil])
([nil nil ((330 . 331) (#("2" 0 1 (fontified t)) . 330)) nil (25384 28286 690709 622000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -399) (undo-tree-id2388 . -1) 400 (399 . 400) (394 . 399)) nil (25384 28286 690706 339000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 395) (undo-tree-id2377 . -3) (undo-tree-id2378 . 1) (undo-tree-id2379 . -3) (undo-tree-id2380 . -3) (undo-tree-id2381 . -5) (undo-tree-id2382 . -5) (undo-tree-id2383 . -5) (undo-tree-id2384 . -3) (undo-tree-id2385 . -3) (undo-tree-id2386 . -3) (undo-tree-id2387 . -3) 398) nil (25384 28286 690700 682000) 0 nil])
([nil nil ((330 . 331) (#("1" 0 1 (fontified t)) . 330)) nil (25384 28286 690687 203000) 0 nil])
([nil nil ((405 . 406) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 405) (undo-tree-id2376 . -11) 416 (399 . 416) (394 . 399)) nil (25384 28286 690683 850000) 0 nil])
([nil nil ((#("warn " 0 4 (fontified t face julia-macro-face) 4 5 (fontified t)) . 400) (undo-tree-id2375 . -1) 401) nil (25384 28286 690680 149000) 0 nil])
([nil nil ((400 . 405) (#("iunfo" 0 5 (fontified t face julia-macro-face)) . -400) (undo-tree-id2371 . -5) 405 (#(" " 0 1 (fontified t)) . -405) (undo-tree-id2372 . -1) 406 (400 . 406) (#("n" 0 1 (fontified t face julia-macro-face)) . -400) (undo-tree-id2373 . -1) (#("f" 0 1 (fontified t face julia-macro-face)) . -401) (undo-tree-id2374 . -1) 402 (400 . 402)) nil (25384 28286 690675 330000) 0 nil])
([nil nil ((526 . 527)) nil (25384 28286 690667 298000) 0 nil])
([nil nil ((#("25a0" 0 4 (fontified t)) . 524) (undo-tree-id2369 . 1) (undo-tree-id2370 . -2) 526) nil (25384 28286 690664 923000) 0 nil])
([nil nil ((525 . 529) (#("0" 0 1 (fontified t)) . -525) (undo-tree-id2366 . -1) 526 (524 . 526) (#(" " 0 1 (fontified t)) . -524) (undo-tree-id2367 . -1) (#("5" 0 1 (fontified t)) . -525) (undo-tree-id2368 . -1) 526 (524 . 526)) nil (25384 28286 690659 57000) 0 nil])
([nil nil ((510 . 511) (#("9" 0 1 (fontified t)) . 510) (undo-tree-id2365 . 1)) nil (25384 28286 690651 933000) 0 nil])
([nil nil ((#("δ" 0 1 (fontified t)) . -503) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (#(" " 0 1 (fontified t)) . -504) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (#("=" 0 1 (fontified t)) . -505) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (#(" " 0 1 (fontified t)) . -506) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) 507 (#("1e" 0 2 (fontified t)) . -507) (undo-tree-id2349 . -2) (undo-tree-id2350 . -2) (undo-tree-id2351 . -2) (undo-tree-id2352 . -2) (undo-tree-id2353 . -2) (undo-tree-id2354 . -2) (undo-tree-id2355 . -2) (undo-tree-id2356 . -2) 509 (#("-" 0 1 (fontified t)) . -509) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) 510 (#("5" 0 1 (fontified t)) . -510) (undo-tree-id2364 . -1) 511 (510 . 511) (#("2" 0 1 (fontified t)) . 510)) nil (25384 28286 690620 15000) 0 nil])
([nil nil ((330 . 332) (#("0" 0 1 (fontified t)) . 330)) nil (25384 28286 690566 377000) 0 nil])
([nil nil ((335 . 336) (#("2" 0 1 (fontified t)) . 335)) nil (25384 28286 690563 933000) 0 nil])
([nil nil ((743 . 745)) nil (25384 28286 690560 999000) 0 nil])
([nil nil ((728 . 730)) nil (25384 28286 690558 625000) 0 nil])
([nil nil ((185 . 188) (#("100" 0 3 (fontified t)) . -185) (undo-tree-id2316 . -3) 188) nil (25384 28287 890084 802000) 0 nil])
([nil nil ((806 . 807)) nil (25384 28290 777115 495000) 0 nil] [nil nil ((785 . 786) (#(":" 0 1 (fontified t)) . 785)) ((785 . 786) (#("1" 0 1 (fontified t)) . 785)) (25384 28287 177846 304000) 0 nil])
([nil nil ((662 . 667) (t 25384 28290 779409 641000)) nil (25384 28371 822103 748000) 0 nil])
([nil nil ((787 . 788)) ((#("l" 0 1 (fontified t)) . 787)) (25384 28286 757884 437000) 0 nil])
([nil nil ((672 . 673)) nil (25384 28371 822101 793000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 787)) ((787 . 788)) (25384 28286 690876 193000) 0 nil])
([nil nil ((675 . 680)) nil (25384 28371 822099 907000) 0 nil])
([nil nil ((788 . 789) (#("1" 0 1 (fontified t)) . 788)) ((788 . 789) (#(":" 0 1 (fontified t)) . 788)) (25384 28286 690527 615000) 0 nil])
([nil nil ((696 . 697)) nil (25384 28371 822097 951000) 0 nil])
nil
([nil nil ((709 . 713)) nil (25384 28371 822096 66000) 0 nil])
([nil nil ((727 . 731)) nil (25384 28371 822095 158000) 0 nil])
([nil nil ((733 . 734) (#("," 0 1 (fontified t)) . -733) (undo-tree-id2398 . -1) (#(" " 0 1 (fontified t)) . -734) (undo-tree-id2399 . -1) 735 (#("yscale " 0 7 (fontified t)) . -735) (undo-tree-id2400 . -7) 742 (#("= " 0 2 (fontified t)) . -742) (undo-tree-id2401 . -2) 744 (#(":" 0 1 (fontified t)) . -744) (undo-tree-id2402 . -1) 745 (#("log10" 0 5 (fontified t face julia-quoted-symbol-face)) . -745) (undo-tree-id2403 . -5) 750 (#(", " 0 2 (fontified t)) . -750) (undo-tree-id2404 . -2) 752 (#("xscale " 0 7 (fontified t)) . -752) (undo-tree-id2405 . -7) 759 (#("= " 0 2 (fontified t)) . -759) (undo-tree-id2406 . -2) 761 (#(":" 0 1 (fontified t)) . -761) (undo-tree-id2407 . -1) 762 (#("log10" 0 5 (fontified t face julia-quoted-symbol-face)) . -762) (undo-tree-id2408 . -5) 767 (#(")" 0 1 (fontified t)) . -767) (undo-tree-id2409 . -1) (undo-tree-id2410 . 1) (undo-tree-id2411 . -1) 768) nil (25384 28371 822089 850000) 0 nil])
([nil nil ((735 . 737)) nil (25384 28371 822071 272000) 0 nil])
([nil nil ((745 . 746) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 745) (undo-tree-id2395 . -11) 756 (741 . 756) (#("/" 0 1 (fontified t)) . -741) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) 742 (736 . 742)) nil (25384 28371 822068 897000) 0 nil])
([nil nil ((746 . 750) (#("m" 0 1 (fontified t)) . -746) (undo-tree-id2394 . -1) 747 (746 . 747)) nil (25384 28371 822061 774000) 0 nil])
([nil nil ((736 . 737)) nil (25384 28371 905971 189000) 0 nil])
([nil nil ((737 . 743) (736 . 737) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 736) (undo-tree-id2575 . -11) 747 (740 . 747) (736 . 740) (#("u" 0 1 (fontified t)) . -736) (undo-tree-id2576 . -1) 737 (736 . 737)) nil (25384 28471 409172 246000) 0 nil] [nil nil ((736 . 744)) ((#("scatter(" 0 8 (fontified t)) . 736)) (25384 28371 822225 621000) 0 nil])
([nil nil ((736 . 744)) nil (25384 28471 409167 427000) 0 nil])
([nil nil ((759 . 760)) ((#(")" 0 1 (fontified t)) . 759)) (25384 28371 822036 421000) 0 nil])
([nil nil ((766 . 767)) nil (25384 28471 409165 472000) 0 nil])
nil
([nil nil ((330 . 331) (#("-" 0 1 (fontified t)) . -330) (undo-tree-id2573 . -1) (#("1" 0 1 (fontified t)) . -331) (undo-tree-id2574 . -1) 332) nil (25384 28471 409162 608000) 0 nil])
([nil nil ((517 . 519) (#("_" 0 1 (fontified t)) . -517) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) 518 (#("000" 0 3 (fontified t)) . -518) (undo-tree-id2571 . -2) (undo-tree-id2572 . -3) 521) nil (25384 28471 409157 859000) 0 nil])
([nil nil ((765 . 780) (#("y" 0 1 (fontified t)) . -765) (undo-tree-id2568 . -1) 766 (763 . 766)) nil (25384 28471 409463 485000) 0 nil])
([nil nil ((#(" ./ εvals" 0 4 (fontified t) 4 9 (fontified t)) . 754) (undo-tree-id2643 . -8) (undo-tree-id2644 . -8) (undo-tree-id2645 . -8) (undo-tree-id2646 . -8) 762) nil (25384 28871 200256 573000) 0 nil] [nil nil ((#("εvals" 0 5 (fontified t)) . -741) (undo-tree-id2412 . -5) (undo-tree-id2413 . -5) (undo-tree-id2414 . -5) (undo-tree-id2415 . -5) (undo-tree-id2416 . -5) (undo-tree-id2417 . -5) (undo-tree-id2418 . -5) (undo-tree-id2419 . -5) (undo-tree-id2420 . -5) (undo-tree-id2421 . -5) (undo-tree-id2422 . -5) (undo-tree-id2423 . -5) (undo-tree-id2424 . -5) (undo-tree-id2425 . -5) (undo-tree-id2426 . -5) (undo-tree-id2427 . -5) (undo-tree-id2428 . -5) (undo-tree-id2429 . -5) (undo-tree-id2430 . -5) (undo-tree-id2431 . -5) (undo-tree-id2432 . -5) (undo-tree-id2433 . -5) (undo-tree-id2434 . -5) (undo-tree-id2435 . -5) (undo-tree-id2436 . -5) (undo-tree-id2437 . -5) (undo-tree-id2438 . -5) (undo-tree-id2439 . -5) (undo-tree-id2440 . -5) (undo-tree-id2441 . -5) (undo-tree-id2442 . -5) (undo-tree-id2443 . -5) (undo-tree-id2444 . -5) (undo-tree-id2445 . -5) (undo-tree-id2446 . -5) (undo-tree-id2447 . -5) (undo-tree-id2448 . -5) (undo-tree-id2449 . -5) (undo-tree-id2450 . -5) (undo-tree-id2451 . -5) (undo-tree-id2452 . -5) (undo-tree-id2453 . -5) (undo-tree-id2454 . -5) (undo-tree-id2455 . -5) (undo-tree-id2456 . -5) (undo-tree-id2457 . -5) (undo-tree-id2458 . -5) (undo-tree-id2459 . -5) (undo-tree-id2460 . -5) (undo-tree-id2461 . -5) (undo-tree-id2462 . -5) (undo-tree-id2463 . -5) (undo-tree-id2464 . -5) (undo-tree-id2465 . -5) (undo-tree-id2466 . -5) (undo-tree-id2467 . -5) (undo-tree-id2468 . -5) (undo-tree-id2469 . -5) (undo-tree-id2470 . -5) (undo-tree-id2471 . -5) (undo-tree-id2472 . -5) (undo-tree-id2473 . -5) (undo-tree-id2474 . -5) (undo-tree-id2475 . -5) (undo-tree-id2476 . -5) (undo-tree-id2477 . -5) (undo-tree-id2478 . -5) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) (undo-tree-id2483 . -5) (undo-tree-id2484 . -5) (undo-tree-id2485 . -5) (undo-tree-id2486 . -5) (undo-tree-id2487 . -5) (undo-tree-id2488 . -5) (undo-tree-id2489 . -5) (undo-tree-id2490 . -5) (undo-tree-id2491 . -5) (undo-tree-id2492 . -5) (undo-tree-id2493 . -5) (undo-tree-id2494 . -5) (undo-tree-id2495 . -5) (undo-tree-id2496 . -5) (undo-tree-id2497 . -5) (undo-tree-id2498 . -5) (undo-tree-id2499 . -5) (undo-tree-id2500 . -5) (undo-tree-id2501 . -5) (undo-tree-id2502 . -5) 746 (#(", " 0 2 (fontified t)) . -746) (undo-tree-id2503 . -2) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -2) (undo-tree-id2518 . -2) (undo-tree-id2519 . -2) (undo-tree-id2520 . -2) (undo-tree-id2521 . -2) (undo-tree-id2522 . -2) (undo-tree-id2523 . -2) (undo-tree-id2524 . -2) (undo-tree-id2525 . -2) (undo-tree-id2526 . -2) (undo-tree-id2527 . -2) (undo-tree-id2528 . -2) (undo-tree-id2529 . -2) (undo-tree-id2530 . -2) (undo-tree-id2531 . -2) (undo-tree-id2532 . -2) (undo-tree-id2533 . -2) (undo-tree-id2534 . -2) (undo-tree-id2535 . -2) (undo-tree-id2536 . -2) (undo-tree-id2537 . -2) (undo-tree-id2538 . -2) (undo-tree-id2539 . -2) (undo-tree-id2540 . -2) (undo-tree-id2541 . -2) (undo-tree-id2542 . -2) (undo-tree-id2543 . -2) (undo-tree-id2544 . -2) (undo-tree-id2545 . -2) (undo-tree-id2546 . -2) (undo-tree-id2547 . -2) (undo-tree-id2548 . -2) (undo-tree-id2549 . -2) (undo-tree-id2550 . -2) (undo-tree-id2551 . -2) (undo-tree-id2552 . -2) (undo-tree-id2553 . -2) (undo-tree-id2554 . -2) (undo-tree-id2555 . -2) (undo-tree-id2556 . -2) (undo-tree-id2557 . -2) (undo-tree-id2558 . -2) (undo-tree-id2559 . -2) (undo-tree-id2560 . -2) (undo-tree-id2561 . -2) (undo-tree-id2562 . -2) (undo-tree-id2563 . -2) (undo-tree-id2564 . -2) (undo-tree-id2565 . -2) (undo-tree-id2566 . -2) (undo-tree-id2567 . -2) 748) ((741 . 748)) (25384 28471 409120 285000) 0 nil])
([nil nil ((754 . 755) (#(";" 0 1 (fontified t)) . -754) (undo-tree-id2633 . 1) (undo-tree-id2634 . -1) (#(" " 0 1 (fontified t)) . -755) (undo-tree-id2635 . -1) 756 (#("xscale " 0 7 (fontified t)) . -756) (undo-tree-id2636 . -7) 763 (#("= " 0 2 (fontified t)) . -763) (undo-tree-id2637 . -2) 765 (#(":" 0 1 (fontified t)) . -765) (undo-tree-id2638 . -1) 766 (#("log10" 0 5 (fontified t face julia-quoted-symbol-face)) . -766) (undo-tree-id2639 . -5) 771 (#(")" 0 1 (fontified t)) . -771) (undo-tree-id2640 . -1) (undo-tree-id2641 . 1) (undo-tree-id2642 . -1) 772) nil (25384 28871 200249 30000) 0 nil])
nil
([nil nil ((770 . 775) (#(")" 0 1 (fontified t)) . -770) (undo-tree-id2628 . -1) (undo-tree-id2629 . 1) (undo-tree-id2630 . -1) 771 (770 . 771) (769 . 770) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 769) (undo-tree-id2631 . -11) 780 (763 . 780) (762 . 763) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 762) (undo-tree-id2632 . -11) 773 (760 . 773) (756 . 760) (755 . 756)) nil (25384 28871 200235 621000) 0 nil])
([nil nil ((763 . 769) (762 . 763) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 762) (undo-tree-id2624 . -11) 773 (753 . 773) (746 . 753) (745 . 746) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 745) (undo-tree-id2625 . -11) 756 (745 . 756) (#("v" 0 1 (fontified t)) . -745) (undo-tree-id2626 . -1) 746 (740 . 746) (#("\\" 0 1 (fontified t syntax-table (1))) . -740) (undo-tree-id2627 . -1) 741 (732 . 741) (731 . 732)) nil (25384 28871 200225 563000) 0 nil])
([nil nil ((732 . 736) (#("scatter" 0 7 (fontified t)) . -732) (undo-tree-id2623 . -7) 739) nil (25384 28871 200217 182000) 0 nil])
([nil nil ((736 . 737)) nil (25384 28871 200213 271000) 0 nil])
([nil nil ((784 . 785) (#("{" 0 1 (fontified t face font-lock-string-face)) . -784) (undo-tree-id2617 . -1) 785 (778 . 785) (777 . 778) (#("\\alpha" 0 6 (fontified t face font-lock-string-face)) . 777) (undo-tree-id2618 . -6) 783 (777 . 783) (#("scale " 0 6 (fontified t face font-lock-string-face)) . -777) (undo-tree-id2619 . -6) 783 (777 . 783) (#("yslc" 0 4 (fontified t face font-lock-string-face)) . -777) (undo-tree-id2620 . -4) 781 (777 . 781) (768 . 777) (#("y" 0 1 (fontified t)) . -768) (undo-tree-id2621 . -1) (#("s" 0 1 (fontified t)) . -769) (undo-tree-id2622 . -1) 770 (766 . 770)) nil (25384 28871 200209 430000) 0 nil])
([nil nil ((nil rear-nonsticky nil 786 . 787) (#("
" 0 1 (fontified nil)) . -841) (786 . 842) 784) nil (25384 28871 200199 373000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 806)) nil (25384 28871 200196 509000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 806)) nil (25384 28871 200194 135000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 806)) nil (25384 28871 200191 760000) 0 nil])
([nil nil ((806 . 807)) nil (25384 28871 200188 897000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 806)) nil (25384 28871 200187 81000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 806) (undo-tree-id2616 . 1)) nil (25384 28871 200184 706000) 0 nil])
([nil nil ((832 . 833) (#("2" 0 1 (fontified t face font-lock-string-face)) . -832) (undo-tree-id2613 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -833) (undo-tree-id2614 . -1) (#("3" 0 1 (fontified t face font-lock-string-face)) . -834) (undo-tree-id2615 . -1) 835) nil (25384 28871 200180 516000) 0 nil])
([nil nil ((330 . 331) (#("1" 0 1 (fontified t)) . 330)) nil (25384 28871 200174 859000) 0 nil])
([nil nil ((346 . 349) (#("5" 0 1 (fontified t)) . -346) (undo-tree-id2611 . -1) (#("0" 0 1 (fontified t)) . -347) (undo-tree-id2612 . -1) 348) nil (25384 28871 200171 995000) 0 nil])
([nil nil ((330 . 331) (#("2" 0 1 (fontified t)) . 330)) nil (25384 28871 200168 84000) 0 nil])
([nil nil ((733 . 745) (#("markerstrokew" 0 13 (fontified t)) . -733) (undo-tree-id2610 . -13) 746 (731 . 746)) nil (25384 28871 200165 709000) 0 nil])
([nil nil ((938 . 941) (#("0" 0 1 (fontified t)) . -938) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) 939 (930 . 939) (929 . 930) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 929) (undo-tree-id2609 . -11) 940 (928 . 940)) nil (25384 28871 200160 52000) 0 nil])
([nil nil ((964 . 975) (963 . 964) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 963) (undo-tree-id2577 . -11) 974 (973 . 974) (969 . 973) (966 . 969) (#("p" 0 1 (fontified t)) . -966) (undo-tree-id2578 . -1) 967 (964 . 967) (#("varepislon" 0 10 (fontified t)) . -964) (undo-tree-id2579 . -10) 974 (963 . 974) (#("v" 0 1 (fontified t)) . -963) (undo-tree-id2580 . -1) (#("\\" 0 1 (fontified t syntax-table (1))) . -964) (undo-tree-id2581 . -1) 965 (962 . 965)) nil (25384 28871 200131 68000) 0 nil])
([nil nil ((nil rear-nonsticky nil 977 . 978) (#("
" 0 1 (fontified nil)) . -1048) (977 . 1049) 907) nil (25384 28871 200113 538000) 0 nil])
([nil nil ((1007 . 1008) (#(">" 0 1 (fontified t)) . 1007)) nil (25384 28871 200110 674000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 1041)) nil (25384 28871 200107 322000) 0 nil])
([nil nil ((1041 . 1042)) nil (25384 28871 200099 570000) 0 nil])
([nil nil ((978 . 979) (t 25384 28871 202891 266000)) nil (25384 28879 981916 991000) 0 nil])
([nil nil ((nil rear-nonsticky nil 850 . 851) (#("
" 0 1 (fontified nil)) . -899) (850 . 900) 802) nil (25384 28935 765099 126000) 0 nil] [nil nil ((847 . 848) (#("3" 0 1 (fontified t face font-lock-string-face)) . -847) (undo-tree-id2647 . -1) 848 (847 . 848) (#("1" 0 1 (fontified t face font-lock-string-face)) . 847) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1)) ((847 . 848) (#("3" 0 1 (fontified nil face font-lock-string-face)) . 847) (847 . 848) (#("2" 0 1 (fontified t face font-lock-string-face)) . 847)) (25384 28879 981658 927000) 0 nil])
([nil nil ((896 . 897) (#("1" 0 1 (fontified t face font-lock-string-face)) . 896)) nil (25384 28935 765096 751000) 0 nil])
nil
([nil nil ((870 . 871)) nil (25384 28935 765094 446000) 0 nil])
([nil nil ((871 . 872)) nil (25384 28935 765092 560000) 0 nil])
([nil nil ((#("plot!(log.(εvals), 2*log.(εvals); label = \"α = 2\")
" 0 5 (fontified t) 5 11 (fontified t) 11 26 (fontified t) 26 42 (fontified t) 42 43 (fontified t face font-lock-string-face) 43 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t) 50 51 (fontified t)) . 851) (undo-tree-id3011 . 30) (undo-tree-id3012 . -50) (undo-tree-id3013 . -51) (undo-tree-id3014 . -51) (undo-tree-id3015 . -51) (undo-tree-id3016 . -51) (undo-tree-id3017 . -51) (undo-tree-id3018 . -51) (undo-tree-id3019 . -51) (undo-tree-id3020 . -51) (undo-tree-id3021 . -51) (undo-tree-id3022 . -51) (undo-tree-id3023 . -50) (undo-tree-id3024 . -20)) nil (25384 28935 765090 256000) 0 nil])
([nil nil ((1064 . 1069) (1063 . 1064) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 1063) (undo-tree-id3007 . -11) 1074 (1055 . 1074) (1054 . 1055) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 1054) (undo-tree-id3008 . -11) 1065 (1064 . 1065) (#("l" 0 1 (fontified t)) . -1064) (undo-tree-id3009 . -1) (#("n" 0 1 (fontified t)) . -1065) (undo-tree-id3010 . -1) 1066 (1051 . 1066) (1050 . 1051)) nil (25384 28935 765063 646000) 0 nil])
([nil nil ((1054 . 1062)) nil (25384 28935 765056 662000) 0 nil])
([nil nil ((1068 . 1074) (1067 . 1068)) nil (25384 28935 765054 706000) 0 nil])
([nil nil ((1077 . 1079)) nil (25384 28935 765052 821000) 0 nil])
([nil nil ((#("lm(reshape(εvals, :, 1), 2/3*εvals)
" 0 11 (fontified t) 11 29 (fontified t) 29 35 (fontified t) 35 36 (fontified t)) . 1051) (undo-tree-id3003 . -36) (undo-tree-id3004 . -36) (undo-tree-id3005 . -36) (undo-tree-id3006 . -36)) nil (25384 28935 765049 957000) 0 nil])
([nil nil ((940 . 941)) nil (25384 28935 765045 557000) 0 nil])
([nil nil ((973 . 975) (#("1" 0 1 (fontified t)) . -973) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (#("0" 0 1 (fontified t)) . -974) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) 975) nil (25384 28935 765038 364000) 0 nil])
([nil nil ((938 . 940) (#("1" 0 1 (fontified t)) . -938) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (#("0" 0 1 (fontified t)) . -939) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (#("0" 0 1 (fontified t)) . -940) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) 941) nil (25384 28935 764959 792000) 0 nil])
([nil nil ((1061 . 1063) (1060 . 1061) (#("\\theta" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 1060) (undo-tree-id3287 . -6) 1066 (#("s" 0 1 (fontified t)) . -1066) (undo-tree-id3288 . -1) 1067 (1055 . 1067) (1054 . 1055) (#("\\theta" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 1054) (undo-tree-id3289 . -6) 1060 (1054 . 1060) (#("range" 0 5 (fontified t)) . -1054) (undo-tree-id3290 . -5) 1059 (#("(-" 0 2 (fontified t)) . -1059) (undo-tree-id3291 . -2) 1061 (#("1" 0 1 (fontified t)) . -1061) (undo-tree-id3292 . -1) 1062 (1060 . 1062) (#("1" 0 1 (fontified t)) . -1060) (undo-tree-id3293 . -1) 1061 (#(":" 0 1 (fontified t)) . -1061) (undo-tree-id3294 . -1) 1062 (#("10" 0 2 (fontified t)) . -1062) (undo-tree-id3295 . -2) 1064 (#("), " 0 3 (fontified t)) . -1064) (undo-tree-id3296 . -3) 1067 (1051 . 1067) (t 25384 28935 775870 258000)) nil (25384 28985 794615 974000) 0 nil])
([nil nil ((1054 . 1062)) nil (25384 29295 445328 974000) 0 nil] [nil nil ((1054 . 1061) (#("reshape" 0 7 (fontified t)) . -1054) (undo-tree-id3025 . -7) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -2) (undo-tree-id3053 . -2) (undo-tree-id3054 . -2) (undo-tree-id3055 . -2) (undo-tree-id3056 . -2) (undo-tree-id3057 . -2) (undo-tree-id3058 . -2) (undo-tree-id3059 . -2) (undo-tree-id3060 . -2) (undo-tree-id3061 . -2) (undo-tree-id3062 . -2) (undo-tree-id3063 . -2) (undo-tree-id3064 . -2) (undo-tree-id3065 . -2) (undo-tree-id3066 . -2) (undo-tree-id3067 . -2) (undo-tree-id3068 . -2) (undo-tree-id3069 . -2) (undo-tree-id3070 . -2) (undo-tree-id3071 . -2) (undo-tree-id3072 . -2) (undo-tree-id3073 . -2) (undo-tree-id3074 . -2) (undo-tree-id3075 . -2) (undo-tree-id3076 . -2) (undo-tree-id3077 . -2) (undo-tree-id3078 . -3) (undo-tree-id3079 . -3) (undo-tree-id3080 . -3) (undo-tree-id3081 . -3) (undo-tree-id3082 . -3) (undo-tree-id3083 . -3) (undo-tree-id3084 . -3) (undo-tree-id3085 . -3) (undo-tree-id3086 . -3) (undo-tree-id3087 . -3) (undo-tree-id3088 . -3) (undo-tree-id3089 . -3) (undo-tree-id3090 . -3) (undo-tree-id3091 . -3) (undo-tree-id3092 . -3) (undo-tree-id3093 . -3) (undo-tree-id3094 . -3) (undo-tree-id3095 . -3) (undo-tree-id3096 . -3) (undo-tree-id3097 . -3) (undo-tree-id3098 . -3) (undo-tree-id3099 . -3) (undo-tree-id3100 . -3) (undo-tree-id3101 . -3) (undo-tree-id3102 . -3) (undo-tree-id3103 . -3) (undo-tree-id3104 . -4) (undo-tree-id3105 . -4) (undo-tree-id3106 . -4) (undo-tree-id3107 . -4) (undo-tree-id3108 . -4) (undo-tree-id3109 . -4) (undo-tree-id3110 . -4) (undo-tree-id3111 . -4) (undo-tree-id3112 . -4) (undo-tree-id3113 . -4) (undo-tree-id3114 . -4) (undo-tree-id3115 . -4) (undo-tree-id3116 . -4) (undo-tree-id3117 . -4) (undo-tree-id3118 . -4) (undo-tree-id3119 . -4) (undo-tree-id3120 . -4) (undo-tree-id3121 . -4) (undo-tree-id3122 . -4) (undo-tree-id3123 . -4) (undo-tree-id3124 . -4) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (undo-tree-id3127 . -4) (undo-tree-id3128 . -4) (undo-tree-id3129 . -4) (undo-tree-id3130 . -5) (undo-tree-id3131 . -5) (undo-tree-id3132 . -5) (undo-tree-id3133 . -5) (undo-tree-id3134 . -5) (undo-tree-id3135 . -5) (undo-tree-id3136 . -5) (undo-tree-id3137 . -5) (undo-tree-id3138 . -5) (undo-tree-id3139 . -5) (undo-tree-id3140 . -5) (undo-tree-id3141 . -5) (undo-tree-id3142 . -5) (undo-tree-id3143 . -5) (undo-tree-id3144 . -5) (undo-tree-id3145 . -5) (undo-tree-id3146 . -5) (undo-tree-id3147 . -5) (undo-tree-id3148 . -5) (undo-tree-id3149 . -5) (undo-tree-id3150 . -5) (undo-tree-id3151 . -5) (undo-tree-id3152 . -5) (undo-tree-id3153 . -5) (undo-tree-id3154 . -5) (undo-tree-id3155 . -5) (undo-tree-id3156 . -6) (undo-tree-id3157 . -6) (undo-tree-id3158 . -6) (undo-tree-id3159 . -6) (undo-tree-id3160 . -6) (undo-tree-id3161 . -6) (undo-tree-id3162 . -6) (undo-tree-id3163 . -6) (undo-tree-id3164 . -6) (undo-tree-id3165 . -6) (undo-tree-id3166 . -6) (undo-tree-id3167 . -6) (undo-tree-id3168 . -6) (undo-tree-id3169 . -6) (undo-tree-id3170 . -6) (undo-tree-id3171 . -6) (undo-tree-id3172 . -6) (undo-tree-id3173 . -6) (undo-tree-id3174 . -6) (undo-tree-id3175 . -6) (undo-tree-id3176 . -6) (undo-tree-id3177 . -6) (undo-tree-id3178 . -6) (undo-tree-id3179 . -6) (undo-tree-id3180 . -6) (undo-tree-id3181 . -6) (undo-tree-id3182 . -7) (undo-tree-id3183 . -7) (undo-tree-id3184 . -7) (undo-tree-id3185 . -7) (undo-tree-id3186 . -7) (undo-tree-id3187 . -7) (undo-tree-id3188 . -7) (undo-tree-id3189 . -7) (undo-tree-id3190 . -7) (undo-tree-id3191 . -7) (undo-tree-id3192 . -7) (undo-tree-id3193 . -7) (undo-tree-id3194 . -7) (undo-tree-id3195 . -7) (undo-tree-id3196 . -7) (undo-tree-id3197 . -7) (undo-tree-id3198 . -7) (undo-tree-id3199 . -7) (undo-tree-id3200 . -7) (undo-tree-id3201 . -7) (undo-tree-id3202 . -7) (undo-tree-id3203 . -7) (undo-tree-id3204 . -7) (undo-tree-id3205 . -7) (undo-tree-id3206 . -7) (undo-tree-id3207 . -7) (undo-tree-id3208 . -7) (undo-tree-id3209 . -7) (undo-tree-id3210 . -7) (undo-tree-id3211 . -7) (undo-tree-id3212 . -7) (undo-tree-id3213 . -7) (undo-tree-id3214 . -7) (undo-tree-id3215 . -7) (undo-tree-id3216 . -7) (undo-tree-id3217 . -7) (undo-tree-id3218 . -7) (undo-tree-id3219 . -7) (undo-tree-id3220 . -7) (undo-tree-id3221 . -7) (undo-tree-id3222 . -7) (undo-tree-id3223 . -7) (undo-tree-id3224 . -7) (undo-tree-id3225 . -7) (undo-tree-id3226 . -7) (undo-tree-id3227 . -7) (undo-tree-id3228 . -7) (undo-tree-id3229 . -7) (undo-tree-id3230 . -7) (undo-tree-id3231 . -7) (undo-tree-id3232 . -7) (undo-tree-id3233 . -7) (undo-tree-id3234 . -7) (undo-tree-id3235 . -7) (undo-tree-id3236 . -7) (undo-tree-id3237 . -7) (undo-tree-id3238 . -7) (undo-tree-id3239 . -7) (undo-tree-id3240 . -7) (undo-tree-id3241 . -7) (undo-tree-id3242 . -7) (undo-tree-id3243 . -7) (undo-tree-id3244 . -7) (undo-tree-id3245 . -7) (undo-tree-id3246 . -7) (undo-tree-id3247 . -7) (undo-tree-id3248 . -7) (undo-tree-id3249 . -7) (undo-tree-id3250 . -7) (undo-tree-id3251 . -7) (undo-tree-id3252 . -7) (undo-tree-id3253 . -7) (undo-tree-id3254 . -7) (undo-tree-id3255 . -7) (undo-tree-id3256 . -7) (undo-tree-id3257 . -7) (undo-tree-id3258 . -7) (undo-tree-id3259 . -7) 1061 (#("(" 0 1 (fontified t)) . -1061) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) 1062 (1054 . 1062)) ((#("reshape(" 0 7 (fontified nil) 7 8 (fontified nil)) . 1054) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -2) (undo-tree-id3324 . -2) (undo-tree-id3325 . -2) (undo-tree-id3326 . -2) (undo-tree-id3327 . -2) (undo-tree-id3328 . -2) (undo-tree-id3329 . -2) (undo-tree-id3330 . -2) (undo-tree-id3331 . -2) (undo-tree-id3332 . -2) (undo-tree-id3333 . -2) (undo-tree-id3334 . -2) (undo-tree-id3335 . -2) (undo-tree-id3336 . -2) (undo-tree-id3337 . -2) (undo-tree-id3338 . -2) (undo-tree-id3339 . -2) (undo-tree-id3340 . -2) (undo-tree-id3341 . -2) (undo-tree-id3342 . -2) (undo-tree-id3343 . -2) (undo-tree-id3344 . -2) (undo-tree-id3345 . -2) (undo-tree-id3346 . -2) (undo-tree-id3347 . -2) (undo-tree-id3348 . -2) (undo-tree-id3349 . -3) (undo-tree-id3350 . -3) (undo-tree-id3351 . -3) (undo-tree-id3352 . -3) (undo-tree-id3353 . -3) (undo-tree-id3354 . -3) (undo-tree-id3355 . -3) (undo-tree-id3356 . -3) (undo-tree-id3357 . -3) (undo-tree-id3358 . -3) (undo-tree-id3359 . -3) (undo-tree-id3360 . -3) (undo-tree-id3361 . -3) (undo-tree-id3362 . -3) (undo-tree-id3363 . -3) (undo-tree-id3364 . -3) (undo-tree-id3365 . -3) (undo-tree-id3366 . -3) (undo-tree-id3367 . -3) (undo-tree-id3368 . -3) (undo-tree-id3369 . -3) (undo-tree-id3370 . -3) (undo-tree-id3371 . -3) (undo-tree-id3372 . -3) (undo-tree-id3373 . -3) (undo-tree-id3374 . -3) (undo-tree-id3375 . -4) (undo-tree-id3376 . -4) (undo-tree-id3377 . -4) (undo-tree-id3378 . -4) (undo-tree-id3379 . -4) (undo-tree-id3380 . -4) (undo-tree-id3381 . -4) (undo-tree-id3382 . -4) (undo-tree-id3383 . -4) (undo-tree-id3384 . -4) (undo-tree-id3385 . -4) (undo-tree-id3386 . -4) (undo-tree-id3387 . -4) (undo-tree-id3388 . -4) (undo-tree-id3389 . -4) (undo-tree-id3390 . -4) (undo-tree-id3391 . -4) (undo-tree-id3392 . -4) (undo-tree-id3393 . -4) (undo-tree-id3394 . -4) (undo-tree-id3395 . -4) (undo-tree-id3396 . -4) (undo-tree-id3397 . -4) (undo-tree-id3398 . -4) (undo-tree-id3399 . -4) (undo-tree-id3400 . -4) (undo-tree-id3401 . -5) (undo-tree-id3402 . -5) (undo-tree-id3403 . -5) (undo-tree-id3404 . -5) (undo-tree-id3405 . -5) (undo-tree-id3406 . -5) (undo-tree-id3407 . -5) (undo-tree-id3408 . -5) (undo-tree-id3409 . -5) (undo-tree-id3410 . -5) (undo-tree-id3411 . -5) (undo-tree-id3412 . -5) (undo-tree-id3413 . -5) (undo-tree-id3414 . -5) (undo-tree-id3415 . -5) (undo-tree-id3416 . -5) (undo-tree-id3417 . -5) (undo-tree-id3418 . -5) (undo-tree-id3419 . -5) (undo-tree-id3420 . -5) (undo-tree-id3421 . -5) (undo-tree-id3422 . -5) (undo-tree-id3423 . -5) (undo-tree-id3424 . -5) (undo-tree-id3425 . -5) (undo-tree-id3426 . -5) (undo-tree-id3427 . -6) (undo-tree-id3428 . -6) (undo-tree-id3429 . -6) (undo-tree-id3430 . -6) (undo-tree-id3431 . -6) (undo-tree-id3432 . -6) (undo-tree-id3433 . -6) (undo-tree-id3434 . -6) (undo-tree-id3435 . -6) (undo-tree-id3436 . -6) (undo-tree-id3437 . -6) (undo-tree-id3438 . -6) (undo-tree-id3439 . -6) (undo-tree-id3440 . -6) (undo-tree-id3441 . -6) (undo-tree-id3442 . -6) (undo-tree-id3443 . -6) (undo-tree-id3444 . -6) (undo-tree-id3445 . -6) (undo-tree-id3446 . -6) (undo-tree-id3447 . -6) (undo-tree-id3448 . -6) (undo-tree-id3449 . -6) (undo-tree-id3450 . -6) (undo-tree-id3451 . -6) (undo-tree-id3452 . -6) (undo-tree-id3453 . -7) (undo-tree-id3454 . -7) (undo-tree-id3455 . -7) (undo-tree-id3456 . -7) (undo-tree-id3457 . -7) (undo-tree-id3458 . -7) (undo-tree-id3459 . -7) (undo-tree-id3460 . -7) (undo-tree-id3461 . -7) (undo-tree-id3462 . -7) (undo-tree-id3463 . -7) (undo-tree-id3464 . -7) (undo-tree-id3465 . -7) (undo-tree-id3466 . -7) (undo-tree-id3467 . -7) (undo-tree-id3468 . -7) (undo-tree-id3469 . -7) (undo-tree-id3470 . -7) (undo-tree-id3471 . -7) (undo-tree-id3472 . -7) (undo-tree-id3473 . -7) (undo-tree-id3474 . -7) (undo-tree-id3475 . -7) (undo-tree-id3476 . -7) (undo-tree-id3477 . -7) (undo-tree-id3478 . -7) (undo-tree-id3479 . -8) (undo-tree-id3480 . -8) (undo-tree-id3481 . -8) (undo-tree-id3482 . -8) (undo-tree-id3483 . -8) (undo-tree-id3484 . -8) (undo-tree-id3485 . -8) (undo-tree-id3486 . -8) (undo-tree-id3487 . -8) (undo-tree-id3488 . -8) (undo-tree-id3489 . -8) (undo-tree-id3490 . -8) (undo-tree-id3491 . -8) (undo-tree-id3492 . -8) (undo-tree-id3493 . -8) (undo-tree-id3494 . -8) (undo-tree-id3495 . -8) (undo-tree-id3496 . -8) (undo-tree-id3497 . -8) (undo-tree-id3498 . -8) (undo-tree-id3499 . -8) (undo-tree-id3500 . -8) (undo-tree-id3501 . -8) (undo-tree-id3502 . -8) (undo-tree-id3503 . -8) (undo-tree-id3504 . -7) (undo-tree-id3505 . -7) (undo-tree-id3506 . -7) (undo-tree-id3507 . -7) (undo-tree-id3508 . -7) (undo-tree-id3509 . -7) (undo-tree-id3510 . -7) (undo-tree-id3511 . -7) (undo-tree-id3512 . -7) (undo-tree-id3513 . -7) (undo-tree-id3514 . -7) (undo-tree-id3515 . -7) (undo-tree-id3516 . -7) (undo-tree-id3517 . -7) (undo-tree-id3518 . -7) (undo-tree-id3519 . -7) (undo-tree-id3520 . -7) (undo-tree-id3521 . -7) (undo-tree-id3522 . -7) (undo-tree-id3523 . -7) (undo-tree-id3524 . -7) (undo-tree-id3525 . -7) (undo-tree-id3526 . -7) (undo-tree-id3527 . -7) (undo-tree-id3528 . -7) (undo-tree-id3529 . -7) (undo-tree-id3530 . -7) (1054 . 1062) (#("Matrix(" 0 7 (fontified t)) . 1054) (undo-tree-id3531 . -7)) (25384 28985 710509 676000) 0 nil])
([nil nil ((1064 . 1071)) nil (25384 29295 445326 600000) 0 nil])
([nil nil ((1063 . 1064)) ((#(")" 0 1 (fontified t)) . 1063)) (25384 28985 710024 977000) 0 nil])
([nil nil ((#("
lm(reshape(θs, :, 1), 2*θs)" 0 1 (fontified t) 1 12 (fontified t) 12 25 (fontified t) 25 28 (fontified t)) . 1050) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) 1051) nil (25384 29295 445324 225000) 0 nil])
nil
([nil nil ((1051 . 1063) (1050 . 1051)) nil (25384 29295 445317 869000) 0 nil])
([nil nil ((#("
lm(@formula " 0 1 (fontified t) 1 4 (fontified t) 4 12 (fontified t face julia-macro-face) 12 13 (fontified t)) . 1050) (undo-tree-id4044 . -12) (undo-tree-id4045 . -1) (undo-tree-id4046 . -12) (undo-tree-id4047 . -12) (undo-tree-id4048 . -12) (undo-tree-id4049 . -12) (undo-tree-id4050 . -12) 1062) nil (25384 29295 445315 76000) 0 nil])
([nil nil ((932 . 944) (929 . 932) (928 . 929) (#(" " 0 1 (fontified t)) . -928) (undo-tree-id4040 . -1) 929 (922 . 929) (#("X" 0 1 (fontified t)) . -922) (undo-tree-id4041 . -1) (#(" " 0 1 (fontified t)) . -923) (undo-tree-id4042 . -1) 924 (912 . 924) (907 . 912) (#("data" 0 4 (fontified t)) . -907) (undo-tree-id4043 . -4) 911 (907 . 911) (906 . 907)) nil (25384 29295 445306 904000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 928)) nil (25384 29295 445299 431000) 0 nil])
([nil nil ((958 . 964) (957 . 958) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 957) (undo-tree-id4039 . -11) 968 (967 . 968) (964 . 967) (943 . 964)) nil (25384 29295 445297 57000) 0 nil])
([nil nil ((906 . 922) (905 . 906)) nil (25384 29295 445293 215000) 0 nil])
([nil nil ((981 . 984)) nil (25384 29295 445291 260000) 0 nil])
([nil nil ((1005 . 1010) (#("p" 0 1 (fontified t)) . -1005) (undo-tree-id4035 . -1) (#("e" 0 1 (fontified t)) . -1006) (undo-tree-id4036 . -1) (#("p" 0 1 (fontified t)) . -1007) (undo-tree-id4037 . -1) 1008 (994 . 1008) (#(" " 0 1 (fontified t)) . -994) (undo-tree-id4038 . -1) 995 (983 . 995)) nil (25384 29295 445288 815000) 0 nil])
([nil nil ((1009 . 1013)) nil (25384 29295 445282 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 982) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1)) nil (25384 29295 445279 317000) 0 nil])
([nil nil ((959 . 970) (958 . 959) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 958) (undo-tree-id3799 . -11) (undo-tree-id3800 . -4) (undo-tree-id3801 . -4) (undo-tree-id3802 . -4) (undo-tree-id3803 . -4) (undo-tree-id3804 . -4) (undo-tree-id3805 . -4) (undo-tree-id3806 . -4) (undo-tree-id3807 . -4) (undo-tree-id3808 . -4) (undo-tree-id3809 . -4) (undo-tree-id3810 . -4) (undo-tree-id3811 . -4) (undo-tree-id3812 . -4) (undo-tree-id3813 . -4) (undo-tree-id3814 . -4) (undo-tree-id3815 . -4) (undo-tree-id3816 . -4) (undo-tree-id3817 . -4) (undo-tree-id3818 . -4) (undo-tree-id3819 . -4) (undo-tree-id3820 . -4) (undo-tree-id3821 . -4) (undo-tree-id3822 . -4) (undo-tree-id3823 . -4) (undo-tree-id3824 . -4) (undo-tree-id3825 . -4) (undo-tree-id3826 . -5) (undo-tree-id3827 . -5) (undo-tree-id3828 . -5) (undo-tree-id3829 . -5) (undo-tree-id3830 . -5) (undo-tree-id3831 . -5) (undo-tree-id3832 . -5) (undo-tree-id3833 . -5) (undo-tree-id3834 . -5) (undo-tree-id3835 . -5) (undo-tree-id3836 . -5) (undo-tree-id3837 . -5) (undo-tree-id3838 . -5) (undo-tree-id3839 . -5) (undo-tree-id3840 . -5) (undo-tree-id3841 . -5) (undo-tree-id3842 . -5) (undo-tree-id3843 . -5) (undo-tree-id3844 . -5) (undo-tree-id3845 . -5) (undo-tree-id3846 . -5) (undo-tree-id3847 . -5) (undo-tree-id3848 . -5) (undo-tree-id3849 . -5) (undo-tree-id3850 . -5) (undo-tree-id3851 . -5) (undo-tree-id3852 . -6) (undo-tree-id3853 . -6) (undo-tree-id3854 . -6) (undo-tree-id3855 . -6) (undo-tree-id3856 . -6) (undo-tree-id3857 . -6) (undo-tree-id3858 . -6) (undo-tree-id3859 . -6) (undo-tree-id3860 . -6) (undo-tree-id3861 . -6) (undo-tree-id3862 . -6) (undo-tree-id3863 . -6) (undo-tree-id3864 . -6) (undo-tree-id3865 . -6) (undo-tree-id3866 . -6) (undo-tree-id3867 . -6) (undo-tree-id3868 . -6) (undo-tree-id3869 . -6) (undo-tree-id3870 . -6) (undo-tree-id3871 . -6) (undo-tree-id3872 . -6) (undo-tree-id3873 . -6) (undo-tree-id3874 . -6) (undo-tree-id3875 . -6) (undo-tree-id3876 . -6) (undo-tree-id3877 . -6) (undo-tree-id3878 . -7) (undo-tree-id3879 . -7) (undo-tree-id3880 . -7) (undo-tree-id3881 . -7) (undo-tree-id3882 . -7) (undo-tree-id3883 . -7) (undo-tree-id3884 . -7) (undo-tree-id3885 . -7) (undo-tree-id3886 . -7) (undo-tree-id3887 . -7) (undo-tree-id3888 . -7) (undo-tree-id3889 . -7) (undo-tree-id3890 . -7) (undo-tree-id3891 . -7) (undo-tree-id3892 . -7) (undo-tree-id3893 . -7) (undo-tree-id3894 . -7) (undo-tree-id3895 . -7) (undo-tree-id3896 . -7) (undo-tree-id3897 . -7) (undo-tree-id3898 . -7) (undo-tree-id3899 . -7) (undo-tree-id3900 . -7) (undo-tree-id3901 . -7) (undo-tree-id3902 . -7) (undo-tree-id3903 . -7) (undo-tree-id3904 . -8) (undo-tree-id3905 . -8) (undo-tree-id3906 . -8) (undo-tree-id3907 . -8) (undo-tree-id3908 . -8) (undo-tree-id3909 . -8) (undo-tree-id3910 . -8) (undo-tree-id3911 . -8) (undo-tree-id3912 . -8) (undo-tree-id3913 . -8) (undo-tree-id3914 . -8) (undo-tree-id3915 . -8) (undo-tree-id3916 . -8) (undo-tree-id3917 . -8) (undo-tree-id3918 . -8) (undo-tree-id3919 . -8) (undo-tree-id3920 . -8) (undo-tree-id3921 . -8) (undo-tree-id3922 . -8) (undo-tree-id3923 . -8) (undo-tree-id3924 . -8) (undo-tree-id3925 . -8) (undo-tree-id3926 . -8) (undo-tree-id3927 . -8) (undo-tree-id3928 . -8) (undo-tree-id3929 . -8) (undo-tree-id3930 . -9) (undo-tree-id3931 . -9) (undo-tree-id3932 . -9) (undo-tree-id3933 . -9) (undo-tree-id3934 . -9) (undo-tree-id3935 . -9) (undo-tree-id3936 . -9) (undo-tree-id3937 . -9) (undo-tree-id3938 . -9) (undo-tree-id3939 . -9) (undo-tree-id3940 . -9) (undo-tree-id3941 . -9) (undo-tree-id3942 . -9) (undo-tree-id3943 . -9) (undo-tree-id3944 . -9) (undo-tree-id3945 . -9) (undo-tree-id3946 . -9) (undo-tree-id3947 . -9) (undo-tree-id3948 . -9) (undo-tree-id3949 . -9) (undo-tree-id3950 . -9) (undo-tree-id3951 . -9) (undo-tree-id3952 . -9) (undo-tree-id3953 . -9) (undo-tree-id3954 . -9) (undo-tree-id3955 . -9) (undo-tree-id3956 . -10) (undo-tree-id3957 . -10) (undo-tree-id3958 . -10) (undo-tree-id3959 . -10) (undo-tree-id3960 . -10) (undo-tree-id3961 . -10) (undo-tree-id3962 . -10) (undo-tree-id3963 . -10) (undo-tree-id3964 . -10) (undo-tree-id3965 . -10) (undo-tree-id3966 . -10) (undo-tree-id3967 . -10) (undo-tree-id3968 . -10) (undo-tree-id3969 . -10) (undo-tree-id3970 . -10) (undo-tree-id3971 . -10) (undo-tree-id3972 . -10) (undo-tree-id3973 . -10) (undo-tree-id3974 . -10) (undo-tree-id3975 . -10) (undo-tree-id3976 . -10) (undo-tree-id3977 . -10) (undo-tree-id3978 . -10) (undo-tree-id3979 . -10) (undo-tree-id3980 . -10) (undo-tree-id3981 . -10) (undo-tree-id3982 . -11) (undo-tree-id3983 . -11) (undo-tree-id3984 . -11) (undo-tree-id3985 . -11) (undo-tree-id3986 . -11) (undo-tree-id3987 . -11) (undo-tree-id3988 . -11) (undo-tree-id3989 . -11) (undo-tree-id3990 . -11) (undo-tree-id3991 . -11) (undo-tree-id3992 . -11) (undo-tree-id3993 . -11) (undo-tree-id3994 . -11) (undo-tree-id3995 . -11) (undo-tree-id3996 . -11) (undo-tree-id3997 . -11) (undo-tree-id3998 . -11) (undo-tree-id3999 . -11) (undo-tree-id4000 . -11) (undo-tree-id4001 . -11) (undo-tree-id4002 . -11) (undo-tree-id4003 . -11) (undo-tree-id4004 . -11) (undo-tree-id4005 . -11) (undo-tree-id4006 . -11) (undo-tree-id4007 . -11) 969 (957 . 969)) nil (25384 29295 445251 101000) 0 nil])
([nil nil ((1000 . 1005) (#(">" 0 1 (fontified t)) . -1000) (undo-tree-id3794 . -1) (#("<" 0 1 (fontified t)) . -1001) (undo-tree-id3795 . -1) 1002 (994 . 1002) (993 . 994) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 993) (undo-tree-id3796 . -11) 1004 (993 . 1004) (#("e" 0 1 (fontified t)) . -993) (undo-tree-id3797 . -1) (#("\\" 0 1 (fontified t syntax-table (1))) . -994) (undo-tree-id3798 . -1) 995 (992 . 995)) nil (25384 29295 445108 346000) 0 nil])
([nil nil ((967 . 968) (#("1" 0 1 (fontified t)) . -967) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (#("0" 0 1 (fontified t)) . -968) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) 969) nil (25384 29298 754951 268000) 0 nil])
([nil nil ((1001 . 1004) (#("1" 0 1 (fontified t)) . -1001) (undo-tree-id4073 . -1) 1002 (1001 . 1002) (#("1" 0 1 (fontified t)) . -1001) (undo-tree-id4074 . -1) (#("0" 0 1 (fontified t)) . -1002) (undo-tree-id4075 . -1) 1003) nil (25384 29307 125935 846000) 0 nil] [nil nil ((1001 . 1002) (#("1" 0 1 (fontified t)) . -1001) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (#("0" 0 1 (fontified t)) . -1002) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) 1003) ((1001 . 1003) (#("1" 0 1 (fontified t)) . 1001)) (25384 29298 413943 857000) 0 nil])
([nil nil ((967 . 970) (#("5" 0 1 (fontified t)) . 967) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1)) nil (25384 29307 125925 231000) 0 nil])
([nil nil ((967 . 968) (#("5" 0 1 (fontified t)) . 967) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1)) ((967 . 968) (#("1" 0 1 (fontified t)) . 967) (t 25384 29295 457229 859000)) (25384 29295 444893 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1042 . 1043) (#("
" 0 1 (fontified nil)) . -1128) (1042 . 1129) (t 25384 29307 133832 451000)) nil (25384 29324 91295 778000) 0 nil])
nil
([nil nil ((#("lm(reshape(log.(εvals[εvals .> 25]), :, 1), log.(umeans[εvals .> 25]))

lm(reshape(log.(εvals[εvals .< 10]), :, 1), log.(umeans[εvals .< 10]))
" 0 16 (fontified t) 16 22 (fontified t) 22 34 (fontified t) 34 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 44 (fontified t) 44 56 (fontified t) 56 68 (fontified t) 68 70 (fontified t) 70 71 (rear-nonsticky t fontified t) 71 72 (fontified t) 72 88 (fontified t) 88 94 (fontified t) 94 106 (fontified t) 106 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 116 (fontified t) 116 128 (fontified t) 128 140 (fontified t) 140 142 (fontified t) 142 143 (fontified t)) . 1129) (undo-tree-id4079 . -143) (undo-tree-id4080 . -143) (undo-tree-id4081 . -69) (undo-tree-id4082 . -15) (undo-tree-id4083 . -143) (undo-tree-id4084 . -143) (undo-tree-id4085 . -142) (undo-tree-id4086 . -72) (undo-tree-id4087 . -72) (undo-tree-id4088 . -71) (undo-tree-id4089 . -71) (undo-tree-id4090 . -143) (undo-tree-id4091 . -143) (undo-tree-id4092 . -143) (undo-tree-id4093 . -71) (undo-tree-id4094 . -143) (undo-tree-id4095 . -143) (undo-tree-id4096 . -71) (undo-tree-id4097 . -143) 1272) nil (25384 29324 91292 495000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1128 . 1129) (#("
" 0 1 (fontified nil)) . -1160) (1128 . 1161) 1043) nil (25384 29324 91272 311000) 0 nil])
([nil nil ((1084 . 1085) (#("<" 0 1 (fontified t)) . 1084)) nil (25384 29324 91269 518000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1086)) nil (25384 29324 91266 235000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1086)) nil (25384 29324 91264 349000) 0 nil])
([nil nil ((1087 . 1088)) nil (25384 29324 91261 486000) 0 nil])
([nil nil ((1121 . 1123) (#("0" 0 1 (fontified t)) . -1121) (undo-tree-id4076 . -1) (#("." 0 1 (fontified t)) . -1122) (undo-tree-id4077 . -1) (#("1" 0 1 (fontified t)) . -1123) (undo-tree-id4078 . -1) 1124) nil (25384 29324 91258 133000) 0 nil])
([nil nil ((1119 . 1120) (#("<" 0 1 (fontified t)) . 1119)) nil (25384 29324 91236 622000) 0 nil])
([nil nil ((1010 . 1016) (t 25384 29324 103739 330000)) nil (25384 29538 316662 576000) 0 nil])
([nil nil ((1133 . 1140)) nil (25384 29538 316660 621000) 0 nil])
([nil nil ((1014 . 1015)) nil (25384 29538 316658 735000) 0 nil])
([nil nil ((1049 . 1050)) nil (25384 29538 316656 430000) 0 nil])
([nil nil ((1056 . 1062) (#("[" 0 1 (fontified t)) . -1056) (undo-tree-id4135 . -1) 1057 (1054 . 1057) (#("predict" 0 7 (fontified t)) . -1054) (undo-tree-id4136 . -7) 1061 (1049 . 1061)) nil (25384 29538 316654 55000) 0 nil])
([nil nil ((1061 . 1073) (#("s" 0 1 (fontified t)) . -1061) (undo-tree-id4123 . -1) (#("p" 0 1 (fontified t)) . -1062) (undo-tree-id4124 . -1) 1063 (1056 . 1063) (#("[" 0 1 (fontified t)) . -1056) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (#(":" 0 1 (fontified t)) . -1057) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) 1058 (#("eps" 0 3 (fontified t face julia-quoted-symbol-face)) . -1058) (undo-tree-id4129 . -3) (undo-tree-id4130 . -3) (undo-tree-id4131 . -3) 1061 (#("]" 0 1 (fontified t)) . -1061) (undo-tree-id4132 . -1) (undo-tree-id4133 . 1) (undo-tree-id4134 . -1) 1062) nil (25384 29538 316647 490000) 0 nil])
([nil nil ((#("plot" 0 4 (fontified t)) . 1049)) nil (25384 29538 316635 408000) 0 nil])
([nil nil ((1049 . 1056)) nil (25384 29538 316633 33000) 0 nil])
([nil nil ((1102 . 1108) (#(";" 0 1 (fontified t)) . -1102) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (#("f" 0 1 (fontified t)) . -1103) (undo-tree-id4120 . -1) (#("i" 0 1 (fontified t)) . -1104) (undo-tree-id4121 . -1) 1105 (1104 . 1105) (1098 . 1104) (1077 . 1098) (#("sc" 0 2 (fontified t)) . -1077) (undo-tree-id4122 . -2) 1079 (1077 . 1079) (1076 . 1077)) nil (25384 29538 316630 170000) 0 nil])
([nil nil ((#("df" 0 2 (fontified t)) . -1057) (undo-tree-id4114 . -2) (undo-tree-id4115 . -2) 1059 (#("." 0 1 (fontified t)) . -1059) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) 1060) nil (25384 29538 316621 649000) 0 nil])
([nil nil ((1060 . 1062)) nil (25384 29538 316615 992000) 0 nil])
([nil nil ((1063 . 1068) (1062 . 1063) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 1062) (undo-tree-id4110 . -11) 1073 (1062 . 1073) (#("eps" 0 3 (fontified t)) . -1062) (undo-tree-id4111 . 3) (undo-tree-id4112 . -3) (undo-tree-id4113 . -3) 1065) nil (25384 29538 316612 640000) 0 nil])
([nil nil ((#("df." 0 3 (fontified t)) . 1070) (undo-tree-id4106 . -2) (undo-tree-id4107 . -2) (undo-tree-id4108 . -2) (undo-tree-id4109 . -2) 1072) nil (25384 29538 316606 843000) 0 nil])
([nil nil ((1070 . 1075)) nil (25384 29538 316601 535000) 0 nil])
([nil nil ((#("logu" 0 4 (fontified t)) . 1075) (undo-tree-id4104 . 4) (undo-tree-id4105 . 4)) nil (25384 29538 316599 160000) 0 nil])
([nil nil ((1081 . 1082) (#("0" 0 1 (fontified t)) . -1081) (undo-tree-id4103 . -1) 1082 (1075 . 1082)) nil (25384 29538 316593 433000) 0 nil])
([nil nil ((#("scatter(log.(εvals), log.(umeans))
plot!(df.logeps, predict(fit1))
" 0 7 (fontified t) 7 13 (fontified t) 13 19 (fontified t) 19 35 (fontified t) 35 66 (fontified t) 66 67 (fontified t)) . 1049) (undo-tree-id4098 . -35) (undo-tree-id4099 . 34) (undo-tree-id4100 . -35) (undo-tree-id4101 . -35) (undo-tree-id4102 . -35) 1084) nil (25384 29538 316589 662000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1173 . 1174) (#("
" 0 1 (fontified nil)) . -1240) (1173 . 1241)) nil (25384 29538 316573 389000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1240 . 1241) (#("
" 0 1 (fontified nil)) . -1272) (1240 . 1273) 1209) nil (25384 29538 316807 776000) 0 nil])
([nil nil ((1269 . 1270) (#("1" 0 1 (fontified t)) . 1269)) ((1269 . 1270) (#("2" 0 1 (fontified t)) . 1269)) (25384 29539 767456 258000) 0 nil])
([nil nil ((926 . 927)) nil (25384 29724 50658 841000) 0 nil])
([nil nil ((1048 . 1049)) nil (25384 29724 50657 25000) 0 nil])
([nil nil ((1054 . 1055)) nil (25384 29724 50655 139000) 0 nil])
([nil nil ((1174 . 1175)) nil (25384 29724 50653 184000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1051)) nil (25384 29724 50651 298000) 0 nil])
([nil nil ((1220 . 1221)) nil (25384 29724 50648 924000) 0 nil])
([nil nil ((1253 . 1254)) nil (25384 29724 50647 38000) 0 nil])
([nil nil ((970 . 971) (#("1" 0 1 (fontified t)) . 970)) nil (25384 29724 50645 152000) 0 nil])
([nil nil ((1006 . 1007) (#("1" 0 1 (fontified t)) . 1006)) nil (25384 29724 50642 778000) 0 nil])
([nil nil ((1130 . 1133) (#("." 0 1 (fontified t)) . -1130) (undo-tree-id4327 . -1) (#("2" 0 1 (fontified t)) . -1131) (undo-tree-id4328 . -1) 1132 (1130 . 1132) (#("5" 0 1 (fontified t)) . -1130) (undo-tree-id4329 . -1) 1131 (1130 . 1131) (#("1" 0 1 (fontified t)) . -1130) (undo-tree-id4330 . -1) (#("0" 0 1 (fontified t)) . -1131) (undo-tree-id4331 . -1) 1132) nil (25384 29724 50638 936000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1130) (undo-tree-id4325 . -1) (#("." 0 1 (fontified t)) . -1131) (undo-tree-id4326 . -1) 1132) nil (25384 29724 50632 162000) 0 nil])
([nil nil ((1095 . 1096) (#("1" 0 1 (fontified t)) . -1095) (undo-tree-id4322 . -1) (#("0" 0 1 (fontified t)) . -1096) (undo-tree-id4323 . 1) (undo-tree-id4324 . -1) 1097) nil (25384 29724 50627 901000) 0 nil])
([nil nil ((970 . 971) (#("5" 0 1 (fontified t)) . 970)) nil (25384 29724 50623 641000) 0 nil])
([nil nil ((1006 . 1007) (#("5" 0 1 (fontified t)) . 1006)) nil (25384 29724 50621 755000) 0 nil])
([nil nil ((1253 . 1257) (1252 . 1253) (#("\\alpha" 0 6 (fontified t face font-lock-string-face)) . 1252) (undo-tree-id4314 . -6) 1258 (1256 . 1258) (#("[" 0 1 (fontified t face font-lock-string-face)) . -1256) (undo-tree-id4315 . -1) 1257 (#("ha" 0 2 (fontified t face font-lock-string-face)) . -1257) (undo-tree-id4316 . -2) 1259 (1251 . 1259) (#("α" 0 1 (fontified t)) . -1251) (undo-tree-id4317 . -1) (#(" " 0 1 (fontified t)) . -1252) (undo-tree-id4318 . -1) (#("=" 0 1 (fontified t)) . -1253) (undo-tree-id4319 . -1) (#(" " 0 1 (fontified t)) . -1254) (undo-tree-id4320 . -1) 1255 (1252 . 1255) (1251 . 1252) (#("\\alpha" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 1251) (undo-tree-id4321 . -6) 1257 (1241 . 1257)) nil (25384 29724 50617 425000) 0 nil])
([nil nil ((1302 . 1306) (1301 . 1302) (#("\\alpha" 0 6 (fontified t face font-lock-string-face)) . 1301) (undo-tree-id4313 . -6) 1307 (1290 . 1307)) nil (25384 29724 50606 530000) 0 nil])
([nil nil ((1256 . 1257)) nil (25384 29724 50603 597000) 0 nil])
([nil nil ((1257 . 1272)) nil (25384 29724 50601 641000) 0 nil])
([nil nil ((1334 . 1337) (1331 . 1334) (#("1" 0 1 (fontified t face font-lock-string-face)) . -1331) (undo-tree-id4312 . -1) 1332 (1321 . 1332)) nil (25384 29724 50599 266000) 0 nil])
([nil nil ((1222 . 1224) (1218 . 1222) (#("d" 0 1 (fontified t)) . -1218) (undo-tree-id4307 . -1) 1219 (1210 . 1219) (#("alph " 0 5 (fontified t)) . -1210) (undo-tree-id4308 . -5) 1215 (#("a" 0 1 (fontified t)) . -1215) (undo-tree-id4309 . -1) 1216 (1210 . 1216) (#("l" 0 1 (fontified t)) . -1210) (undo-tree-id4310 . -1) (#("a" 0 1 (fontified t)) . -1211) (undo-tree-id4311 . -1) 1212 (1208 . 1212)) nil (25384 29724 50594 28000) 0 nil])
([nil nil ((1226 . 1239) (#("markerstro" 0 10 (fontified t)) . -1226) (undo-tree-id4306 . -10) 1236 (1224 . 1236)) nil (25384 29724 50586 974000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 1237)) nil (25384 29724 50584 111000) 0 nil])
([nil nil ((1238 . 1254) (#(";" 0 1 (fontified t)) . -1238) (undo-tree-id4304 . -1) (#(" " 0 1 (fontified t)) . -1239) (undo-tree-id4305 . -1) 1240 (1238 . 1240)) nil (25384 29724 50581 736000) 0 nil])
([nil nil ((1266 . 1273) (#("l" 0 1 (fontified t face julia-quoted-symbol-face)) . -1266) (undo-tree-id4297 . -1) 1267 (1254 . 1267) (#(";" 0 1 (fontified t)) . -1254) (undo-tree-id4298 . -1) (#("," 0 1 (fontified t)) . -1255) (undo-tree-id4299 . -1) (#(" " 0 1 (fontified t)) . -1256) (undo-tree-id4300 . -1) 1257 (1255 . 1257) (#(" " 0 1 (fontified t)) . -1255) (undo-tree-id4301 . -1) (#("l" 0 1 (fontified t)) . -1256) (undo-tree-id4302 . -1) (#("a" 0 1 (fontified t)) . -1257) (undo-tree-id4303 . -1) 1258 (1254 . 1258)) nil (25384 29750 401902 553000) 0 nil])
([nil nil ((511 . 512) (#("1" 0 1 (fontified t)) . -511) (undo-tree-id4389 . -1) (#("2" 0 1 (fontified t)) . -512) (undo-tree-id4390 . -1) 513 (505 . 513) (504 . 505) (#("\\delta" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 504) (undo-tree-id4391 . -6) 510 (504 . 510)) nil (25384 30083 286784 576000) 0 nil] [nil nil ((505 . 509) (504 . 505) (#("\\delta" 0 1 (fontified t syntax-table (1)) 1 6 (fontified t)) . 504) (undo-tree-id4140 . -6) (undo-tree-id4142 . -1) (undo-tree-id4144 . -1) (undo-tree-id4146 . -1) (undo-tree-id4148 . -1) (undo-tree-id4150 . -1) (undo-tree-id4152 . -1) (undo-tree-id4154 . -1) (undo-tree-id4156 . -1) (undo-tree-id4158 . -1) (undo-tree-id4160 . -1) (undo-tree-id4162 . -1) (undo-tree-id4164 . -1) (undo-tree-id4166 . -1) (undo-tree-id4168 . -2) (undo-tree-id4170 . -2) (undo-tree-id4172 . -2) (undo-tree-id4174 . -2) (undo-tree-id4176 . -2) (undo-tree-id4178 . -2) (undo-tree-id4180 . -2) (undo-tree-id4182 . -2) (undo-tree-id4184 . -2) (undo-tree-id4186 . -2) (undo-tree-id4188 . -2) (undo-tree-id4190 . -2) (undo-tree-id4192 . -2) (undo-tree-id4194 . -3) (undo-tree-id4196 . -3) (undo-tree-id4198 . -3) (undo-tree-id4200 . -3) (undo-tree-id4202 . -3) (undo-tree-id4204 . -3) (undo-tree-id4206 . -3) (undo-tree-id4208 . -3) (undo-tree-id4210 . -3) (undo-tree-id4212 . -3) (undo-tree-id4214 . -3) (undo-tree-id4216 . -3) (undo-tree-id4218 . -3) (undo-tree-id4220 . -4) (undo-tree-id4222 . -4) (undo-tree-id4224 . -4) (undo-tree-id4226 . -4) (undo-tree-id4228 . -4) (undo-tree-id4230 . -4) (undo-tree-id4232 . -4) (undo-tree-id4234 . -4) (undo-tree-id4236 . -4) (undo-tree-id4238 . -4) (undo-tree-id4240 . -4) (undo-tree-id4242 . -4) (undo-tree-id4244 . -4) (undo-tree-id4246 . -5) (undo-tree-id4248 . -5) (undo-tree-id4250 . -5) (undo-tree-id4252 . -5) (undo-tree-id4254 . -5) (undo-tree-id4256 . -5) (undo-tree-id4258 . -5) (undo-tree-id4260 . -5) (undo-tree-id4262 . -5) (undo-tree-id4264 . -5) (undo-tree-id4266 . -5) (undo-tree-id4268 . -5) (undo-tree-id4270 . -5) (undo-tree-id4272 . -6) (undo-tree-id4274 . -6) (undo-tree-id4276 . -6) (undo-tree-id4278 . -6) (undo-tree-id4280 . -6) (undo-tree-id4282 . -6) (undo-tree-id4284 . -6) (undo-tree-id4286 . -6) (undo-tree-id4288 . -6) (undo-tree-id4290 . -6) (undo-tree-id4292 . -6) (undo-tree-id4294 . -6) (undo-tree-id4296 . -6) 510 (504 . 510)) ((#("\\delta" 0 1 (fontified nil syntax-table (1)) 1 6 (fontified nil)) . 504) (504 . 510) (#("δ" 0 1 (fontified nil)) . 504) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (#(" = 1" 0 3 (fontified t) 3 4 (fontified t)) . 505) (undo-tree-id4342 . -3) (undo-tree-id4343 . -3) (undo-tree-id4344 . -3) (undo-tree-id4345 . -3)) (25384 29724 928715 637000) 0 nil])
([nil nil ((#("
scatter(log.(εvals), log.(map(mean, uvals)); xlabel = \"log ε\", ylabel = \"log u\", alpha = 0.25)
plot!(log.(εvals), 2/3*log.(εvals); label = \"α = 2/3\")
plot!(log.(εvals), log.(εvals); label = \"α = 1\")

scatter(εvals, umeans)
plot!(εvals, εvals)

" 0 1 (fontified t) 1 14 (fontified t) 14 27 (fontified t) 27 55 (fontified t) 55 60 (fontified t face font-lock-string-face) 60 62 (fontified t face font-lock-string-face) 62 73 (fontified t) 73 80 (fontified t face font-lock-string-face) 80 94 (fontified t) 94 96 (fontified t) 96 101 (fontified t) 101 107 (fontified t) 107 124 (fontified t) 124 140 (fontified t) 140 141 (fontified t face font-lock-string-face) 141 149 (fontified t face font-lock-string-face) 149 150 (fontified t) 150 151 (rear-nonsticky t fontified t) 151 156 (fontified t) 156 162 (fontified t) 162 175 (fontified t) 175 191 (fontified t) 191 192 (fontified t face font-lock-string-face) 192 196 (fontified t face font-lock-string-face) 196 197 (fontified t face font-lock-string-face) 197 198 (fontified t face font-lock-string-face) 198 199 (fontified t) 199 200 (rear-nonsticky t fontified t) 200 201 (fontified t) 201 209 (fontified t) 209 214 (fontified t) 214 216 (fontified t) 216 217 (fontified t) 217 224 (fontified t) 224 230 (fontified t) 230 237 (fontified t) 237 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t)) . 659) (undo-tree-id4354 . -244) (undo-tree-id4355 . -244) (undo-tree-id4356 . -200) (undo-tree-id4357 . -30) (undo-tree-id4358 . -244) (undo-tree-id4359 . -200) (undo-tree-id4360 . -244) (undo-tree-id4361 . -170) (undo-tree-id4362 . -196) (undo-tree-id4363 . -1) (undo-tree-id4364 . -93) (undo-tree-id4365 . -200) (undo-tree-id4366 . -244) (undo-tree-id4367 . -244) (undo-tree-id4368 . -196) (undo-tree-id4369 . -1) (undo-tree-id4370 . -200) (undo-tree-id4371 . -1) (undo-tree-id4372 . -200) (undo-tree-id4373 . -201) (undo-tree-id4374 . -245) (undo-tree-id4375 . -244) (undo-tree-id4376 . -200) (undo-tree-id4377 . -201) (undo-tree-id4378 . -244) (undo-tree-id4379 . -244) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -201) (undo-tree-id4384 . -245) (undo-tree-id4385 . -245) (undo-tree-id4386 . -244) (undo-tree-id4387 . -244) (undo-tree-id4388 . -200)) nil (25384 30083 286777 382000) 0 nil])
([nil nil ((nil rear-nonsticky nil 508 . 509) (nil fontified nil 508 . 509) (508 . 509)) ((#("3" 0 1 (rear-nonsticky nil fontified nil)) . 508) (nil rear-nonsticky t 508 . 509)) (25384 29724 50840 778000) 0 nil])
([nil nil ((659 . 660)) nil (25384 30083 286748 49000) 0 nil])
([nil nil ((368 . 369) (368 . 369) (#("
" 0 1 (fontified t)) . 368) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1)) ((368 . 369) (#("
" 0 1 (fontified nil)) . 368) (undo-tree-id4332 . 1) (undo-tree-id4333 . 1) (undo-tree-id4334 . 1) (#("}" 0 1 (fontified t)) . 368) (undo-tree-id4335 . 1) (undo-tree-id4336 . -1)) (25384 29724 50395 330000) 0 nil])
([nil nil ((185 . 187) (#("250" 0 3 (fontified t)) . -185) (undo-tree-id4349 . -3) (undo-tree-id4350 . -3) (undo-tree-id4351 . -3) (undo-tree-id4352 . -2) (undo-tree-id4353 . -3) 188) nil (25384 30083 286745 186000) 0 nil])
nil
([nil nil ((1167 . 1168)) nil (25384 30083 286739 40000) 0 nil])
([nil nil ((1168 . 1176) (1167 . 1168)) nil (25384 30083 286737 154000) 0 nil])
([nil nil ((1196 . 1198) (1175 . 1196) (#("l" 0 1 (fontified t)) . -1175) (undo-tree-id4347 . -1) (#("o" 0 1 (fontified t)) . -1176) (undo-tree-id4348 . -1) 1177 (1175 . 1177)) nil (25384 30083 286733 871000) 0 nil])
([nil nil ((1199 . 1200)) nil (25384 30083 286728 284000) 0 nil])
([nil nil ((#("yscale" 0 6 (fontified t)) . 1168)) nil (25384 30083 286726 398000) 0 nil])
([nil nil ((1168 . 1173) (#("y" 0 1 (fontified t)) . -1168) (undo-tree-id4346 . -1) 1169 (1168 . 1169)) nil (25384 30083 286723 535000) 0 nil])
([nil nil ((1173 . 1174)) nil (25384 30083 286711 522000) 0 nil])
([nil nil ((1175 . 1176)) nil (25384 30083 286709 147000) 0 nil])
([nil nil ((1200 . 1203)) nil (25384 30087 310944 333000) 0 nil])
([nil nil ((#("vline!([log.(minimum(C[C .> 0])), ])
" 0 6 (fontified t) 6 37 (fontified t)) . 1168) (undo-tree-id4472 . -20) (undo-tree-id4473 . -20) (undo-tree-id4474 . -20) (undo-tree-id4475 . -20) (undo-tree-id4476 . -20) (undo-tree-id4477 . 17) (undo-tree-id4478 . -21) (undo-tree-id4479 . 7) (undo-tree-id4480 . -31) (undo-tree-id4481 . -20) (undo-tree-id4482 . -20) 1188) nil (25384 30256 689200 316000) 0 nil] [nil nil ((1176 . 1180)) ((#("0.5*" 0 4 (fontified t)) . 1176)) (25384 30087 310818 899000) 0 nil] [nil nil ((1176 . 1178)) ((#("2*" 0 2 (fontified t)) . 1176)) (25384 30083 286700 68000) 0 nil])
([nil nil ((185 . 188) (#("5" 0 1 (fontified t)) . -185) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (#("0" 0 1 (fontified t)) . -186) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) 187) nil (25384 30256 689190 259000) 0 nil])
nil
nil
([nil nil ((#("0" 0 1 (fontified t)) . -187) (undo-tree-id4461 . -1) 188) nil (25384 30256 689179 713000) 0 nil])
([nil nil ((#("10" 0 2 (fontified t)) . -185) (undo-tree-id4458 . -2) (undo-tree-id4459 . -2) (undo-tree-id4460 . -1) 187) nil (25384 30256 689176 430000) 0 nil])
([nil nil ((#("N = 
" 0 5 (fontified t)) . 181) (undo-tree-id4448 . -3) (undo-tree-id4449 . 1) (undo-tree-id4450 . -3) (undo-tree-id4451 . -3) (undo-tree-id4452 . -4) (undo-tree-id4453 . -3) (undo-tree-id4454 . -4) (undo-tree-id4455 . -4) (undo-tree-id4456 . -3) (undo-tree-id4457 . -3) 184) nil (25384 30256 689171 262000) 0 nil])
([nil nil ((200 . 201) (194 . 200) (#("p" 0 1 (fontified t face font-lock-function-name-face)) . -194) (undo-tree-id4447 . -1) 195 (181 . 195) (180 . 181)) nil (25384 30256 689162 113000) 0 nil])
([nil nil ((1205 . 1209) (1136 . 1140) (1032 . 1036) (987 . 991) (900 . 904) (856 . 860) (765 . 769) (743 . 747) (729 . 733) (698 . 702) (651 . 655) (642 . 646) (#("    " 0 4 (fontified nil)) . -627) (619 . 627) (#("    " 0 4 (fontified nil)) . -587) (579 . 587) (#("    " 0 4 (fontified nil)) . -461) (453 . 461) (#("    " 0 4 (fontified nil)) . -445) (437 . 445) (406 . 410) (384 . 388) (340 . 344) (322 . 326) (287 . 291) (236 . 240) (202 . 206) 1117) nil (25384 30256 689156 875000) 0 nil])
([nil nil ((1278 . 1281) (1273 . 1278)) nil (25384 30256 689150 170000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1274) 1280) nil (25384 30256 689147 307000) 0 nil])
([nil nil ((#("250" 0 3 (fontified t)) . 379) (undo-tree-id4446 . 2)) nil (25384 30256 689144 932000) 0 nil])
([nil nil ((379 . 381) (#("7" 0 1 (fontified t)) . -379) (undo-tree-id4443 . -1) (#("5" 0 1 (fontified t)) . -380) (undo-tree-id4444 . -1) 381 (379 . 381) (#(" " 0 1 (fontified t)) . -379) (undo-tree-id4445 . -1) 380 (379 . 380)) nil (25384 30256 689141 160000) 0 nil])
([nil nil ((379 . 382) (#("5" 0 1 (fontified t)) . -379) (undo-tree-id4441 . -1) (#("0" 0 1 (fontified t)) . -380) (undo-tree-id4442 . -1) 381) nil (25384 30256 689134 665000) 0 nil])
([nil nil ((1036 . 1040)) nil (25384 30256 689130 405000) 0 nil])
([nil nil ((1282 . 1285) (1277 . 1282)) nil (25384 30256 689128 30000) 0 nil])
([nil nil ((1228 . 1229) (1227 . 1228) (1226 . 1227) (1225 . 1226) (1224 . 1225) (1150 . 1155)) nil (25384 30256 689125 656000) 0 nil])
([nil nil ((#("
    using GLM
    using DataFrames
" 0 1 (fontified t) 1 5 (fontified t) 5 10 (fontified t face font-lock-keyword-face) 10 19 (fontified t) 19 24 (fontified t face font-lock-keyword-face) 24 35 (fontified t) 35 36 (fontified t)) . 728) (undo-tree-id4417 . -15) (undo-tree-id4418 . -15) (undo-tree-id4419 . -36) (undo-tree-id4420 . -36) (undo-tree-id4421 . -36) (undo-tree-id4422 . -36) (undo-tree-id4423 . -36) (undo-tree-id4424 . -36) (undo-tree-id4425 . -36) (undo-tree-id4426 . -36) (undo-tree-id4427 . -36) (undo-tree-id4428 . -1) (undo-tree-id4429 . -36) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -36) (undo-tree-id4433 . -36) (undo-tree-id4434 . -36) (undo-tree-id4435 . -36) (undo-tree-id4436 . -36) (undo-tree-id4437 . -36) (undo-tree-id4438 . -36) (undo-tree-id4439 . -15) (undo-tree-id4440 . -15)) nil (25384 30256 689121 326000) 0 nil])
([nil nil ((nil rear-nonsticky nil 179 . 180) (#("
" 0 1 (fontified nil)) . -215) (179 . 216) 164) nil (25384 30256 689099 186000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 180)) nil (25384 30256 689096 322000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -190) (#("    " 0 4 (fontified t)) . -180) 194) nil (25384 30256 689094 367000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 366) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1)) nil (25384 30256 689091 14000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 431) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1)) nil (25384 30256 689069 84000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 675) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1)) nil (25384 30256 689061 472000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 752) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1)) nil (25384 30256 689051 345000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1018) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1)) nil (25384 30256 689045 618000) 0 nil])
([nil nil ((1286 . 1287)) nil (25384 30256 689025 573000) 0 nil])
([nil nil ((1287 . 1298) (#("get" 0 3 (fontified t)) . -1287) (undo-tree-id4515 . -3) 1290 (#("_" 0 1 (fontified t)) . -1290) (undo-tree-id4516 . -1) 1291 (#("plot" 0 4 (fontified t)) . -1291) (undo-tree-id4517 . -4) 1295 (#("(" 0 1 (fontified t)) . -1295) (undo-tree-id4518 . -1) 1296 (1287 . 1296) (t 25384 30256 691955 136000)) nil (25384 30374 266436 750000) 0 nil])
([nil nil ((1296 . 1298) (#("N" 0 1 (fontified t)) . -1296) (undo-tree-id4514 . -1) 1297) nil (25384 30374 266428 998000) 0 nil])
([nil nil ((1287 . 1296)) nil (25384 30374 266425 645000) 0 nil])
([nil nil ((1307 . 1309) (1304 . 1307) (#("(" 0 1 (fontified t)) . -1304) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (#("5" 0 1 (fontified t)) . -1305) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (#("0" 0 1 (fontified t)) . -1306) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) 1307 (#(")" 0 1 (fontified t)) . -1307) (undo-tree-id4511 . -1) (undo-tree-id4512 . 1) (undo-tree-id4513 . -1) 1308) nil (25384 30374 266421 804000) 0 nil])
([nil nil ((1286 . 1287)) nil (25384 30374 266409 23000) 0 nil])
([nil nil ((1296 . 1304) (#("1" 0 1 (fontified t)) . -1296) (undo-tree-id4491 . -1) (#("0" 0 1 (fontified t)) . -1297) (undo-tree-id4492 . -1) 1298 (1296 . 1298) (#("5" 0 1 (fontified t)) . -1296) (undo-tree-id4493 . -1) (#("0" 0 1 (fontified t)) . -1297) (undo-tree-id4494 . -1) (#("," 0 1 (fontified t)) . -1298) (undo-tree-id4495 . -1) 1299 (1296 . 1299) (#("1" 0 1 (fontified t)) . -1296) (undo-tree-id4496 . -1) 1297 (1293 . 1297) (#("10" 0 2 (fontified t)) . -1293) (undo-tree-id4497 . -2) 1295 (#(", " 0 2 (fontified t)) . -1295) (undo-tree-id4498 . -2) 1297 (#("100" 0 3 (fontified t)) . -1297) (undo-tree-id4499 . -3) 1300 (1297 . 1300) (1293 . 1297) (#("1" 0 1 (fontified t)) . -1293) (undo-tree-id4500 . -1) (#("0" 0 1 (fontified t)) . -1294) (undo-tree-id4501 . -1) (#("," 0 1 (fontified t)) . -1295) (undo-tree-id4502 . -1) 1296 (1293 . 1296) (#("1" 0 1 (fontified t)) . -1293) (undo-tree-id4503 . -1) (#("0" 0 1 (fontified t)) . -1294) (undo-tree-id4504 . -1) 1295 (1287 . 1295) (1286 . 1287)) nil (25384 30374 266403 855000) 0 nil])
([nil nil ((1306 . 1318)) nil (25384 30374 266386 604000) 0 nil])
([nil nil ((#("plot" 0 4 (fontified t)) . -1342) (undo-tree-id4490 . -4) 1346 (1342 . 1346) (1340 . 1342)) nil (25384 30374 266384 229000) 0 nil])
([nil nil ((1335 . 1338)) nil (25384 30374 266380 877000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1305)) nil (25384 30374 266378 502000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1303) (undo-tree-id4488 . -1) (#(" " 0 1 (fontified t)) . -1304) (undo-tree-id4489 . -1) 1305 (1303 . 1305)) nil (25384 30374 266375 709000) 0 nil])
([nil nil ((1300 . 1305)) nil (25384 30374 266370 890000) 0 nil])
([nil nil ((1366 . 1367) (1349 . 1366)) nil (25384 30374 266368 445000) 0 nil])
([nil nil ((1376 . 1389) (#("7" 0 1 (fontified t)) . -1376) (undo-tree-id4483 . -1) 1377 (1376 . 1377) (#("2" 0 1 (fontified t)) . -1376) (undo-tree-id4484 . -1) (#("5" 0 1 (fontified t)) . -1377) (undo-tree-id4485 . -1) (#("0" 0 1 (fontified t)) . -1378) (undo-tree-id4486 . -1) (#("0" 0 1 (fontified t)) . -1379) (undo-tree-id4487 . -1) 1380 (1366 . 1380)) nil (25384 30374 266364 115000) 0 nil])
([nil nil ((1124 . 1142)) nil (25384 30374 266347 74000) 0 nil])
([nil nil ((1408 . 1409)) nil (25384 30374 266340 369000) 0 nil])
([nil nil ((1311 . 1313) (#("5" 0 1 (fontified t)) . 1311) (t 25384 30374 281309 871000)) nil (25384 30486 163685 355000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1315) (undo-tree-id4529 . -1) 1316 (1315 . 1316) (#("5" 0 1 (fontified t)) . 1315)) nil (25384 30486 163682 73000) 0 nil])
([nil nil ((1315 . 1318) (#("0" 0 1 (fontified t)) . 1315) (undo-tree-id4528 . 1)) nil (25384 30486 163678 301000) 0 nil])
([nil nil ((782 . 784)) nil (25384 30486 163671 946000) 0 nil])
([nil nil ((821 . 823)) nil (25384 30486 163669 571000) 0 nil])
([nil nil ((922 . 923) (#("`" 0 1 (fontified t face font-lock-string-face)) . -922) (undo-tree-id4526 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -923) (undo-tree-id4527 . -1) 924 (921 . 924)) nil (25384 30486 163666 708000) 0 nil])
([nil nil ((958 . 960)) nil (25384 30486 163661 958000) 0 nil])
([nil nil ((1045 . 1047)) nil (25384 30486 163660 73000) 0 nil])
([nil nil ((1060 . 1062)) nil (25384 30486 163658 117000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1328) (undo-tree-id4525 . -1)) nil (25384 30486 163655 742000) 0 nil])
([nil nil ((1329 . 1330)) nil (25384 30486 163651 971000) 0 nil])
([nil nil ((1327 . 1329) (#("10w" 0 3 (fontified t)) . -1327) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . 2) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -3) 1330) nil (25384 30486 163648 688000) 0 nil])
([nil nil ((1329 . 1334)) nil (25384 30486 163631 857000) 0 nil])
([nil nil ((1344 . 1350)) nil (25384 30486 163624 803000) 0 nil])
([nil nil ((585 . 586) (#("2" 0 1 (fontified t)) . 585) (t 25384 30486 177362 514000)) nil (25384 30769 497066 708000) 0 nil])
([nil nil ((393 . 394) (#("3" 0 1 (fontified t)) . 393)) ((393 . 394) (#("2" 0 1 (fontified t)) . 393)) (25384 30770 374911 47000) 0 nil])
([nil nil ((1323 . 1325) (#("2" 0 1 (fontified t)) . -1323) (undo-tree-id4568 . -1) (#("5" 0 1 (fontified t)) . -1324) (undo-tree-id4569 . -1) 1325) nil (25384 31070 453688 390000) 0 nil])
([nil nil ((#(", 500, 1000" 0 11 (fontified t)) . 1339) (undo-tree-id4564 . -10) (undo-tree-id4565 . -10) (undo-tree-id4566 . -10) (undo-tree-id4567 . -10) 1349) nil (25384 31070 453684 129000) 0 nil])
([nil nil ((1336 . 1339) (#("250" 0 3 (fontified t)) . -1336) (undo-tree-id4559 . -3) (undo-tree-id4560 . -3) (undo-tree-id4561 . -3) (undo-tree-id4562 . -3) (undo-tree-id4563 . -3) 1339) nil (25384 31070 453678 822000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -394) (undo-tree-id4558 . -1) 395 (393 . 395) (#("2" 0 1 (fontified t)) . 393)) nil (25384 31070 453672 745000) 0 nil])
([nil nil ((1423 . 1435) (1422 . 1423)) nil (25384 31070 453669 463000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1426 . 1427) (#("
" 0 1 (fontified nil)) . -1559) (1422 . 1560)) nil (25384 31070 453666 599000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1531) (undo-tree-id4552 . -4) (undo-tree-id4553 . -4) (undo-tree-id4554 . -4) (undo-tree-id4555 . -4) (#("    " 0 4 (fontified t)) . -1500) (#("    " 0 4 (fontified t)) . -1453) (#("    " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . -1423) (undo-tree-id4556 . -4) (undo-tree-id4557 . -4) 1547) nil (25384 31070 453663 736000) 0 nil])
([nil nil ((1423 . 1429) (1422 . 1423)) nil (25384 31070 453656 961000) 0 nil])
([nil nil ((1550 . 1551)) nil (25384 31070 453654 517000) 0 nil])
([nil nil ((1564 . 1565)) nil (25384 31070 453652 631000) 0 nil])
([nil nil ((1586 . 1597) (#("L" 0 1 (fontified t)) . -1586) (undo-tree-id4542 . -1) (#(">" 0 1 (fontified t)) . -1587) (undo-tree-id4543 . -1) (#(" " 0 1 (fontified t)) . -1588) (undo-tree-id4544 . -1) 1589 (1584 . 1589) (#("." 0 1 (fontified t)) . -1584) (undo-tree-id4545 . -1) (#(" " 0 1 (fontified t)) . -1585) (undo-tree-id4546 . -1) 1586 (1570 . 1586) (#("(" 0 1 (fontified t)) . -1570) (undo-tree-id4547 . -1) (#("!" 0 1 (fontified t)) . -1571) (undo-tree-id4548 . -1) (#("9" 0 1 (fontified t)) . -1572) (undo-tree-id4549 . -1) 1573 (1571 . 1573) (#("[" 0 1 (fontified t)) . -1571) (undo-tree-id4550 . -1) 1572 (1565 . 1572) (#("p" 0 1 (fontified t)) . -1565) (undo-tree-id4551 . -1) 1566 (1565 . 1566)) nil (25384 31070 453647 812000) 0 nil])
([nil nil ((1552 . 1557)) nil (25384 31070 453632 726000) 0 nil])
([nil nil ((1569 . 1570)) nil (25384 31070 453630 282000) 0 nil])
([nil nil ((#("
vline!([minimum(C[C .> 0])/2, ])" 0 1 (fontified t) 1 33 (fontified t)) . 1570) (undo-tree-id4530 . -18) (undo-tree-id4531 . -1) (undo-tree-id4532 . -18) (undo-tree-id4533 . -18) (undo-tree-id4534 . -33) (undo-tree-id4535 . -18) (undo-tree-id4536 . 15) (undo-tree-id4537 . -19) (undo-tree-id4538 . 8) (undo-tree-id4539 . -26) (undo-tree-id4540 . -18) (undo-tree-id4541 . -18) 1588) nil (25384 31070 453627 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1303 . 1304) (#("
" 0 1 (fontified nil)) . -1336) (1303 . 1337) 1230) nil (25384 31070 453607 444000) 0 nil])
([nil nil ((1304 . 1308)) nil (25384 31070 453604 91000) 0 nil])
([nil nil ((1607 . 1608)) nil (25384 31070 453596 898000) 0 nil])
([nil nil ((213 . 219) (#("T" 0 1 (fontified t)) . -213) (undo-tree-id0 . -1) (#("o" 0 1 (fontified t)) . -214) (undo-tree-id1 . -1) 215 (207 . 215) (206 . 207) (t 25384 31070 467489 587000)) nil (25400 17573 687677 349000) 0 nil])
([nil nil ((220 . 222)) nil (25400 17573 687642 568000) 0 nil])
([nil nil ((220 . 221) (#("
" 0 1 (fontified t)) . -220) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) 221 (t 25400 17573 702069 822000)) nil (25400 18117 341681 456000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 220)) nil (25400 18117 341673 5000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -220) (undo-tree-id733 . 1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) 221) nil (25400 18117 341669 653000) 0 nil])
([nil nil ((220 . 222)) nil (25400 18117 341660 923000) 0 nil])
([nil nil ((221 . 228)) nil (25400 18117 341658 478000) 0 nil])
([nil nil ((221 . 225)) nil (25400 18117 341655 126000) 0 nil])
([nil nil ((237 . 242) (#("5" 0 1 (fontified t)) . -237) (undo-tree-id729 . -1) 238 (237 . 238) (#("1" 0 1 (fontified t)) . -237) (undo-tree-id730 . -1) 238 (231 . 238) (#("m" 0 1 (fontified t)) . -231) (undo-tree-id731 . -1) (#(" " 0 1 (fontified t)) . -232) (undo-tree-id732 . -1) 233 (231 . 233)) nil (25400 18117 341650 377000) 0 nil])
([nil nil ((245 . 254) (243 . 245)) nil (25400 18117 341618 459000) 0 nil])
([nil nil ((279 . 281) (258 . 279) (257 . 258) (#(":" 0 1 (fontified t)) . -257) (undo-tree-id718 . -1) (#("," 0 1 (fontified t)) . -258) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (#(" " 0 1 (fontified t)) . -259) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (#("1" 0 1 (fontified t)) . -260) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (#("]" 0 1 (fontified t)) . -261) (undo-tree-id725 . -1) (undo-tree-id726 . 1) (undo-tree-id727 . -1) (#("," 0 1 (fontified t)) . -262) (undo-tree-id728 . -1) 263 (254 . 263)) nil (25400 18117 341611 475000) 0 nil])
([nil nil ((317 . 319) (#("0" 0 1 (fontified t)) . -317) (undo-tree-id709 . -1) (#(" " 0 1 (fontified t)) . -318) (undo-tree-id710 . -1) 319 (317 . 319) (#(" " 0 1 (fontified t)) . -317) (undo-tree-id711 . -1) 318 (#("0
          " 0 12 (fontified t)) . -318) (undo-tree-id712 . -12) 330 (319 . 330) (311 . 319) (#("d" 0 1 (fontified t)) . -311) (undo-tree-id713 . -1) (#("i" 0 1 (fontified t)) . -312) (undo-tree-id714 . -1) (#("t" 0 1 (fontified t)) . -313) (undo-tree-id715 . -1) 314 (313 . 314) (301 . 313) (280 . 301) (#("," 0 1 (fontified t)) . -280) (undo-tree-id716 . -1) (#(" " 0 1 (fontified t)) . -281) (undo-tree-id717 . -1) 282 (280 . 282)) nil (25400 18117 341589 894000) 0 nil])
([nil nil ((245 . 253) (244 . 245)) nil (25400 18117 341567 894000) 0 nil])
([nil nil ((237 . 249) (#("1" 0 1 (fontified t)) . -237) (undo-tree-id706 . -1) (#("_" 0 1 (fontified t)) . -238) (undo-tree-id707 . -1) 239 (#("000" 0 3 (fontified t)) . -239) (undo-tree-id708 . -3) 242) nil (25400 18117 341562 656000) 0 nil])
([nil nil ((237 . 238) (#("1" 0 1 (fontified t)) . -237) (undo-tree-id701 . -1) (#("0" 0 1 (fontified t)) . -238) (undo-tree-id702 . -1) 239 (237 . 239) (#("2" 0 1 (fontified t)) . -237) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (#("5" 0 1 (fontified t)) . -238) (undo-tree-id705 . -1) 239) nil (25400 18117 341553 228000) 0 nil])
([nil nil ((245 . 247) (#("250" 0 3 (fontified t)) . -245) (undo-tree-id700 . -3) 248) nil (25400 18117 341541 774000) 0 nil])
([nil nil ((#("plotly()
scatter3d(X[1, :], X[2, :], X[3, :]; markersize = 1, markerstrokewidth = 0)
" 0 8 (fontified t) 8 9 (fontified t) 9 84 (fontified t) 84 85 (fontified t)) . 250) (undo-tree-id668 . -9) (undo-tree-id669 . -9) (undo-tree-id670 . -9) (undo-tree-id671 . -85) (undo-tree-id672 . -9) (undo-tree-id673 . -9) (undo-tree-id674 . -9) (undo-tree-id675 . -9) (undo-tree-id676 . -9) (undo-tree-id677 . -9) (undo-tree-id678 . -9) (undo-tree-id679 . -9) (undo-tree-id680 . -9) (undo-tree-id681 . -9) (undo-tree-id682 . -9) (undo-tree-id683 . -9) (undo-tree-id684 . -9) (undo-tree-id685 . -9) (undo-tree-id686 . -9) (undo-tree-id687 . -9) (undo-tree-id688 . -9) (undo-tree-id689 . -9) (undo-tree-id690 . -9) (undo-tree-id691 . -9) (undo-tree-id692 . -9) (undo-tree-id693 . -9) (undo-tree-id694 . -9) (undo-tree-id695 . -9) (undo-tree-id696 . -9) (undo-tree-id697 . -9) (undo-tree-id698 . -9) (undo-tree-id699 . -9) 259) nil (25400 18121 886985 433000) 0 nil])
([nil nil ((#("X = torus(; m = 50, n = 50)
" 0 4 (fontified t) 4 28 (fontified t)) . 221)) nil (25400 19631 948445 736000) 0 nil] [nil nil ((#("X = torus(; m = 50, n = 50)

" 0 4 (fontified t) 4 28 (fontified t) 28 29 (fontified t)) . 221) (undo-tree-id389 . -28) (undo-tree-id390 . -28) (undo-tree-id391 . 1) (undo-tree-id392 . -29) (undo-tree-id394 . -29) (undo-tree-id396 . -29) (undo-tree-id398 . -29) (undo-tree-id400 . -29) (undo-tree-id402 . -29) (undo-tree-id404 . -29) (undo-tree-id406 . -29) (undo-tree-id408 . -29) (undo-tree-id410 . -29) (undo-tree-id412 . -29) (undo-tree-id414 . -29) (undo-tree-id416 . -29) (undo-tree-id418 . -29) (undo-tree-id420 . -29) (undo-tree-id422 . -29) (undo-tree-id424 . -29) (undo-tree-id426 . -29) (undo-tree-id428 . -29) (undo-tree-id430 . -29) (undo-tree-id432 . -29) (undo-tree-id434 . -29) (undo-tree-id436 . -29) (undo-tree-id438 . -29) (undo-tree-id440 . -29) (undo-tree-id442 . -29) (undo-tree-id444 . -29) (undo-tree-id446 . -29) (undo-tree-id448 . -29) (undo-tree-id450 . -29) (undo-tree-id452 . -29) (undo-tree-id454 . -29) (undo-tree-id456 . -29) (undo-tree-id458 . -29) (undo-tree-id460 . -29) (undo-tree-id462 . -29) (undo-tree-id464 . -29) (undo-tree-id466 . -29) (undo-tree-id468 . -29) (undo-tree-id470 . -29) (undo-tree-id472 . -29) (undo-tree-id474 . -29) (undo-tree-id476 . -29) (undo-tree-id478 . -29) (undo-tree-id480 . -29) (undo-tree-id482 . -29) (undo-tree-id484 . -29) (undo-tree-id486 . -29) (undo-tree-id488 . -29) (undo-tree-id490 . -29) (undo-tree-id492 . -29) (undo-tree-id494 . -29) (undo-tree-id496 . -29) (undo-tree-id498 . -29) (undo-tree-id500 . -29) (undo-tree-id502 . -29) (undo-tree-id504 . -29) (undo-tree-id506 . -29) (undo-tree-id508 . -28) (undo-tree-id510 . -28) (undo-tree-id512 . -28) (undo-tree-id514 . -28) (undo-tree-id516 . -28) (undo-tree-id518 . -28) (undo-tree-id520 . -28) (undo-tree-id522 . -28) (undo-tree-id524 . -28) (undo-tree-id526 . -28) (undo-tree-id528 . -28) (undo-tree-id530 . -28) (undo-tree-id532 . -28) (undo-tree-id534 . -28) (undo-tree-id536 . -28) (undo-tree-id538 . -28) (undo-tree-id540 . -28) (undo-tree-id542 . -28) (undo-tree-id544 . -28) (undo-tree-id546 . -28) (undo-tree-id548 . -28) (undo-tree-id550 . -28) (undo-tree-id552 . -28) (undo-tree-id554 . -28) (undo-tree-id556 . -28) (undo-tree-id558 . -28) (undo-tree-id560 . -28) (undo-tree-id562 . -28) (undo-tree-id564 . -28) (undo-tree-id566 . -28) (undo-tree-id568 . -28) (undo-tree-id570 . -28) (undo-tree-id572 . -28) (undo-tree-id574 . -28) (undo-tree-id576 . -28) (undo-tree-id578 . -28) (undo-tree-id580 . -28) (undo-tree-id582 . -28) (undo-tree-id584 . -28) (undo-tree-id586 . -28) (undo-tree-id588 . -28) (undo-tree-id590 . -28) (undo-tree-id592 . -28) (undo-tree-id594 . -28) (undo-tree-id596 . -28) (undo-tree-id598 . -28) (undo-tree-id600 . -28) (undo-tree-id602 . -28) (undo-tree-id604 . -28) (undo-tree-id606 . -28) (undo-tree-id608 . -28) (undo-tree-id610 . -28) (undo-tree-id612 . -28) (undo-tree-id614 . -28) (undo-tree-id616 . -28) (undo-tree-id618 . -28) (undo-tree-id620 . -28) (undo-tree-id622 . -28) (undo-tree-id624 . -28) (undo-tree-id626 . -28) (undo-tree-id628 . -28) (undo-tree-id630 . -28) (undo-tree-id632 . -28) (undo-tree-id634 . -28) (undo-tree-id636 . -28) (undo-tree-id638 . -28) (undo-tree-id640 . -28) (undo-tree-id642 . -28) (undo-tree-id644 . -28) (undo-tree-id646 . -28) (undo-tree-id648 . -28) (undo-tree-id650 . -28) (undo-tree-id652 . -28) (undo-tree-id654 . -28) (undo-tree-id656 . -28) (undo-tree-id658 . -28) (undo-tree-id660 . -28) (undo-tree-id662 . -28) (undo-tree-id664 . -28) (undo-tree-id666 . -28)) ((221 . 250)) (25400 18121 450492 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 328 . 329) (#("
" 0 1 (fontified nil)) . -356) (328 . 357) 278) nil (25400 19631 948441 825000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -220) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id10 . -1) (undo-tree-id12 . -1) (undo-tree-id14 . -1) (undo-tree-id16 . -1) (undo-tree-id18 . -1) (undo-tree-id20 . -1) (undo-tree-id22 . -1) (undo-tree-id24 . -1) (undo-tree-id26 . -1) (undo-tree-id28 . -1) (undo-tree-id30 . -1) (undo-tree-id32 . -1) (undo-tree-id34 . -1) (undo-tree-id36 . -1) (undo-tree-id38 . -1) (undo-tree-id40 . -1) (undo-tree-id42 . -1) (undo-tree-id44 . -1) (undo-tree-id46 . -1) (undo-tree-id48 . -1) (undo-tree-id50 . -1) (undo-tree-id52 . -1) (undo-tree-id54 . -1) (undo-tree-id56 . -1) (undo-tree-id58 . -1) (undo-tree-id60 . -1) (undo-tree-id62 . -1) (undo-tree-id64 . -1) (undo-tree-id66 . -1) (undo-tree-id68 . -1) (undo-tree-id70 . -1) (undo-tree-id72 . -1) (undo-tree-id74 . -1) (undo-tree-id76 . -1) (undo-tree-id78 . -1) (undo-tree-id80 . -1) (undo-tree-id82 . -1) (undo-tree-id84 . -1) (undo-tree-id86 . -1) (undo-tree-id88 . -1) (undo-tree-id90 . -1) (undo-tree-id92 . -1) (undo-tree-id94 . -1) (undo-tree-id96 . -1) (undo-tree-id98 . -1) (undo-tree-id100 . -1) (undo-tree-id102 . -1) (undo-tree-id104 . -1) (undo-tree-id106 . -1) (undo-tree-id108 . -1) (undo-tree-id110 . -1) (undo-tree-id112 . -1) (undo-tree-id114 . -1) (undo-tree-id116 . -1) (undo-tree-id118 . -1) (undo-tree-id120 . -1) (undo-tree-id122 . -1) (undo-tree-id124 . -1) (undo-tree-id126 . -1) (undo-tree-id128 . -1) (undo-tree-id130 . -1) (undo-tree-id132 . -1) (undo-tree-id134 . -1) (undo-tree-id136 . -1) (undo-tree-id138 . -1) (undo-tree-id140 . -1) (undo-tree-id142 . -1) (undo-tree-id144 . -1) (undo-tree-id146 . -1) (undo-tree-id148 . -1) (undo-tree-id150 . -1) (undo-tree-id152 . -1) (undo-tree-id154 . -1) (undo-tree-id156 . -1) (undo-tree-id158 . -1) (undo-tree-id160 . -1) (undo-tree-id162 . -1) (undo-tree-id164 . -1) (undo-tree-id166 . -1) (undo-tree-id168 . -1) (undo-tree-id170 . -1) (undo-tree-id172 . -1) (undo-tree-id174 . -1) (undo-tree-id176 . -1) (undo-tree-id178 . -1) (undo-tree-id180 . -1) (undo-tree-id182 . -1) (undo-tree-id184 . -1) (undo-tree-id186 . -1) (undo-tree-id188 . -1) (undo-tree-id190 . -1) (undo-tree-id192 . -1) (undo-tree-id194 . -1) (undo-tree-id196 . -1) (undo-tree-id198 . -1) (undo-tree-id200 . -1) (undo-tree-id202 . -1) (undo-tree-id204 . -1) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (undo-tree-id214 . -1) (undo-tree-id216 . -1) (undo-tree-id218 . -1) (undo-tree-id220 . -1) (undo-tree-id222 . -1) (undo-tree-id224 . -1) (undo-tree-id226 . -1) (undo-tree-id228 . -1) (undo-tree-id230 . -1) (undo-tree-id232 . -1) (undo-tree-id234 . -1) (undo-tree-id236 . -1) (undo-tree-id238 . -1) (undo-tree-id240 . -1) (undo-tree-id242 . -1) (undo-tree-id244 . -1) (undo-tree-id246 . -1) (undo-tree-id248 . -1) (undo-tree-id250 . -1) (undo-tree-id252 . -1) (undo-tree-id254 . -1) (undo-tree-id256 . -1) (undo-tree-id258 . -1) (undo-tree-id260 . -1) (undo-tree-id262 . -1) (undo-tree-id264 . -1) (undo-tree-id266 . -1) (undo-tree-id268 . -1) (undo-tree-id270 . -1) (undo-tree-id272 . -1) (undo-tree-id274 . -1) (undo-tree-id276 . -1) (undo-tree-id278 . -1) (undo-tree-id280 . -1) (undo-tree-id282 . -1) (undo-tree-id284 . -1) (undo-tree-id286 . -1) (undo-tree-id288 . -1) (undo-tree-id290 . -1) (undo-tree-id292 . -1) (undo-tree-id294 . -1) (undo-tree-id296 . -1) (undo-tree-id298 . -1) (undo-tree-id300 . -1) (undo-tree-id302 . -1) (undo-tree-id304 . -1) (undo-tree-id306 . -1) (undo-tree-id308 . -1) (undo-tree-id310 . -1) (undo-tree-id312 . -1) (undo-tree-id314 . -1) (undo-tree-id316 . -1) (undo-tree-id318 . -1) (undo-tree-id320 . -1) (undo-tree-id322 . -1) (undo-tree-id324 . -1) (undo-tree-id326 . -1) (undo-tree-id328 . -1) (undo-tree-id330 . -1) (undo-tree-id332 . -1) (undo-tree-id334 . -1) (undo-tree-id336 . -1) (undo-tree-id338 . -1) (undo-tree-id340 . -1) (undo-tree-id342 . -1) (undo-tree-id344 . -1) (undo-tree-id346 . -1) (undo-tree-id348 . -1) (undo-tree-id350 . -1) (undo-tree-id352 . -1) (undo-tree-id354 . -1) (undo-tree-id356 . -1) (undo-tree-id358 . -1) (undo-tree-id360 . -1) (undo-tree-id362 . -1) (undo-tree-id364 . -1) (undo-tree-id366 . -1) (undo-tree-id368 . -1) (undo-tree-id370 . -1) (undo-tree-id372 . -1) (undo-tree-id374 . -1) (undo-tree-id376 . -1) (undo-tree-id378 . -1) (undo-tree-id380 . -1) (undo-tree-id382 . -1) (undo-tree-id384 . -1) (undo-tree-id386 . -1) (undo-tree-id388 . -1) 221) ((220 . 221) (t 25400 18117 355753 218000)) (25400 18121 413899 282000) 0 nil])
([nil nil ((329 . 333)) nil (25400 19631 948436 98000) 0 nil])
([nil nil ((283 . 284) (282 . 283) (246 . 248) (t 25400 18117 355753 218000)) ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 246) (#("#" 0 1 (face font-lock-comment-delimiter-face fontified nil)) . 282) (undo-tree-id740 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 283)) (25400 18121 413475 66000) 0 nil])
([nil nil ((285 . 286) (284 . 285) (248 . 250)) nil (25400 19631 948432 327000) 0 nil])
nil
([nil nil ((353 . 360) (#("N" 0 1 (fontified t)) . -353) (undo-tree-id838 . -1) 354 (353 . 354) (#("5" 0 1 (fontified t)) . -353) (undo-tree-id839 . -1) (#("0" 0 1 (fontified t)) . -354) (undo-tree-id840 . -1) 355) nil (25400 19631 948426 670000) 0 nil])
([nil nil ((353 . 359)) nil (25400 19631 948417 171000) 0 nil])
([nil nil ((366 . 367)) nil (25400 19631 948413 330000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 372)) nil (25400 19631 948409 908000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 372)) nil (25400 19631 948406 67000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 372)) nil (25400 19631 948402 225000) 0 nil])
([nil nil ((373 . 387) (#("sr" 0 2 (fontified t)) . -373) (undo-tree-id837 . -2) 375 (372 . 375)) nil (25400 19631 948398 454000) 0 nil])
([nil nil ((353 . 357)) nil (25400 19631 948393 286000) 0 nil])
([nil nil ((371 . 372)) nil (25400 19631 948391 330000) 0 nil])
([nil nil ((378 . 382)) nil (25400 19631 948389 25000) 0 nil])
([nil nil ((397 . 398)) nil (25400 19631 948385 184000) 0 nil])
([nil nil ((1439 . 1441)) nil (25400 19631 948382 809000) 0 nil])
([nil nil ((1446 . 1452) (1439 . 1446)) nil (25400 19631 948380 365000) 0 nil])
([nil nil ((151 . 161)) nil (25400 19631 948376 524000) 0 nil])
([nil nil ((#("get_plot(100)
" 0 13 (fontified t) 13 14 (fontified t)) . 1449)) nil (25400 19631 948372 682000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1448) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) 1449) nil (25400 19631 948367 933000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 232) (undo-tree-id830 . -1)) nil (25400 19631 948355 641000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 231) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1)) nil (25400 19631 948349 844000) 0 nil])
([nil nil ((1507 . 1509)) nil (25400 19631 948343 140000) 0 nil])
([nil nil ((1507 . 1508)) nil (25400 19631 948340 765000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1507) (undo-tree-id824 . -1) (#("^" 0 1 (fontified t)) . -1508) (undo-tree-id825 . -1) (#("2" 0 1 (fontified t)) . -1509) (undo-tree-id826 . -1) 1510) nil (25400 19631 948335 527000) 0 nil])
([nil nil ((1505 . 1508)) nil (25400 19631 948326 168000) 0 nil])
([nil nil ((518 . 528) (#("N" 0 1 (fontified t)) . 518)) nil (25400 19631 948321 978000) 0 nil])
([nil nil ((530 . 540) (#("N" 0 1 (fontified t)) . 530)) nil (25400 19631 948318 625000) 0 nil])
([nil nil ((1523 . 1524) (#("1" 0 1 (fontified t)) . -1523) (undo-tree-id822 . -1) (#("0" 0 1 (fontified t)) . -1524) (undo-tree-id823 . -1) 1525) nil (25400 19631 948313 317000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1721 . 1722) (nil fontified nil 1721 . 1722) (1721 . 1722)) nil (25400 19631 948286 917000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1721 . 1722) (nil fontified nil 1721 . 1722) (1721 . 1722)) nil (25400 19631 948282 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1721 . 1722) (nil fontified nil 1721 . 1722) (1721 . 1722)) nil (25400 19631 948277 698000) 0 nil])
([nil nil ((#("
NNN" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t) 2 3 (rear-nonsticky t fontified t) 3 4 (rear-nonsticky t fontified t)) . 1720) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) 1721) nil (25400 19631 948271 971000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1523) (undo-tree-id808 . -1) (#("*" 0 1 (fontified t)) . -1524) (undo-tree-id809 . -1) 1525) nil (25400 19631 948251 508000) 0 nil])
([nil nil ((1488 . 1490)) nil (25400 19631 948244 803000) 0 nil])
([nil nil ((#("    X = torus(; m = Int(floor(sqrt(N))), n = Int(floor(sqrt(N))))
" 0 4 (fontified t) 4 8 (fontified t) 8 65 (fontified t) 65 66 (fontified t)) . 341) (undo-tree-id741 . -17) (undo-tree-id742 . -17) (undo-tree-id743 . -17) (undo-tree-id744 . -17) (undo-tree-id745 . -34) (undo-tree-id746 . -29) (undo-tree-id747 . -64) (undo-tree-id748 . -35) (undo-tree-id749 . -35) (undo-tree-id750 . -60) (undo-tree-id751 . -60) (undo-tree-id752 . -17) (undo-tree-id753 . -17) (undo-tree-id754 . -17) (undo-tree-id755 . -17) (undo-tree-id756 . -17) (undo-tree-id757 . -17) (undo-tree-id758 . -17) (undo-tree-id759 . -17) (undo-tree-id760 . -17) (undo-tree-id761 . -17) (undo-tree-id762 . -17) (undo-tree-id763 . -17) (undo-tree-id764 . -17) (undo-tree-id765 . -17) (undo-tree-id766 . -17) (undo-tree-id767 . -17) (undo-tree-id768 . -17) (undo-tree-id769 . -17) (undo-tree-id770 . -17) (undo-tree-id771 . -17) (undo-tree-id772 . -17) (undo-tree-id773 . -17) (undo-tree-id774 . -17) (undo-tree-id775 . -17) (undo-tree-id776 . -17) (undo-tree-id777 . -66) (undo-tree-id778 . -17) (undo-tree-id779 . -17) (undo-tree-id780 . -17) (undo-tree-id781 . -17) (undo-tree-id782 . -17) (undo-tree-id783 . -17) (undo-tree-id784 . -17) (undo-tree-id785 . -17) (undo-tree-id786 . -17) (undo-tree-id787 . -17) (undo-tree-id788 . -17) (undo-tree-id789 . -17) (undo-tree-id790 . -17) (undo-tree-id791 . -17) (undo-tree-id792 . -17) (undo-tree-id793 . -17) (undo-tree-id794 . -17) (undo-tree-id795 . -17) (undo-tree-id796 . -17) (undo-tree-id797 . -17) (undo-tree-id798 . -17) (undo-tree-id799 . -17) (undo-tree-id800 . -17) (undo-tree-id801 . -17) (undo-tree-id802 . -17) (undo-tree-id803 . -17) (undo-tree-id804 . -17) (undo-tree-id805 . -17) (undo-tree-id806 . -17) (undo-tree-id807 . -17) 358) nil (25400 19631 948235 235000) 0 nil])
([nil nil ((1654 . 1655)) nil (25400 19631 948118 390000) 0 nil])
([nil nil ((#("using Eirene
" 0 5 (fontified t face font-lock-keyword-face) 5 13 (fontified t)) . 217) (undo-tree-id0 . -13) (undo-tree-id1 . -13) (undo-tree-id2 . -13) (undo-tree-id3 . -13) (undo-tree-id4 . -13) (undo-tree-id5 . -13) (undo-tree-id6 . -13) (undo-tree-id7 . -13) (undo-tree-id8 . -13) (undo-tree-id9 . -13) (undo-tree-id10 . -13) (undo-tree-id11 . -13) (undo-tree-id12 . -13) (undo-tree-id13 . -13) (undo-tree-id14 . -13) (undo-tree-id15 . -13) (undo-tree-id16 . -13) (undo-tree-id17 . -13) (undo-tree-id18 . -13) (undo-tree-id19 . -13) (undo-tree-id20 . -13) (undo-tree-id21 . -13) (undo-tree-id22 . -13) (undo-tree-id23 . -13) (undo-tree-id24 . -13) (undo-tree-id25 . -13) (undo-tree-id26 . -13) (undo-tree-id27 . -13) (undo-tree-id28 . -13) (undo-tree-id29 . -13) (undo-tree-id30 . -13) (undo-tree-id31 . -13) (undo-tree-id32 . -13) (t 25400 19631 967441 868000)) nil (25450 10739 364736 278000) 0 nil])
([nil nil ((332 . 334) (327 . 332) (t 25450 10739 385968 937000)) nil (25450 16323 574180 602000) 0 nil])
([nil nil ((#("    X 
" 0 7 (fontified t)) . 328) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . 1) (undo-tree-id65 . -5) (undo-tree-id66 . -5) 333) nil (25450 16323 574174 456000) 0 nil])
([nil nil ((217 . 218)) nil (25450 16323 574158 602000) 0 nil])
([nil nil ((222 . 223) (#("1" 0 1 (fontified t)) . -222) (undo-tree-id59 . -1) 223 (218 . 223) (217 . 218)) nil (25450 16323 574153 783000) 0 nil])
([nil nil ((359 . 364) (354 . 359) (343 . 354) (#("n" 0 1 (fontified t)) . -343) (undo-tree-id58 . -1) 344 (339 . 344) (334 . 339)) nil (25450 16323 574145 332000) 0 nil])
([nil nil ((230 . 236) (#("L" 0 1 (fontified t)) . -230) (undo-tree-id55 . -1) (#("g" 0 1 (fontified t)) . -231) (undo-tree-id56 . -1) (#("e" 0 1 (fontified t)) . -232) (undo-tree-id57 . -1) 233 (217 . 233) (216 . 217)) nil (25450 16323 574134 297000) 0 nil])
([nil nil ((381 . 382)) nil (25450 16323 575398 564000) 0 nil])
([nil nil ((410 . 418) (#("1" 0 1 (fontified nil)) . 410) (403 . 411) (#("x" 0 1 (fontified nil)) . 403) (389 . 404) (#("x -> norm(" 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified nil) 5 9 (fontified nil) 9 10 (fontified nil)) . 389) (undo-tree-id89 . -1) (undo-tree-id90 . -2) (undo-tree-id91 . -5) (undo-tree-id92 . -9) (381 . 399) (#("=" 0 1 (fontified nil)) . 381) (381 . 382) (#("./= " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 381) (undo-tree-id93 . -4) (undo-tree-id94 . -3) (undo-tree-id95 . -1) (undo-tree-id96 . -2) (undo-tree-id97 . -3) (undo-tree-id98 . -4) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3)) ((381 . 385) (#("=" 0 1 (fontified nil)) . 381) (381 . 382) (#("./= map(x -> norm(" 0 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 13 (fontified nil) 13 17 (fontified nil) 17 18 (fontified nil)) . 381) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -9) (undo-tree-id75 . -10) (undo-tree-id76 . -13) (undo-tree-id77 . -17) (389 . 399) (#("norm, ea" 0 8 (fontified nil)) . 389) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (#("chrow(x" 0 6 (fontified nil) 6 7 (fontified nil)) . 397) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (403 . 404) (#("X))[:, 1" 0 7 (fontified nil) 7 8 (fontified nil)) . 403) (undo-tree-id87 . -7) (undo-tree-id88 . -7) (410 . 411) (#("newaxis]" 0 8 (fontified t)) . 410)) (25450 16324 274786 126000) 0 nil])
([nil nil ((#("newaxis" 0 7 (fontified t)) . -410) (undo-tree-id177 . -7) (undo-tree-id178 . -7) 417) nil (25450 16900 650412 451000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -406) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#(":" 0 1 (fontified t)) . -407) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("," 0 1 (fontified t)) . -408) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#(" " 0 1 (fontified t)) . -409) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("]" 0 1 (fontified t)) . -410) (undo-tree-id173 . -1) (undo-tree-id174 . 1) (undo-tree-id175 . 1) (undo-tree-id176 . -1) 411) nil (25450 16900 650401 137000) 0 nil])
([nil nil ((385 . 393)) nil (25450 16900 650369 918000) 0 nil])
([nil nil ((414 . 421)) nil (25450 16900 650366 565000) 0 nil])
([nil nil ((1505 . 1507)) nil (25450 16900 650362 654000) 0 nil])
([nil nil ((1514 . 1519) (#("l" 0 1 (fontified t)) . -1514) (undo-tree-id160 . -1) (#("t" 0 1 (fontified t)) . -1515) (undo-tree-id161 . -1) 1516 (1507 . 1516) (1506 . 1507)) nil (25450 16900 650357 346000) 0 nil])
([nil nil ((142 . 151) (#("Distnaces" 0 9 (fontified t)) . -142) (undo-tree-id159 . -9) 151 (136 . 151) (135 . 136)) nil (25450 16900 650345 962000) 0 nil])
([nil nil ((#("get_plot(10)
" 0 12 (fontified t) 12 13 (fontified t)) . 1523) (undo-tree-id158 . -13)) nil (25450 16900 650337 511000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1522) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 1523) nil (25450 16900 650329 270000) 0 nil])
([nil nil ((1522 . 1524)) nil (25450 16900 650310 273000) 0 nil])
([nil nil ((1523 . 1537)) nil (25450 16900 650306 13000) 0 nil])
([nil nil ((1532 . 1538) (#("1000" 0 4 (fontified t)) . -1532) (undo-tree-id151 . -4) 1536) nil (25450 16900 650300 216000) 0 nil])
([nil nil ((442 . 455) (437 . 442)) nil (25450 16900 650280 172000) 0 nil])
([nil nil ((630 . 632)) nil (25450 16900 650269 207000) 0 nil])
([nil nil ((390 . 391) (t 25450 16900 665923 502000)) nil (25450 17177 193821 76000) 0 nil])
([nil nil ((385 . 390) (#("N" 0 1 (fontified t)) . -385) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("," 0 1 (fontified t)) . -386) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#(" " 0 1 (fontified t)) . -387) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#("d" 0 1 (fontified t)) . -388) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#(")" 0 1 (fontified t)) . -389) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . 1) (undo-tree-id387 . -1) 390 (#("'" 0 1 (fontified t)) . 390)) nil (25450 17177 193813 324000) 0 nil])
([nil nil ((423 . 426) (#("r" 0 1 (fontified t)) . -423) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("o" 0 1 (fontified t)) . -424) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("w" 0 1 (fontified t)) . -425) (undo-tree-id374 . -1) (undo-tree-id375 . -1) 426) nil (25450 17177 193784 200000) 0 nil])
([nil nil ((432 . 433) (#(":" 0 1 (fontified t)) . 432)) nil (25450 17177 193768 486000) 0 nil])
([nil nil ((435 . 436) (#("1" 0 1 (fontified t)) . 435) (undo-tree-id369 . -1)) nil (25450 17177 193763 806000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1553)) nil (25450 17177 193757 591000) 0 nil])
([nil nil ((#("get_plot(1_000)
" 0 15 (fontified t) 15 16 (fontified t)) . 1543) (undo-tree-id366 . 1) (undo-tree-id367 . -16) (undo-tree-id368 . -16)) nil (25450 17177 193751 794000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1542) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 1543) nil (25450 17177 193714 568000) 0 nil])
([nil nil ((966 . 967) (t 25450 17177 211072 642000)) nil (25450 18152 700114 975000) 0 nil])
([nil nil ((967 . 968) (#("1" 0 1 (fontified t)) . 967) (undo-tree-id465 . 1)) nil (25450 18152 700110 226000) 0 nil])
([nil nil ((1005 . 1007) (#("1" 0 1 (fontified t)) . 1005)) nil (25450 18152 700103 102000) 0 nil])
([nil nil ((1509 . 1510) (1504 . 1509)) nil (25450 18722 20995 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1560 . 1561) (1508 . 1561) (#(" " 0 1 (fontified t) 1 2 (fontified t)) . 1508) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -2) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -2) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1)) ((1508 . 1510) (#(" " 0 1 (fontified nil)) . 1508) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (#("hline!(plt, [log10.(Cthresh), ]; label = \"u_thresh\")" 0 41 (fontified nil) 41 51 (fontified nil face font-lock-string-face) 51 52 (rear-nonsticky nil fontified nil)) . 1509) (undo-tree-id1422 . 52) (undo-tree-id1423 . 52) (undo-tree-id1424 . -51) (nil rear-nonsticky t 1560 . 1561)) (25450 18723 511328 787000) 0 nil])
([nil nil ((#("    vline!([minimum(C[C .> 0])/2, ])
" 0 37 (fontified t)) . 1468) (undo-tree-id1533 . -35) (undo-tree-id1534 . -35) (undo-tree-id1535 . -35) (undo-tree-id1536 . -35) (undo-tree-id1537 . -35) (undo-tree-id1538 . -35) (undo-tree-id1539 . -35) (undo-tree-id1540 . -35) (undo-tree-id1541 . -35) (undo-tree-id1542 . -35) (undo-tree-id1543 . -35) (undo-tree-id1544 . -35) (undo-tree-id1545 . -35) (undo-tree-id1546 . -35) (undo-tree-id1547 . -35) (undo-tree-id1548 . -35) (undo-tree-id1549 . -35) (undo-tree-id1550 . -35) (undo-tree-id1551 . -35) (undo-tree-id1552 . -35) (undo-tree-id1553 . -35) (undo-tree-id1554 . -35) (undo-tree-id1555 . -35) (undo-tree-id1556 . -35) (undo-tree-id1557 . -35) (undo-tree-id1558 . -35) (undo-tree-id1559 . -37) (undo-tree-id1560 . -37)) ((1468 . 1505)) (25450 18723 716164 618000) 0 nil])
([nil nil ((nil rear-nonsticky nil 541 . 542) (507 . 542)) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 507) (undo-tree-id879 . -5) (undo-tree-id880 . -5) (undo-tree-id881 . -5) (undo-tree-id882 . -5) (undo-tree-id883 . -5) (undo-tree-id884 . -5) (undo-tree-id885 . -5) (undo-tree-id886 . -5) (undo-tree-id887 . -5) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (undo-tree-id890 . -5) (undo-tree-id891 . -5) (undo-tree-id892 . -5) (undo-tree-id893 . -5) (undo-tree-id894 . -5) (undo-tree-id895 . -5) (undo-tree-id896 . -5) (undo-tree-id897 . -5) (undo-tree-id898 . -5) (undo-tree-id899 . -5) (undo-tree-id900 . -5) (undo-tree-id901 . -5) (undo-tree-id902 . -5) (undo-tree-id903 . -5) (undo-tree-id904 . -5) (undo-tree-id905 . -5) (undo-tree-id906 . -5) (undo-tree-id907 . -5) (undo-tree-id908 . -5) (undo-tree-id909 . -5) (undo-tree-id910 . -5) (undo-tree-id911 . -5) (undo-tree-id912 . -5) (undo-tree-id913 . -5) (undo-tree-id914 . -5) (undo-tree-id915 . -5) (undo-tree-id916 . -5) (undo-tree-id917 . -5) (undo-tree-id918 . -5) (undo-tree-id919 . -5) (undo-tree-id920 . -5) (undo-tree-id921 . -5) (undo-tree-id922 . -5) (undo-tree-id923 . -5) (undo-tree-id924 . -5) (undo-tree-id925 . -5) (undo-tree-id926 . -5) (undo-tree-id927 . -5) (undo-tree-id928 . -5) (undo-tree-id929 . -5) (undo-tree-id930 . -5) (undo-tree-id931 . -5) (undo-tree-id932 . -5) (undo-tree-id933 . -5) (undo-tree-id934 . -5) (undo-tree-id935 . -5) (undo-tree-id936 . -5) (undo-tree-id937 . -5) (undo-tree-id938 . -5) (undo-tree-id939 . -5) (undo-tree-id940 . -5) (undo-tree-id941 . -5) (undo-tree-id942 . -5) (undo-tree-id943 . -5) (undo-tree-id944 . -5) (undo-tree-id945 . -5) (undo-tree-id946 . -5) (undo-tree-id947 . -5) (undo-tree-id948 . -5) (undo-tree-id949 . -5) (undo-tree-id950 . -5) (undo-tree-id951 . -5) (undo-tree-id952 . -5) (undo-tree-id953 . -5) (undo-tree-id954 . -5) (undo-tree-id955 . -5) (undo-tree-id956 . -5) (undo-tree-id957 . -5) (undo-tree-id958 . -5) (undo-tree-id959 . -5) (undo-tree-id960 . -5) (undo-tree-id961 . -5) (undo-tree-id962 . -5) (undo-tree-id963 . -5) (undo-tree-id964 . -5) (undo-tree-id965 . -5) (undo-tree-id966 . -5) (undo-tree-id967 . -5) (undo-tree-id968 . -5) (undo-tree-id969 . -5) (undo-tree-id970 . -5) (undo-tree-id971 . -5) (undo-tree-id972 . -5) (undo-tree-id973 . -5) (undo-tree-id974 . -5) (undo-tree-id975 . -5) (undo-tree-id976 . -5) (undo-tree-id977 . -5) (undo-tree-id978 . -5) (undo-tree-id979 . -5) (undo-tree-id980 . -5) (undo-tree-id981 . -5) (undo-tree-id982 . -5) (undo-tree-id983 . -5) (undo-tree-id984 . -5) (undo-tree-id985 . -5) (undo-tree-id986 . -5) (undo-tree-id987 . -5) (undo-tree-id988 . -5) (undo-tree-id989 . -5) (undo-tree-id990 . -5) (undo-tree-id991 . -5) (undo-tree-id992 . -5) (undo-tree-id993 . -5) (undo-tree-id994 . -5) (undo-tree-id995 . -5) (undo-tree-id996 . -5) (undo-tree-id997 . -5) (undo-tree-id998 . -5) (undo-tree-id999 . -5) (undo-tree-id1000 . -5) (undo-tree-id1001 . -5) (undo-tree-id1002 . -5) (undo-tree-id1003 . -5) (undo-tree-id1004 . -5) (undo-tree-id1005 . -5) (undo-tree-id1006 . -5) (undo-tree-id1007 . -5) (undo-tree-id1008 . -5) (undo-tree-id1009 . -5) (undo-tree-id1010 . -5) (undo-tree-id1011 . -5) (undo-tree-id1012 . -5) (undo-tree-id1013 . -5) (undo-tree-id1014 . -5) (undo-tree-id1015 . -5) (undo-tree-id1016 . -5) (undo-tree-id1017 . -5) (undo-tree-id1018 . -5) (undo-tree-id1019 . -5) (undo-tree-id1020 . -5) (undo-tree-id1021 . -5) (undo-tree-id1022 . -5) (undo-tree-id1023 . -5) (undo-tree-id1024 . -5) (undo-tree-id1025 . -5) (undo-tree-id1026 . -5) (undo-tree-id1027 . -5) (undo-tree-id1028 . -5) (undo-tree-id1029 . -5) (undo-tree-id1030 . -5) (undo-tree-id1031 . -5) (undo-tree-id1032 . -5) (undo-tree-id1033 . -5) (undo-tree-id1034 . -5) (undo-tree-id1035 . -5) (undo-tree-id1036 . -5) (undo-tree-id1037 . -5) (undo-tree-id1038 . -5) (undo-tree-id1039 . -5) (undo-tree-id1040 . -5) (undo-tree-id1041 . -5) (undo-tree-id1042 . -5) (undo-tree-id1043 . -5) (undo-tree-id1044 . -5) (undo-tree-id1045 . -5) (undo-tree-id1046 . -5) (undo-tree-id1047 . -5) (undo-tree-id1048 . -5) (undo-tree-id1049 . -5) (undo-tree-id1050 . -5) (undo-tree-id1051 . -5) (undo-tree-id1052 . -5) (undo-tree-id1053 . -5) (undo-tree-id1054 . -5) (undo-tree-id1055 . -5) (undo-tree-id1056 . -5) (undo-tree-id1057 . -5) (undo-tree-id1058 . -5) (undo-tree-id1059 . -5) (undo-tree-id1060 . -5) (undo-tree-id1061 . -5) (undo-tree-id1062 . -5) (undo-tree-id1063 . -5) (undo-tree-id1064 . -5) (undo-tree-id1065 . -5) (undo-tree-id1066 . -5) (undo-tree-id1067 . -5) (undo-tree-id1068 . -5) (undo-tree-id1069 . -5) (undo-tree-id1070 . -5) (undo-tree-id1071 . -5) (undo-tree-id1072 . -5) (undo-tree-id1073 . -5) (undo-tree-id1074 . -5) (undo-tree-id1075 . -5) (undo-tree-id1076 . -5) (undo-tree-id1077 . -5) (undo-tree-id1078 . -5) (undo-tree-id1079 . -5) (undo-tree-id1080 . -5) (undo-tree-id1081 . -5) (undo-tree-id1082 . -5) (undo-tree-id1083 . -5) (undo-tree-id1084 . -5) (undo-tree-id1085 . -5) (undo-tree-id1086 . -5) (undo-tree-id1087 . -5) (undo-tree-id1088 . -5) (undo-tree-id1089 . -5) (undo-tree-id1090 . -5) (undo-tree-id1091 . -5) (undo-tree-id1092 . -5) (undo-tree-id1093 . -5) (undo-tree-id1094 . -5) (undo-tree-id1095 . -5) (undo-tree-id1096 . -5) (undo-tree-id1097 . -5) (undo-tree-id1098 . -5) (undo-tree-id1099 . -5) (undo-tree-id1100 . -5) (undo-tree-id1101 . -5) (undo-tree-id1102 . -5) (undo-tree-id1103 . -5) (undo-tree-id1104 . -5) (undo-tree-id1105 . -5) (undo-tree-id1106 . -5) (undo-tree-id1107 . -5) (undo-tree-id1108 . -5) (undo-tree-id1109 . -5) (undo-tree-id1110 . -5) (undo-tree-id1111 . -5) (undo-tree-id1112 . -5) (undo-tree-id1113 . -5) (undo-tree-id1114 . -5) (undo-tree-id1115 . -5) (undo-tree-id1116 . -5) (undo-tree-id1117 . -5) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -5) (undo-tree-id1149 . -5) (#("Cthresh = minimum(C[C .> 0])/2" 0 10 (fontified nil) 10 17 (fontified nil) 17 29 (fontified nil) 29 30 (rear-nonsticky nil fontified nil)) . 512) (undo-tree-id1150 . -30) (undo-tree-id1151 . -13) (undo-tree-id1152 . -13) (undo-tree-id1153 . -13) (undo-tree-id1154 . -13) (undo-tree-id1155 . -13) (undo-tree-id1156 . -13) (undo-tree-id1157 . -13) (undo-tree-id1158 . -13) (undo-tree-id1159 . -13) (undo-tree-id1160 . -13) (undo-tree-id1161 . -13) (undo-tree-id1162 . -13) (undo-tree-id1163 . -13) (undo-tree-id1164 . -13) (undo-tree-id1165 . -13) (undo-tree-id1166 . -13) (undo-tree-id1167 . -13) (undo-tree-id1168 . -13) (undo-tree-id1169 . -13) (undo-tree-id1170 . -13) (undo-tree-id1171 . -13) (undo-tree-id1172 . -13) (undo-tree-id1173 . -13) (undo-tree-id1174 . -13) (undo-tree-id1175 . -13) (undo-tree-id1176 . -13) (undo-tree-id1177 . -13) (undo-tree-id1178 . -13) (undo-tree-id1179 . -13) (undo-tree-id1180 . -13) (undo-tree-id1181 . -13) (undo-tree-id1182 . -13) (undo-tree-id1183 . -13) (undo-tree-id1184 . -13) (undo-tree-id1185 . -13) (undo-tree-id1186 . -13) (undo-tree-id1187 . -13) (undo-tree-id1188 . -13) (undo-tree-id1189 . -13) (undo-tree-id1190 . -13) (undo-tree-id1191 . -13) (undo-tree-id1192 . -13) (undo-tree-id1193 . -13) (undo-tree-id1194 . -13) (undo-tree-id1195 . -13) (undo-tree-id1196 . -13) (undo-tree-id1197 . -13) (undo-tree-id1198 . -13) (undo-tree-id1199 . -13) (undo-tree-id1200 . -13) (undo-tree-id1201 . -13) (undo-tree-id1202 . -13) (undo-tree-id1203 . -13) (undo-tree-id1204 . -13) (undo-tree-id1205 . -13) (undo-tree-id1206 . -13) (undo-tree-id1207 . -13) (undo-tree-id1208 . -13) (undo-tree-id1209 . -13) (undo-tree-id1210 . -13) (undo-tree-id1211 . -13) (undo-tree-id1212 . -13) (undo-tree-id1213 . -13) (undo-tree-id1214 . -13) (undo-tree-id1215 . -13) (undo-tree-id1216 . -13) (undo-tree-id1217 . -13) (undo-tree-id1218 . -13) (undo-tree-id1219 . -13) (undo-tree-id1220 . -13) (undo-tree-id1221 . -13) (undo-tree-id1222 . -13) (undo-tree-id1223 . -13) (undo-tree-id1224 . -13) (undo-tree-id1225 . -13) (undo-tree-id1226 . -13) (undo-tree-id1227 . -13) (undo-tree-id1228 . -13) (undo-tree-id1229 . -13) (undo-tree-id1230 . -13) (undo-tree-id1231 . -13) (undo-tree-id1232 . -13) (undo-tree-id1233 . -13) (undo-tree-id1234 . -13) (undo-tree-id1235 . -13) (undo-tree-id1236 . -13) (undo-tree-id1237 . -13) (undo-tree-id1238 . -13) (undo-tree-id1239 . -13) (undo-tree-id1240 . -13) (undo-tree-id1241 . -13) (undo-tree-id1242 . -13) (undo-tree-id1243 . -13) (undo-tree-id1244 . -13) (undo-tree-id1245 . -13) (undo-tree-id1246 . -13) (undo-tree-id1247 . -13) (undo-tree-id1248 . -13) (undo-tree-id1249 . -13) (undo-tree-id1250 . -13) (undo-tree-id1251 . -13) (undo-tree-id1252 . -13) (undo-tree-id1253 . -13) (undo-tree-id1254 . -13) (undo-tree-id1255 . -13) (undo-tree-id1256 . -13) (undo-tree-id1257 . -13) (undo-tree-id1258 . -13) (undo-tree-id1259 . -13) (undo-tree-id1260 . -13) (undo-tree-id1261 . -13) (undo-tree-id1262 . -13) (undo-tree-id1263 . -13) (undo-tree-id1264 . -13) (undo-tree-id1265 . -13) (undo-tree-id1266 . -13) (undo-tree-id1267 . -13) (undo-tree-id1268 . -13) (undo-tree-id1269 . -13) (undo-tree-id1270 . -13) (undo-tree-id1271 . -13) (undo-tree-id1272 . -13) (undo-tree-id1273 . -13) (undo-tree-id1274 . -13) (undo-tree-id1275 . -13) (undo-tree-id1276 . -13) (undo-tree-id1277 . -13) (undo-tree-id1278 . -13) (undo-tree-id1279 . -13) (undo-tree-id1280 . -13) (undo-tree-id1281 . -13) (undo-tree-id1282 . -13) (undo-tree-id1283 . -13) (undo-tree-id1284 . -13) (undo-tree-id1285 . -13) (undo-tree-id1286 . -13) (undo-tree-id1287 . -13) (undo-tree-id1288 . -13) (undo-tree-id1289 . -13) (undo-tree-id1290 . -13) (undo-tree-id1291 . -13) (undo-tree-id1292 . -13) (undo-tree-id1293 . -13) (undo-tree-id1294 . -13) (undo-tree-id1295 . -13) (undo-tree-id1296 . -13) (undo-tree-id1297 . -13) (undo-tree-id1298 . -13) (undo-tree-id1299 . -13) (undo-tree-id1300 . -13) (undo-tree-id1301 . -13) (undo-tree-id1302 . -13) (undo-tree-id1303 . -13) (undo-tree-id1304 . -13) (undo-tree-id1305 . -13) (undo-tree-id1306 . -13) (undo-tree-id1307 . -13) (undo-tree-id1308 . -13) (undo-tree-id1309 . -13) (undo-tree-id1310 . -13) (undo-tree-id1311 . -10) (undo-tree-id1312 . 13) (undo-tree-id1313 . -10) (undo-tree-id1314 . -10) (undo-tree-id1315 . -10) (undo-tree-id1316 . -10) (undo-tree-id1317 . -10) (undo-tree-id1318 . -10) (undo-tree-id1319 . -10) (undo-tree-id1320 . -10) (undo-tree-id1321 . -10) (undo-tree-id1322 . -10) (undo-tree-id1323 . -10) (undo-tree-id1324 . -10) (undo-tree-id1325 . -10) (undo-tree-id1326 . -10) (undo-tree-id1327 . -10) (undo-tree-id1328 . -10) (undo-tree-id1329 . -10) (undo-tree-id1330 . -10) (undo-tree-id1331 . -10) (undo-tree-id1332 . -10) (undo-tree-id1333 . -10) (undo-tree-id1334 . -10) (undo-tree-id1335 . -10) (undo-tree-id1336 . -10) (undo-tree-id1337 . -10) (undo-tree-id1338 . -10) (undo-tree-id1339 . 13) (undo-tree-id1340 . -13) (undo-tree-id1341 . -13) (undo-tree-id1342 . -13) (undo-tree-id1343 . -13) (undo-tree-id1344 . -13) (undo-tree-id1345 . -13) (undo-tree-id1346 . -13) (undo-tree-id1347 . -13) (undo-tree-id1348 . -13) (undo-tree-id1349 . -13) (undo-tree-id1350 . -13) (undo-tree-id1351 . -13) (undo-tree-id1352 . -13) (undo-tree-id1353 . -13) (undo-tree-id1354 . -13) (undo-tree-id1355 . -13) (undo-tree-id1356 . -13) (undo-tree-id1357 . -13) (undo-tree-id1358 . -13) (undo-tree-id1359 . -13) (undo-tree-id1360 . -13) (undo-tree-id1361 . -13) (undo-tree-id1362 . -13) (undo-tree-id1363 . -13) (undo-tree-id1364 . -13) (undo-tree-id1365 . -13) (undo-tree-id1366 . -13) (undo-tree-id1367 . -13) (undo-tree-id1368 . -13) (undo-tree-id1369 . -13) (undo-tree-id1370 . -13) (undo-tree-id1371 . -13) (undo-tree-id1372 . -13) (undo-tree-id1373 . -13) (undo-tree-id1374 . -13) (undo-tree-id1375 . -13) (undo-tree-id1376 . -13) (undo-tree-id1377 . -13) (undo-tree-id1378 . -13) (undo-tree-id1379 . -13) (undo-tree-id1380 . -13) (undo-tree-id1381 . -13) (undo-tree-id1382 . -13) (undo-tree-id1383 . -13) (undo-tree-id1384 . -13) (undo-tree-id1385 . -13) (undo-tree-id1386 . -13) (undo-tree-id1387 . -13) (undo-tree-id1388 . -13) (undo-tree-id1389 . -13) (undo-tree-id1390 . -13) (undo-tree-id1391 . -29) (nil rear-nonsticky t 541 . 542)) (25450 18723 952042 525000) 0 nil])
([nil nil ((495 . 497)) ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 495) (t 25450 18155 389038 277000)) (25450 18724 335742 237000) 0 nil] [nil nil ((#("    C /= mean(C)
" 0 17 (fontified t)) . 491) (undo-tree-id388 . -15) (undo-tree-id389 . -15) (undo-tree-id390 . -15) (undo-tree-id391 . -15) (undo-tree-id392 . -15) (undo-tree-id393 . -15) (undo-tree-id394 . -15) (undo-tree-id395 . -15) (undo-tree-id396 . -15) (undo-tree-id397 . -15) (undo-tree-id398 . -15) (undo-tree-id399 . -15) (undo-tree-id400 . -15) (undo-tree-id401 . -15) (undo-tree-id402 . -15) (undo-tree-id403 . -15) (undo-tree-id404 . -15) (undo-tree-id405 . -15) (undo-tree-id406 . -15) (undo-tree-id407 . -15) (undo-tree-id408 . -15) (undo-tree-id409 . -15) (undo-tree-id410 . -15) (undo-tree-id411 . -15) (undo-tree-id412 . -15) (undo-tree-id413 . -15) (undo-tree-id414 . -15) (undo-tree-id415 . -15) (undo-tree-id416 . -15) (undo-tree-id417 . -15) (undo-tree-id418 . 2) (undo-tree-id419 . -16) (undo-tree-id420 . 4) (undo-tree-id421 . -14) (undo-tree-id422 . -17) (undo-tree-id423 . -15) (undo-tree-id424 . -15) (undo-tree-id425 . -15) (undo-tree-id426 . -15) (undo-tree-id427 . -15) (undo-tree-id428 . -15) (undo-tree-id429 . -15) (undo-tree-id430 . -15) (undo-tree-id431 . -15) (undo-tree-id432 . -15) (undo-tree-id433 . -15) (undo-tree-id434 . -15) (undo-tree-id435 . -15) (undo-tree-id436 . -15) (undo-tree-id437 . -15) (undo-tree-id438 . -15) (undo-tree-id439 . -15) (undo-tree-id440 . -15) (undo-tree-id441 . -15) (undo-tree-id442 . -15) (undo-tree-id443 . -15) (undo-tree-id444 . -15) (undo-tree-id445 . -15) (undo-tree-id446 . -15) (undo-tree-id447 . -15) (undo-tree-id448 . -15) (undo-tree-id449 . -15) (undo-tree-id450 . -15) (undo-tree-id451 . -15) (undo-tree-id452 . -15) 506) ((491 . 508)) (25450 18152 700039 337000) 0 nil])
([nil nil ((#("
N = 10
θs = range(-π, π; length = N)
X = mapreduce(x -> [cos(x), sin(x)], hcat, θs)
C = pairwise(SqEuclidean(), X)
C /= mean(C)

plot(plots_all[1])
" 0 34 (fontified t) 34 38 (fontified t) 38 149 (fontified t)) . 1683) (undo-tree-id1561 . -129) (undo-tree-id1562 . -149) (undo-tree-id1563 . -129) (t 25450 18155 389038 277000)) ((1683 . 1832)) (25450 18724 613770 478000) 0 nil])
nil
([nil nil ((#("    Cthresh = minimum(C[C .> 0])/2
" 0 4 (fontified t) 4 14 (fontified t) 14 21 (fontified t) 21 33 (fontified t) 33 34 (rear-nonsticky t fontified t) 34 35 (fontified t)) . 510) (undo-tree-id1564 . -34) (undo-tree-id1565 . -17) (undo-tree-id1566 . -17) (undo-tree-id1567 . -17) (undo-tree-id1568 . -17) (undo-tree-id1569 . -17) (undo-tree-id1570 . -17) (undo-tree-id1571 . -17) (undo-tree-id1572 . -17) (undo-tree-id1573 . -17) (undo-tree-id1574 . -17) (undo-tree-id1575 . -17) (undo-tree-id1576 . -17) (undo-tree-id1577 . -17) (undo-tree-id1578 . -17) (undo-tree-id1579 . -17) (undo-tree-id1580 . -17) (undo-tree-id1581 . -17) (undo-tree-id1582 . -17) (undo-tree-id1583 . -17) (undo-tree-id1584 . -17) (undo-tree-id1585 . -17) (undo-tree-id1586 . -17) (undo-tree-id1587 . -17) (undo-tree-id1588 . -17) (undo-tree-id1589 . -17) (undo-tree-id1590 . -17) (undo-tree-id1591 . -17) (undo-tree-id1592 . -17) (undo-tree-id1593 . -17) (undo-tree-id1594 . -17) (undo-tree-id1595 . -17) (undo-tree-id1596 . -17) (undo-tree-id1597 . -17) (undo-tree-id1598 . -17) (undo-tree-id1599 . -17) (undo-tree-id1600 . -17) (undo-tree-id1601 . -17) (undo-tree-id1602 . -17) (undo-tree-id1603 . -17) (undo-tree-id1604 . -17) (undo-tree-id1605 . -17) (undo-tree-id1606 . -17) (undo-tree-id1607 . -17) (undo-tree-id1608 . -17) (undo-tree-id1609 . -17) (undo-tree-id1610 . -17) (undo-tree-id1611 . -17) (undo-tree-id1612 . -17) (undo-tree-id1613 . -17) (undo-tree-id1614 . -17) (undo-tree-id1615 . -17) (undo-tree-id1616 . -17) (undo-tree-id1617 . -17) (undo-tree-id1618 . -17) (undo-tree-id1619 . -17) (undo-tree-id1620 . -17) (undo-tree-id1621 . -17) (undo-tree-id1622 . -17) (undo-tree-id1623 . -17) (undo-tree-id1624 . -17) (undo-tree-id1625 . -17) (undo-tree-id1626 . -17) (undo-tree-id1627 . -17) (undo-tree-id1628 . -17) (undo-tree-id1629 . -17) (undo-tree-id1630 . -17) (undo-tree-id1631 . -17) (undo-tree-id1632 . -17) (undo-tree-id1633 . -17) (undo-tree-id1634 . -17) (undo-tree-id1635 . -17) (undo-tree-id1636 . -17) (undo-tree-id1637 . -17) (undo-tree-id1638 . -17) (undo-tree-id1639 . -17) (undo-tree-id1640 . -17) (undo-tree-id1641 . -17) (undo-tree-id1642 . -17) (undo-tree-id1643 . -17) (undo-tree-id1644 . -17) (undo-tree-id1645 . -17) (undo-tree-id1646 . -17) (undo-tree-id1647 . -17) (undo-tree-id1648 . -17) (undo-tree-id1649 . -17) (undo-tree-id1650 . -17) (undo-tree-id1651 . -17) (undo-tree-id1652 . -17) (undo-tree-id1653 . -17) (undo-tree-id1654 . -17) (undo-tree-id1655 . -17) (undo-tree-id1656 . -17) (undo-tree-id1657 . -17) (undo-tree-id1658 . -17) (undo-tree-id1659 . -17) (undo-tree-id1660 . -17) (undo-tree-id1661 . -17) (undo-tree-id1662 . -17) (undo-tree-id1663 . -17) (undo-tree-id1664 . -17) (undo-tree-id1665 . -17) (undo-tree-id1666 . -17) (undo-tree-id1667 . -17) (undo-tree-id1668 . -17) (undo-tree-id1669 . -17) (undo-tree-id1670 . -17) (undo-tree-id1671 . -17) (undo-tree-id1672 . -17) (undo-tree-id1673 . -17) (undo-tree-id1674 . -17) (undo-tree-id1675 . -17) (undo-tree-id1676 . -17) (undo-tree-id1677 . -17) (undo-tree-id1678 . -17) (undo-tree-id1679 . -17) (undo-tree-id1680 . -17) (undo-tree-id1681 . -17) (undo-tree-id1682 . -17) (undo-tree-id1683 . -17) (undo-tree-id1684 . -17) (undo-tree-id1685 . -17) (undo-tree-id1686 . -17) (undo-tree-id1687 . -17) (undo-tree-id1688 . -17) (undo-tree-id1689 . -17) (undo-tree-id1690 . -17) (undo-tree-id1691 . -17) (undo-tree-id1692 . -17) (undo-tree-id1693 . -17) (undo-tree-id1694 . -17) (undo-tree-id1695 . -17) (undo-tree-id1696 . -17) (undo-tree-id1697 . -17) (undo-tree-id1698 . -17) (undo-tree-id1699 . -17) (undo-tree-id1700 . -17) (undo-tree-id1701 . -17) (undo-tree-id1702 . -17) (undo-tree-id1703 . -17) (undo-tree-id1704 . -17) (undo-tree-id1705 . -17) (undo-tree-id1706 . -17) (undo-tree-id1707 . -17) (undo-tree-id1708 . -17) (undo-tree-id1709 . -17) (undo-tree-id1710 . -17) (undo-tree-id1711 . -17) (undo-tree-id1712 . -17) (undo-tree-id1713 . -17) (undo-tree-id1714 . -17) (undo-tree-id1715 . -17) (undo-tree-id1716 . -17) (undo-tree-id1717 . -17) (undo-tree-id1718 . -17) (undo-tree-id1719 . -17) (undo-tree-id1720 . -17) (undo-tree-id1721 . -17) (undo-tree-id1722 . -17) (undo-tree-id1723 . -17) (undo-tree-id1724 . -17) (undo-tree-id1725 . -14) (undo-tree-id1726 . 14) (undo-tree-id1727 . -14) (undo-tree-id1728 . -14) (undo-tree-id1729 . -14) (undo-tree-id1730 . -14) (undo-tree-id1731 . -14) (undo-tree-id1732 . -14) (undo-tree-id1733 . -14) (undo-tree-id1734 . -14) (undo-tree-id1735 . -14) (undo-tree-id1736 . -14) (undo-tree-id1737 . -14) (undo-tree-id1738 . -14) (undo-tree-id1739 . -14) (undo-tree-id1740 . -14) (undo-tree-id1741 . -14) (undo-tree-id1742 . -14) (undo-tree-id1743 . -14) (undo-tree-id1744 . -14) (undo-tree-id1745 . -14) (undo-tree-id1746 . -14) (undo-tree-id1747 . -14) (undo-tree-id1748 . -14) (undo-tree-id1749 . -14) (undo-tree-id1750 . -14) (undo-tree-id1751 . -14) (undo-tree-id1752 . -14) (undo-tree-id1753 . 14) (undo-tree-id1754 . -17) (undo-tree-id1755 . -17) (undo-tree-id1756 . -17) (undo-tree-id1757 . -17) (undo-tree-id1758 . -17) (undo-tree-id1759 . -17) (undo-tree-id1760 . -17) (undo-tree-id1761 . -17) (undo-tree-id1762 . -17) (undo-tree-id1763 . -17) (undo-tree-id1764 . -17) (undo-tree-id1765 . -17) (undo-tree-id1766 . -17) (undo-tree-id1767 . -17) (undo-tree-id1768 . -17) (undo-tree-id1769 . -17) (undo-tree-id1770 . -17) (undo-tree-id1771 . -17) (undo-tree-id1772 . -17) (undo-tree-id1773 . -17) (undo-tree-id1774 . -17) (undo-tree-id1775 . -17) (undo-tree-id1776 . -17) (undo-tree-id1777 . -17) (undo-tree-id1778 . -17) (undo-tree-id1779 . -17) (undo-tree-id1780 . -17) (undo-tree-id1781 . -17) (undo-tree-id1782 . -17) (undo-tree-id1783 . -17) (undo-tree-id1784 . -17) (undo-tree-id1785 . -17) (undo-tree-id1786 . -17) (undo-tree-id1787 . -17) (undo-tree-id1788 . -17) (undo-tree-id1789 . -17) (undo-tree-id1790 . -17) (undo-tree-id1791 . -17) (undo-tree-id1792 . -17) (undo-tree-id1793 . -17) (undo-tree-id1794 . -17) (undo-tree-id1795 . -17) (undo-tree-id1796 . -17) (undo-tree-id1797 . -17) (undo-tree-id1798 . -17) (undo-tree-id1799 . -17) (undo-tree-id1800 . -17) (undo-tree-id1801 . -17) (undo-tree-id1802 . -17) (undo-tree-id1803 . -17) (undo-tree-id1804 . -17) (undo-tree-id1805 . -33) (undo-tree-id1806 . 1) (undo-tree-id1807 . -4) (undo-tree-id1808 . 1) (undo-tree-id1809 . 1) (undo-tree-id1810 . 1) (undo-tree-id1811 . -4) (undo-tree-id1812 . 1) (undo-tree-id1813 . -33) (undo-tree-id1814 . 1) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) (undo-tree-id1825 . -4) (undo-tree-id1826 . -4) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) (undo-tree-id1829 . -4) (undo-tree-id1830 . -4) (undo-tree-id1831 . -4) (undo-tree-id1832 . -4) (undo-tree-id1833 . -4) (undo-tree-id1834 . -4) (undo-tree-id1835 . -4) (undo-tree-id1836 . -4) (undo-tree-id1837 . -4) (undo-tree-id1838 . -4) (undo-tree-id1839 . -4) (undo-tree-id1840 . -4)) ((510 . 545)) (25450 18724 766118 418000) 0 nil] [nil nil ((#("minimum" 0 7 (fontified t)) . 524) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -3) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -3) (undo-tree-id481 . -3) (undo-tree-id482 . -3) (undo-tree-id483 . -3) (undo-tree-id484 . -3) (undo-tree-id485 . -3) (undo-tree-id486 . -3) (undo-tree-id487 . -3) (undo-tree-id488 . -3) (undo-tree-id489 . -3) (undo-tree-id490 . -3) (undo-tree-id491 . -3) (undo-tree-id492 . -3) (undo-tree-id493 . -3) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . -3) (undo-tree-id497 . -3) (undo-tree-id498 . -3) (undo-tree-id499 . -3) (undo-tree-id500 . -3) (undo-tree-id501 . -3) (undo-tree-id502 . -3) (undo-tree-id503 . -3) (undo-tree-id504 . -3) (undo-tree-id505 . -3) (undo-tree-id506 . -3) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -3) (undo-tree-id512 . -3) (undo-tree-id513 . -3) (undo-tree-id514 . -3) (undo-tree-id515 . -3) (undo-tree-id516 . -3) (undo-tree-id517 . -3) (undo-tree-id518 . -3) (undo-tree-id519 . -3) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . -3) (undo-tree-id535 . -3) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (undo-tree-id538 . -3) (undo-tree-id539 . -3) (undo-tree-id540 . -3) (undo-tree-id541 . -3) (undo-tree-id542 . -3) (undo-tree-id543 . -3) (undo-tree-id544 . -3) (undo-tree-id545 . -3) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) 527) ((524 . 531)) (25450 18711 954342 387000) 0 nil])
([nil nil ((1474 . 1476)) ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1474) (undo-tree-id878 . -1)) (25450 18724 907133 281000) 0 nil])
([nil nil ((524 . 525)) ((#(" " 0 1 (fontified t)) . 524)) (25450 18711 953806 844000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1565) (undo-tree-id1848 . -1) (#("2" 0 1 (fontified t)) . -1566) (undo-tree-id1849 . -1) 1567) nil (25450 19184 233353 438000) 0 nil])
nil
([nil nil ((#("10, 50, 100," 0 12 (fontified t)) . 1548) (undo-tree-id1844 . -11) (undo-tree-id1845 . -11) (undo-tree-id1846 . -11) (undo-tree-id1847 . -11) 1559) nil (25450 19184 233344 778000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1548) (undo-tree-id1843 . 1)) nil (25450 19184 233333 324000) 0 nil])
([nil nil ((1551 . 1553)) nil (25450 19184 233327 597000) 0 nil])
([nil nil ((1595 . 1597)) nil (25450 19184 233323 826000) 0 nil])
([nil current ((1645 . 1652) (#("-" 0 1 (fontified t)) . -1645) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) 1646 (1643 . 1646) (1640 . 1643) (1638 . 1640)) nil (25450 19184 233312 791000) 0 nil])
nil
